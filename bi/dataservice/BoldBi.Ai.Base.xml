<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BoldBi.Ai.Base</name>
    </assembly>
    <members>
        <member name="T:BoldBi.Ai.Base.AiAppSettings">
            <summary>
            Provides application settings for the AI module.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.IsMiddlewareEnabled">
            <summary>
            Gets or sets a value indicating whether middleware is enabled.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.IsDatabaseLoggingEnabled">
            <summary>
            Gets or sets a value indicating whether database is logging.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.ConnectionStrings">
            <summary>
            Gets or sets the connection strings for the application.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.OpenAiCredential">
            <summary>
            Gets or sets the OpenAI credentials.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.AzureAiCredentials">
            <summary>
            Gets or sets the Azure AI credentials.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.IdentityServer">
            <summary>
            Gets or sets the identity server settings.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.Logger">
            <summary>
            Gets or sets the logger for logging purposes.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.AuthorizationToken">
            <summary>
            Gets or sets the authorization token for the application.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.SandboxRequestLimit">
            <summary>
            Gets or sets the request limit for the sandbox environment.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.StaticTokenEncryption">
            <summary>
            Gets or sets keys needed for decrypted AI token.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.EncodedAuthorizationToken">
            <summary>
            Gets or sets encoded authorization token.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AiAppSettings.CurrentAIService">
            <summary>
            Gets or sets the current AI service provider.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.StaticTokenEncryption">
            <summary>
            Represents Key and IV used for encryption.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.StaticTokenEncryption.Key">
            <summary>
            Gets or sets the Key for encryption.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.StaticTokenEncryption.IV">
            <summary>
            Gets or sets the IV for encryption.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.ConnectionStrings">
            <summary>
            Represents connection strings for the application.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ConnectionStrings.AuditLogDb">
            <summary>
            Gets or sets the connection string for the audit log database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ConnectionStrings.MetaDb">
            <summary>
            Gets or sets the connection string for the metadata database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ConnectionStrings.MessageBus">
            <summary>
            Gets or sets the connection string for the message bus.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.IdentityServer">
            <summary>
            Represents the identity server configuration settings.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.IdentityServer.URL">
            <summary>
            Gets or sets the URL of the identity server.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.IdentityServer.ClientId">
            <summary>
            Gets or sets the client ID for the identity server.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.IdentityServer.ClientSecret">
            <summary>
            Gets or sets the client secret for the identity server.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.OpenAICredential">
            <summary>
            Represents credentials for OpenAI services.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.OpenAICredential.OpenAIkey">
            <summary>
            Gets or sets the OpenAI key.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.OpenAICredential.ChatModel">
            <summary>
            Gets or sets the chat model name.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.OpenAICredential.TextGenerationModel">
            <summary>
            Gets or sets the text generation model name.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.OpenAICredential.WidgetCreationModel">
            <summary>
            Gets or sets the widget creation model name.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.OpenAICredential.WidgetPropertyUpdateModel">
            <summary>
            Gets or sets the widget property update model name.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.AiAssistanceOperations">
            <summary>
            Handles operations related to AI assistance including processing chat queries,
            generating AI responses, validating JSON, and logging activities.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.#ctor(BoldBi.Ai.Base.Contracts.IConnectionFactory,BoldBi.Ai.Base.Contracts.IChatMessageProcessor,BoldBi.Ai.Base.Contracts.IUsageProcessor,BoldBi.Ai.Base.Contracts.IResponseBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.AiAssistanceOperations"/> class.
            </summary>
            <param name="connectionFactory">Factory to create AI connection instances.</param>
            <param name="chatMessageProcessor">Processor for AI chat message handling.</param>
            <param name="usageProcessor">Processor to calculate and log AI usage metrics.</param>
            <param name="responseBuilder">Builder to construct AI responses.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ReleventQuestionProcess(System.String,System.String)">
            <summary>
            Processes the provided JSON input to generate relevant questions based on the provided table schema.
            </summary>
            <param name="jsonInput">JSON string containing the input data for question generation.</param>
            <param name="licenseKey">Unique license key identifying the user or tenant.</param>
            <returns>An object containing the processed relevant questions or error details if an exception occurs.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ProcessQnaQuery(System.String,System.String)">
            <summary>
            Processes the question answer widget creation based on the provided JSON input for relevant field information.
            </summary>
            <param name="jsonInput">JSON string containing input data for processing question answer widgets.</param>
            <param name="licenseKey">Unique license key identifying the user or tenant.</param>
            <returns>An object containing information about widget creation or an error message if an exception occurs.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ProcessChatQueryUsingStructureOutput(System.String,System.String)">
            <summary>
            Processes the provided JSON input to extract and provide widget creation or widget update information for the AI Chat Assistant.
            </summary>
            <param name="jsonInput">A JSON string containing the input data for processing.</param>
            <param name="licenseKey">Tenant ID information for each user.</param>
            <returns>The result contains an object with information about widget creation or widget property updates.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ProcessChatQuery(System.String,System.String)">
            <summary>
            Processes the chat-based queries to determine if widgets need to be created or updated based on the JSON input.
            </summary>
            <param name="jsonInput">JSON string containing input data for processing chat queries.</param>
            <param name="licenseKey">Unique license key identifying the user or tenant.</param>
            <returns>An object containing information about widget operations or error details if an exception occurs.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ValidateInput(System.String)">
            <summary>
            Validates and converts the input JSON string into an <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest"/> object.
            </summary>
            <param name="jsonInput">The JSON string to validate and parse.</param>
            <returns>The parsed <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest"/> object.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.IsValidResponse(System.String)">
            <summary>
            Checks if a given JSON string has a valid response structure.
            </summary>
            <param name="jsonString">The JSON string to validate.</param>
            <returns>True if the JSON is valid; otherwise, false.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.GetMessage(System.String,System.String)">
            <summary>
            Retrieves a greeting message from AI response based on content.
            </summary>
            <param name="content">Response content from the AI.</param>
            <param name="question">User's original question.</param>
            <returns>A ChatResponse containing a greeting message if matched, otherwise the AI's raw response.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.GenerateJsonResponseUsingAi(System.String,System.String)">
            <summary>
            Generates a JSON response using the AI for a specified operation and mode.
            </summary>
            <param name="question">The input question to the AI.</param>
            <param name="licenseKey">The license key for the operation.</param>
            <returns>The AI-generated response as <see cref="T:Microsoft.SemanticKernel.TextContent"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.GenerateAIResponseAsync(BoldBi.Ai.Base.Contracts.IBoldAiProcess,BoldBi.Ai.Base.Enums.AiOperation,BoldBi.Ai.Base.Enums.Mode,System.String,System.String,System.String,System.String)">
            <summary>
            Generates an AI response using the provided AI process and parameters.
            </summary>
            <param name="process">The AI process instance.</param>
            <param name="operation">The AI operation to perform.</param>
            <param name="mode">The mode of operation.</param>
            <param name="question">The input question to the AI.</param>
            <param name="licenseKey">The license key for the operation.</param>
            <param name="tableInfo">Optional table information for the AI.</param>
            <param name="previousHistories">Optional history of previous queries.</param>
            <returns>The AI-generated response as <see cref="T:Microsoft.SemanticKernel.TextContent"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.FormatAndValidateJson(Microsoft.SemanticKernel.TextContent,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Formats and validates a JSON response generated by the AI.
            </summary>
            <param name="response">The AI-generated response.</param>
            <param name="licenseKey">The license key for the operation.</param>
            <param name="request">The AI assistance request details.</param>
            <returns>A validated and formatted JSON string.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown if the JSON is invalid after formatting.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.ProcessAiService(BoldBi.Ai.Base.Enums.AiOperation,BoldBi.Ai.Base.Enums.Mode,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String,System.String)">
            <summary>
            Processes an AI service operation and generates the appropriate AI response.
            </summary>
            <param name="aiOperation">The AI operation to perform.</param>
            <param name="mode">The mode of operation.</param>
            <param name="question">The input question to the AI.</param>
            <param name="licenseKey">The license key for the operation.</param>
            <param name="aiAssistanceRequest">Details of the AI assistance request.</param>
            <param name="tableInfo">Optional table information for the AI.</param>
            <param name="previousHistories">Optional history of previous queries.</param>
            <returns>The AI-generated response as an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.HandleWidgetOperations(BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String)">
            <summary>
            Handles the widget creation, update, and deletion operations based on the provided input data.
            </summary>
            <param name="result">InputDataBuilder containing details about widgets to create, update, or delete.</param>
            <param name="aiAssistanceRequest">AI assistance request object containing details such as Query ID and session info.</param>
            <param name="licenseKey">Unique license key identifying the user or tenant.</param>
            <returns>A ChatResponse containing information about widget operations including created, updated or deleted widgets.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AiAssistanceOperations.HandleWidgetForStructureOutputOperations(BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String)">
            <summary>
            Handles the widget creation, update, and deletion operations based on the provided input data.
            </summary>
            <param name="result">InputDataBuilder containing details about widgets to create, update, or delete.</param>
            <param name="aiAssistanceRequest">AI assistance request object containing details such as Query ID and session info.</param>
            <param name="licenseKey">Unique license key identifying the user or tenant.</param>
            <returns>A ChatResponse containing information about widget operations including created, updated or deleted widgets.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.AIConnection.AiConnectionFactory">
            <summary>
            Factory class responsible for creating AI connections based on specified providers and modes.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AiConnectionFactory.CreateAiConnection(BoldBi.Ai.Base.Enums.AiProvider,System.Nullable{BoldBi.Ai.Base.Enums.Mode})">
            <summary>
            Asynchronously creates an AI connection based on the specified provider type and mode.
            </summary>
            <param name="providerType">The AI provider type.</param>
            <param name="mode">The operational mode (optional).</param>
            <returns>A task that represents the asynchronous creation operation. The task result contains the AI connection.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AiConnectionFactory.CreateVisualConnection(BoldBi.Ai.Base.Enums.AiProvider,BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Asynchronously creates a visual connection for AI based on the specified provider type and AI operation.
            </summary>
            <param name="type">The AI provider type.</param>
            <param name="operation">The AI operation to perform.</param>
            <returns>A task that represents the asynchronous creation operation. The task result contains the AI connection.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AiConnectionFactory.OpenAiGetChatModelConnection(BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Asynchronously gets an OpenAI chat model connection based on the specified AI operation.
            </summary>
            <param name="operation">The AI operation to perform.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the AI connection.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AiConnectionFactory.AzureAiGetChatModelConnection(BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Asynchronously gets an Azure AI chat model connection based on the specified AI operation.
            </summary>
            <param name="operation">The AI operation to perform.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the AI connection.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection">
            <summary>
            Represents a connection to Azure AI services, providing methods and properties
            to interact with Azure's AI capabilities.
            </summary>
            <remarks>
            This class implements the <see cref="T:BoldBi.Ai.Base.AIConnection.IAiConnection"/> interface, enabling
            functionality for executing chat and text-based AI processes. It is designed
            for internal use within the application.
            </remarks>
            <seealso cref="T:BoldBi.Ai.Base.AIConnection.IAiConnection"/>
        </member>
        <member name="P:BoldBi.Ai.Base.AIConnection.AzureAiConnection.UsageTokens">
            <summary>
            Gets or sets the usage tokens for Azure AI connection.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateFieldInfoConnection">
            <summary>
            Creates and returns a singleton instance for Field Info connection.
            </summary>
            <returns>A singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateChartProperties">
            <summary>
            Creates and returns a singleton instance for Chart Properties connection.
            </summary>
            <returns>A singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateViewConnection">
            <summary>
            Creates and returns a singleton instance for View connection asynchronously.
            </summary>
            <returns>A singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateDesignerConnection">
            <summary>
            Creates and returns a singleton instance for Designer connection asynchronously.
            </summary>
            <returns>A singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateDefaultConnection">
            <summary>
            Creates and returns a singleton instance for Default connection asynchronously.
            </summary>
            <returns>A singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.AzureAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.ExecuteChatProcess(Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Executes the chat process based on the provided chat message content and returns a populated <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/> object.
            </summary>
            <param name="chatMessageContent">The content of the chat message containing tool calls and other information.</param>
            <returns>
            A task representing the asynchronous operation. The result contains an <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/> object populated
            with data based on the operations performed during the chat process. Returns <c>null</c> if no function calls are present.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="chatMessageContent"/> is null.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.ExecuteResponseFormatAsync(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.ExecuteChatMessageContent(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.Boolean)">
            <summary>
            Executes the chat message process based on the provided AI assistance request and returns a <see cref="T:Microsoft.SemanticKernel.ChatMessageContent"/> object.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing the query and previous questions.</param>
            <param name="needPreviousInfo">A boolean flag indicating whether to include previous user and assistant messages in the chat history.</param>
            <returns>
            A task representing the asynchronous operation. The result is a <see cref="T:Microsoft.SemanticKernel.ChatMessageContent"/> object containing the AI's response.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="aiAssistanceRequest"/> is null.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.ExecuteTextContentAsync(System.String,System.String)">
            <summary>
            Executes the text generation process based on the provided prompt and question.
            </summary>
            <param name="messages">The system prompt to guide the AI's response generation.</param>
            <param name="question">The user-provided question to be answered by the AI.</param>
            <returns>
            A task representing the asynchronous operation. The result is a <see cref="T:Microsoft.SemanticKernel.TextContent"/> object containing the AI-generated response.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="messages"/> or <paramref name="question"/> is null or empty.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateKernel(System.String,System.String,System.String)">
            <summary>
            Creates a kernel with the specified parameters.
            </summary>
            <param name="azureAiDeploymentName">The Azure AI deployment name.</param>
            <param name="azureAiResourceName">The Azure AI resource name.</param>
            <param name="azureAiKey">The Azure AI key.</param>
            <returns>An instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/>.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">Thrown when there is a failure in creating the kernel.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateViewKernel">
            <summary>
            Creates a view kernel.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/> configured for view operations.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.AzureAiConnection.CreateDesignerKernel">
            <summary>
            Creates a designer kernel asynchronously.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/> configured for designer operations.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.AIConnection.IAiConnection">
            <summary>
            Defines the interface for AI connections, providing methods to interact with AI services.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AIConnection.IAiConnection.UsageTokens">
            <summary>
            Gets or sets the usage tokens for managing AI resource consumption.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.IAiConnection.ExecuteTextContentAsync(System.String,System.String)">
            <summary>
            Executes a text-based AI process using the provided system messages and user question.
            </summary>
            <param name="messages">The system prompt that guides the AI response.</param>
            <param name="question">The user question to be answered by the AI.</param>
            <returns>
            A task representing the asynchronous operation. The result is a <see cref="T:Microsoft.SemanticKernel.TextContent"/>
            containing the AI-generated response.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.IAiConnection.ExecuteChatMessageContent(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.Boolean)">
            <summary>
            Executes a chat-based AI process using the provided assistance request and optional history.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing the query and previous context.</param>
            <param name="needPreviousInfo">A boolean flag indicating whether to include previous messages in the context.</param>
            <returns>
            A task representing the asynchronous operation. The result is a <see cref="T:Microsoft.SemanticKernel.ChatMessageContent"/>
            containing the AI-generated chat response.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.IAiConnection.ExecuteChatProcess(Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Processes chat message content and generates an <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/> with AI-generated operations.
            </summary>
            <param name="chatMessageContent">The chat message content containing AI response details.</param>
            <returns>
            A task representing the asynchronous operation. The result is an <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/>
            containing structured operations based on the AI response.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.IAiConnection.ExecuteResponseFormatAsync(System.String,System.String,System.String)">
            <summary>
            Executes a request to the OpenAI Chat Completions API and formats the response.
            </summary>
            <param name="messages">The input message content to be sent to the API.</param>
            <param name="question">The question or prompt for the API.</param>
            <param name="schemaName"> json format name. </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, containing the response content and metadata,
            including token usage information.
            </returns>
        </member>
        <member name="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection">
            <summary>
            Represents a connection to the OpenAI service for interacting with AI models.
            Implements the <see cref="T:BoldBi.Ai.Base.AIConnection.IAiConnection"/> interface to provide functionality for sending requests and receiving responses from the OpenAI API.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> class.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.AIConnection.OpenAiConnection.UsageTokens">
            <summary>
            Gets or sets the usage tokens for Azure AI connection.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateFieldInfoConnection">
            <summary>
            Creates or retrieves a singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> configured for FieldInfo operations.
            </summary>
            <returns>The singleton instance of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateChartProperties">
            <summary>
            Creates or retrieves a singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> configured for chart properties.
            </summary>
            <returns>The singleton instance of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateViewConnection">
            <summary>
            Creates or retrieves a singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> with view connection configuration.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> instance.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateDesignerConnection">
            <summary>
            Creates or retrieves a singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> with designer connection configuration.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> instance.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateDefaultConnection">
            <summary>
            Creates or retrieves a singleton instance of <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> with default configuration.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the <see cref="T:BoldBi.Ai.Base.AIConnection.OpenAiConnection"/> instance.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.ExecuteChatProcess(Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Executes a chat process based on the provided AI assistance request and returns a builder object with classified input data.
            </summary>
            <param name="chatMessageContent">The chat message content containing details of the AI assistance request.</param>
            <returns>
            A task representing the asynchronous operation, which returns an <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/> object
            populated with the classified data for widget creation, updates, or deletion.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.ExecuteChatMessageContent(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.Boolean)">
            <summary>
            Executes the chat message content generation based on the AI assistance request and optionally includes previous chat history.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing the current query and optional previous questions.</param>
            <param name="needPreviousInfo">Indicates whether to include previous chat history in the chat session.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the generated chat message content.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.ExecuteTextContentAsync(System.String,System.String)">
            <summary>
            Gets the result from widget creation or updates.
            </summary>
            <param name="messages">System messages about widget creation or updates.</param>
            <param name="question">User questions.</param>
            <returns>The output from the AI chat assistant as a JSON-serialized string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.ExecuteResponseFormatAsync(System.String,System.String,System.String)">
            <summary>
            Executes a request to the OpenAI Chat Completions API and formats the response.
            </summary>
            <param name="messages">The input message content to be sent to the API.</param>
            <param name="question">The question or prompt for the API.</param>
            <param name="schemaName">Receives the schema to generate structure for openai.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, containing the response content and metadata,
            including token usage information.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateKernel(System.String,System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/> configured with OpenAI chat completion.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the configured <see cref="T:Microsoft.SemanticKernel.Kernel"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateViewKernel">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/> configured with OpenAI chat completion and a View plugin.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the configured <see cref="T:Microsoft.SemanticKernel.Kernel"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.CreateDesignerKernel">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SemanticKernel.Kernel"/> configured with OpenAI chat completion and a designer plugin.
            </summary>
            <returns>A task representing the asynchronous operation, with a result of the configured <see cref="T:Microsoft.SemanticKernel.Kernel"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.AIConnection.OpenAiConnection.PrepareInput(System.String,System.String,System.String)">
            <summary>
            prepare input based on open-ai structured-output structure.
            </summary>
            <param name="message">receives the formed input with prompt and table info.</param>
            <param name="question">receives question asked by user.</param>
            <param name="schemaName">receives schema name for open ai.</param>
            <returns>open-ai input context.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.ChatCore.DesignerChatPlugin">
            <summary>
            Provides chat-based functions for managing and interacting with visuals (e.g., charts, grids, cards) through Data Query Language (DQL) operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ChatCore.DesignerChatPlugin.CreateWidget(System.String)">
            <summary>
            Creates or adds a new visual, such as a chart, grid, or card, based on a user's question involving Data Query Language (DQL) operations.
            </summary>
            <param name="question">The user's question to create or show a widget.</param>
            <returns>A <see cref="T:BoldBi.Ai.Base.ChatCore.SemanticResponse"/> object containing the user's question and the operation type for creating the widget.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ChatCore.DesignerChatPlugin.UpdateData(System.String,System.String)">
            <summary>
            Updates or changes an existing visual (e.g., chart, grid, card) based on the provided query and visual name, involving Data Query Language (DQL) operations.
            </summary>
            <param name="query">The user's question or query for updating the widget.</param>
            <param name="widgetname">The name of the visual to update. Default is "selected_widget".</param>
            <returns>A <see cref="T:BoldBi.Ai.Base.ChatCore.SemanticResponse"/> object with the user's query, the operation type for updating data, and the widget name.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ChatCore.DesignerChatPlugin.UpdateWidget(System.String,System.String)">
            <summary>
            Updates the styling of visuals (e.g., chart, grid, card) based on the provided query and visual name.
            </summary>
            <param name="query">The query to update or change the visual's properties.</param>
            <param name="widgetname">The name of the visual to update. Default is "selected_widget".</param>
            <returns>A <see cref="T:BoldBi.Ai.Base.ChatCore.SemanticResponse"/> object with the query, the operation type for updating the widget's styling, and the widget name.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ChatCore.DesignerChatPlugin.DeleteWidget(System.String,System.String)">
            <summary>
            Deletes the specified visual (e.g., chart, grid, card) based on the user's question and the visual's name.
            </summary>
            <param name="question">The user's question regarding deleting the widget.</param>
            <param name="widgetName">The name of the visual to delete. Default is "selected_widget".</param>
            <returns>A <see cref="T:BoldBi.Ai.Base.ChatCore.SemanticResponse"/> object with the question, the operation type for deleting the widget, and the widget name.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.ChatCore.SemanticResponse">
            <summary>
            Represents the response structure for AI-driven operations on visuals, including the user's question, operation type, and target widget name.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ChatCore.SemanticResponse.Question">
            <summary>
            Gets or sets the question or query posed by the user.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ChatCore.SemanticResponse.Operation">
            <summary>
            Gets or sets the type of operation to be performed, such as creating, updating, or deleting a widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ChatCore.SemanticResponse.WidgetName">
            <summary>
            Gets or sets the name of the widget that the operation will target.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.ChatCore.ViewChatPlugin">
            <summary>
            Provides functionality for creating or displaying various types of widgets, such as charts, grids, maps, and cards.
            The widget creation involves operations related to Data Query Language (DQL).
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ChatCore.ViewChatPlugin.CreateWidget(System.String)">
            <summary>
            Creates or adds a visual (e.g., chart, grid, map, or card) based on the user's question,
            involving Data Query Language (DQL) operations.
            </summary>
            <param name="question">The user's question regarding the creation or display of the widget.</param>
            <returns>A <see cref="T:BoldBi.Ai.Base.ChatCore.SemanticResponse"/> object containing the user's question and the operation type for creating the widget.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Constants">
            <summary>
            Contains constant values used throughout the BoldBi AI application.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Constants.GetUmsToken">
            <summary>
            The endpoint to obtain the UMS (User Management System) token.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Constants.ActivateAILicense">
            <summary>
            The endpoint to activate the AI license for a specific tenant.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Constants.CreateWidget">
            <summary>
            The log message for calling the CreateWidget function in the Semantic Kernel.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Constants.MemoryCollectionName">
            <summary>
            The name of the memory collection for semantic search.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Constants.EmbeddingModel">
            <summary>
            The identifier for the embedding model used in AI processing.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IAiAssistanceOperations">
            <summary>
            Defines operations for AI assistance, including processing chat and question answer widget queries, and handling relevant question retrieval.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IAiAssistanceOperations.ProcessChatQuery(System.String,System.String)">
            <summary>
            Processes a chat-based query from the user and returns a response.
            </summary>
            <param name="jsonInput">The JSON input containing the user's chat query.</param>
            <param name="licenseKey">The license key required for processing the request.</param>
            <returns>A task representing the asynchronous operation, with an object containing the result of the chat query processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IAiAssistanceOperations.ProcessQnaQuery(System.String,System.String)">
            <summary>
            Processes a question answer widget query from the user and returns a response.
            </summary>
            <param name="jsonInput">The JSON input containing the user's question answer widget query.</param>
            <param name="licenseKey">The license key required for processing the request.</param>
            <returns>A task representing the asynchronous operation, with an object containing the result of the question answer widget query processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IAiAssistanceOperations.ReleventQuestionProcess(System.String,System.String)">
            <summary>
            Retrieves responses for relevant questions based on the user's input.
            </summary>
            <param name="jsonInput">The JSON input containing the user's relevant question query.</param>
            <param name="licenseKey">The license key required for processing the request.</param>
            <returns>A task representing the asynchronous operation, with an object containing the result of processing the relevant question query.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IAiAssistanceOperations.ProcessChatQueryUsingStructureOutput(System.String,System.String)">
            <summary>
            Processes a chat-based query from the user and returns a response.
            </summary>
            <param name="jsonInput">The JSON input containing the user's chat query.</param>
            <param name="licenseKey">The license key required for processing the request.</param>
            <returns>A task representing the asynchronous operation, with an object containing the result of the chat query processing.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IAxisProperty">
            <summary>
            Defines the properties that any axis-related class should implement.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Contracts.IAxisProperty.Field">
            <summary>
            Gets or sets the field name for the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Contracts.IAxisProperty.DisplayName">
            <summary>
            Gets or sets the display name for the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Contracts.IAxisProperty.TableName">
            <summary>
            Gets or sets the table name associated with the axis.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IBoldAiProcess">
            <summary>
            Defines processes for AI-based operations, including input building, output generation, and message execution.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Contracts.IBoldAiProcess.RawInput">
            <summary>
            Gets the raw input string used in the AI process.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Contracts.IBoldAiProcess.RawOutput">
            <summary>
            Gets the raw output string generated by the AI process.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IBoldAiProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds an input string for the specified AI operation.
            </summary>
            <param name="operation">The AI operation type to perform.</param>
            <param name="tableInfo">Optional table information to include in the input.</param>
            <param name="previousQuestion">Optional previous question to reference in the input.</param>
            <returns>A string representing the built input for the AI operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IBoldAiProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Builds an output response based on the AI assistance request and response from OpenAI.
            </summary>
            <param name="aiAssistanceRequest">The request object containing information for the AI assistance process.</param>
            <param name="openAiResponse">The response text content received from OpenAI.</param>
            <param name="aiAssistanceResponse">Optional additional AI assistance response details to include.</param>
            <returns>A task representing the asynchronous operation, with an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/> containing the final output.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IBoldAiProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes a message processing operation with the AI connection.
            </summary>
            <param name="connection">The AI connection instance used to run the operation.</param>
            <param name="message">The message content to process.</param>
            <param name="question">The user's question to be answered.</param>
            <param name="licenseKey">The license key required for the operation.</param>
            <returns>A task representing the asynchronous operation, with <see cref="T:Microsoft.SemanticKernel.TextContent"/> containing the response text from OpenAI.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IChatMessageProcessor">
            <summary>
            Defines the contract for processing chat messages, including execution of message content and processing chat data.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IChatMessageProcessor.ExecuteChatMessageContent(BoldBi.Ai.Base.AIConnection.IAiConnection,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Executes the chat message content for a given assistance request.
            </summary>
            <param name="connection">The AI connection to be used for executing the chat message.</param>
            <param name="request">The request containing information related to the chat assistance.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the processed <see cref="T:Microsoft.SemanticKernel.ChatMessageContent"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IChatMessageProcessor.ExecuteChatProcess(BoldBi.Ai.Base.AIConnection.IAiConnection,Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Executes a chat process based on the provided chat message content.
            </summary>
            <param name="connection">The AI connection to be used for executing the chat process.</param>
            <param name="chatMessageContent">The content of the chat message to be processed.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the processed <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/>.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IConnectionFactory">
            <summary>
            Defines the contract for creating AI connections and managing usage tokens.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IConnectionFactory.CreateConnection(BoldBi.Ai.Base.Enums.Mode,BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Creates an AI connection based on the specified mode and operation type.
            </summary>
            <param name="mode">The mode of the AI connection.</param>
            <param name="operation">The operation to be performed by the AI connection.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the created <see cref="T:BoldBi.Ai.Base.AIConnection.IAiConnection"/> instance.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IConnectionFactory.UpdateUsageTokens(BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens)">
            <summary>
            Updates the usage tokens with the provided values.
            </summary>
            <param name="tokens">The usage tokens to be added to the current tokens.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IConnectionFactory.GetUsageTokens">
            <summary>
            Retrieves the current usage tokens.
            </summary>
            <returns>The current <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> instance containing the usage data.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IFieldBuilder">
            <summary>
            Defines the contract for a field builder, responsible for building fields based on the provided input.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IFieldBuilder.Build(System.String,System.String)">
            <summary>
            Builds a field based on the given input JSON and table information.
            </summary>
            <param name="inputJson">The JSON input containing the field construction parameters.</param>
            <param name="tableInfo">The table information required for the field construction process.</param>
            <returns>A task representing the asynchronous operation, with an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> as the result.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IResponseBuilder">
            <summary>
            Defines the contract for processing AI responses, including validation, formatting, and conversion of JSON data.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IResponseBuilder.IsValidJson(System.String)">
            <summary>
            Validates whether the provided JSON string is in a valid format.
            </summary>
            <param name="json">The JSON string to be validated.</param>
            <returns>A task that represents the asynchronous operation. The task result indicates whether the JSON is valid (<c>true</c>) or not (<c>false</c>).</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IResponseBuilder.FormatToValidJson(System.String)">
            <summary>
            Formats the given text into a valid JSON string.
            </summary>
            <param name="text">The text to be formatted into JSON.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the formatted valid JSON string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IResponseBuilder.GetAiService(BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Retrieves the appropriate AI service based on the specified operation type.
            </summary>
            <param name="type">The type of AI operation to be performed.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the corresponding <see cref="T:BoldBi.Ai.Base.Contracts.IBoldAiProcess"/> service.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IResponseBuilder.ConvertAiResponseToFieldInfo(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Converts the AI response JSON into a <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> object.
            </summary>
            <param name="json">The JSON response from the AI service.</param>
            <param name="aiAssistanceRequest">The original request used to process the AI query.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the converted <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> object.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.ISessionManager">
            <summary>
            Defines the contract for managing AI sessions, including creating and ending sessions.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.ISessionManager.CreateSession(System.String)">
            <summary>
            Creates a new session based on the provided input.
            </summary>
            <param name="jsonInput">The input data in JSON format used to create the session.</param>
            <returns>An object representing the created session.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.ISessionManager.EndSession(System.String)">
            <summary>
            Ends the session based on the provided input and performs any necessary cleanup.
            </summary>
            <param name="jsonInput">The input data in JSON format used to end the session.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an object representing the result of the session end process.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Contracts.IUsageProcessor">
            <summary>
            Defines the contract for processing usage data for AI operations, including tracking the usage of models and handling license details.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IUsageProcessor.ProcessUsage(OpenAI.Chat.ChatTokenUsage,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes the usage data for a specific AI operation.
            </summary>
            <param name="chatMessageContent">The usage data related to a chat message, typically including token counts and other related usage details.</param>
            <param name="licenseKey">The license key used to validate the usage of AI services.</param>
            <param name="modelId">The ID of the AI model being used in the operation.</param>
            <param name="request">The request object that contains additional information related to the AI operation, such as the context and the operation type.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Contracts.IUsageProcessor.ProcessUsage(System.Int32,System.Int32,System.Int32,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes and updates the usage information for a specified AI operation.
            </summary>
            <param name="inputToken">Input Token.</param>
            <param name="outputToken">Output Token.</param>
            <param name="totalToken">Total Token.</param>
            <param name="licenseKey">The license key used to validate the usage of AI services.</param>
            <param name="modelId">The ID of the AI model being used in the operation.</param>
            <param name="request">The request object that contains additional information related to the AI operation, such as the context and the operation type.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.BoldAiProcessFactory">
            <summary>
            Factory class for creating instances of different AI processes based on the specified AI operation.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.BoldAiProcessFactory.GetProcess(BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Gets an instance of an AI process based on the provided operation type.
            </summary>
            <param name="aiOperaton">The type of AI operation for which the process is to be created.</param>
            <returns>An instance of <see cref="T:BoldBi.Ai.Base.Contracts.IBoldAiProcess"/> corresponding to the specified operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess">
            <summary>
            A process for updating chart properties. It interacts with the AI connection to retrieve the chart's updated properties
            and formats the response to match the expected properties for a chart.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.RawInput">
            <summary>
            Gets the raw input for the process. This functionality is not implemented for the current process.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.RawOutput">
            <summary>
            Gets the raw output for the process. This functionality is not implemented for the current process.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the process of retrieving text content based on a message and question.
            </summary>
            <param name="connection">The AI connection to use for executing the message.</param>
            <param name="message">The message to send to the AI connection.</param>
            <param name="question">The question related to the chart properties.</param>
            <param name="licenseKey">The license key for the operation.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the <see cref="T:Microsoft.SemanticKernel.TextContent"/> response.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Builds the output based on the AI response and assistance request, formatting the response to match chart properties.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing the query.</param>
            <param name="openAiResponse">The raw response from the AI model.</param>
            <param name="aiAssistanceResponse">Optional AI assistance response for additional processing.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/> object.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds the input required for the process, specifically the visualization prompt.
            </summary>
            <param name="operation">The type of operation being performed.</param>
            <param name="tableInfo">Optional table information used in the prompt.</param>
            <param name="previousQuestion">Optional previous question for context.</param>
            <returns>The prepared input string for the operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.FindPropertyMatch(System.String)">
            <summary>
            Finds and corrects any property matches from the AI response by matching properties to known chart properties.
            </summary>
            <param name="answer">The raw response text from the AI.</param>
            <returns>A string representing the corrected chart properties in key-value format.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.PrepareVisualizationPrompt">
            <summary>
            Prepares the visualization prompt for chart updation operations.
            </summary>
            <returns>The prepared visualization prompt string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.ChartUpdationProcess.PrepareSystemMessage">
            <summary>
            Prepares the system message to instruct the AI on how to handle chart property-related queries.
            </summary>
            <returns>The system message string.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess">
            <summary>
            Handles the process of preparing inputs and outputs for creating a visual.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Constructs and prepares an input string for visualization based on the operation, table information, and a previous question.
            </summary>
            <param name="operation">The AI operation type (e.g., creating or updating a widget).</param>
            <param name="tableInfo">Serialized table schema information used for visualization.</param>
            <param name="previousQuestion">A previous question used to provide additional context.</param>
            <returns>A formatted string ready for AI processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Processes the AI response and prepares the output based on the provided request and AI response data.
            </summary>
            <param name="aiAssistanceRequest">Contains the details of the AI assistance request.</param>
            <param name="aiResponse">The response received from the AI model as a <see cref="T:Microsoft.SemanticKernel.TextContent"/> object.</param>
            <param name="aiAssistanceResponse">Optional; contains additional response data to aid output preparation.</param>
            <returns>A task representing the asynchronous operation, with a result containing the prepared output object.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown if there is an error in general AI processing.</exception>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">Thrown if there is an error with the AI connection.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the AI process to generate a response from an AI connection based on the provided message and question.
            </summary>
            <param name="connection">The AI connection used to send the request and obtain a response.</param>
            <param name="message">The content of the message sent to the AI.</param>
            <param name="question">The question used to guide or query the AI.</param>
            <param name="licenseKey">The license key used for authentication or authorization.</param>
            <returns>A task representing the asynchronous operation, with a result containing the processed output as a <see cref="T:Microsoft.SemanticKernel.TextContent"/> object.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess.GetPreviousCreateWidgetHistory(System.String)">
            <summary>
            Get previous History information for create widget.
            </summary>
            <param name="previousHistories"> information about previous informations.</param>
            <returns>create widget history information. </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateVisualProcess.PrepareSystemMessage(System.String,System.String)">
            <summary>
            Generates a system message for an AI assistant based on the type of operation and provided details.
            For `DataConfiguration` operations, the message instructs the assistant to provide chart fields from the given table schema and includes previous questions for context.
            For other operations, the message details rules for creating Bold BI charts, specifying required key names, their order, and constraints for the `Name` field.
            </summary>
            <param name="tableInfoContent">The content of the table schema used for visualization.</param>
            <param name="previousQuestion">previous questions information.</param>
            <returns>A formatted string containing the instructions and rules for the AI assistant based on the operation type.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess">
            <summary>
            Handles the process of preparing inputs and outputs for creating a widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.RawInput">
            <summary>
            Gets the raw input data prepared for AI processing.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.RawOutput">
            <summary>
            Gets the raw output data returned by AI processing.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Constructs and prepares an input string for visualization based on the operation, table information, and a previous question.
            </summary>
            <param name="operation">The AI operation type (e.g., creating or updating a widget).</param>
            <param name="tableInfo">Serialized table schema information used for visualization.</param>
            <param name="previousQuestion">A previous question used to provide additional context.</param>
            <returns>A formatted string ready for AI processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Processes the AI response and prepares the output based on the provided request and AI response data.
            </summary>
            <param name="aiAssistanceRequest">Contains the details of the AI assistance request.</param>
            <param name="aiResponse">The response received from the AI model as a <see cref="T:Microsoft.SemanticKernel.TextContent"/> object.</param>
            <param name="aiAssistanceResponse">Optional; contains additional response data to aid output preparation.</param>
            <returns>A task representing the asynchronous operation, with a result containing the prepared output object.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown if there is an error in general AI processing.</exception>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">Thrown if there is an error with the AI connection.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the AI process to generate a response from an AI connection based on the provided message and question.
            </summary>
            <param name="connection">The AI connection used to send the request and obtain a response.</param>
            <param name="message">The content of the message sent to the AI.</param>
            <param name="question">The question used to guide or query the AI.</param>
            <param name="licenseKey">The license key used for authentication or authorization.</param>
            <returns>A task representing the asynchronous operation, with a result containing the processed output as a <see cref="T:Microsoft.SemanticKernel.TextContent"/> object.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.GetPreviousCreateWidgetHistory(System.String)">
            <summary>
            Retrieves previous history specific to widget creation from provided history data.
            </summary>
            <param name="previousHistories">Serialized history data in JSON format.</param>
            <returns>A string containing previous relevant history data for widget creation, or an empty string if none found.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.GetRequiredDatasourceForUserQuery(System.String,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Performs a semantic search to find the most relevant data source based on a user query.
            </summary>
            <param name="query">The user's query used to find the relevant data source.</param>
            <param name="dataSources">A list of available data sources to search through.</param>
            <param name="serviceKey">The key used for performing the semantic search.</param>
            <param name="request">The original request details for logging or tracking.</param>
            <returns>A task representing the asynchronous operation, with a result containing the relevant <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails"/> or null if not found.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.CreateWidgetProcess.PrepareSystemMessage(System.String,System.String,BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Generates a system message to instruct the AI assistant based on the operation type and relevant data.
            </summary>
            <param name="tableInfoContent">Serialized table schema information for visualization.</param>
            <param name="previousHistories">Serialized history data for additional context.</param>
            <param name="operation">The AI operation type (e.g., creating or updating a widget).</param>
            <returns>A formatted string with instructions for the AI assistant.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess">
            <summary>
            Represents the process for generating relevant questions for creating visualizations based on table schema.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess.RawInput">
            <summary>
            Gets the raw input data prepared for AI processing.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess.RawOutput">
            <summary>
            Gets the raw output data returned by AI processing.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds the input prompt for the AI model to generate questions based on the table schema.
            </summary>
            <param name="operation">The type of AI operation (e.g., generating questions).</param>
            <param name="tableInfo">Optional. A string containing table schema information, if available.</param>
            <param name="previousQuestion">Optional. A previous question to provide additional context.</param>
            <returns>A string prompt instructing the AI model to generate questions.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Processes the AI response and prepares the output in the form of relevant questions.
            </summary>
            <param name="aiAssistanceRequest">The request data containing details of the AI assistance request.</param>
            <param name="openAiResponse">The AI response content received from the AI model.</param>
            <param name="aiAssistanceResponse">Optional. Contains additional response data that may assist in output preparation.</param>
            <returns>A task representing the asynchronous operation, with a result of type <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/> containing the processed output.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">Thrown if there is an error with the AI connection.</exception>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown if there is an error in AI processing.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.GenerateQuestionProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the AI connection to retrieve text content based on the provided message and question.
            </summary>
            <param name="connection">The AI connection instance used to interact with the AI service.</param>
            <param name="message">The message content sent to the AI model.</param>
            <param name="question">The specific question posed to the AI model.</param>
            <param name="licenseKey">The license key used for authentication or authorization purposes.</param>
            <returns>A task representing the asynchronous operation, with a result of type <see cref="T:Microsoft.SemanticKernel.TextContent"/> containing the AI response.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.JsonFormatter">
            <summary>
            Processes and formats data as JSON output for AI-related operations.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.RawInput">
            <summary>
            Gets the raw input data for processing.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.RawOutput">
            <summary>
            Gets the raw output data after processing.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds the input message required by the AI service.
            </summary>
            <param name="operation">The AI operation type.</param>
            <param name="tableInfo">Optional. Information about the table schema, if applicable.</param>
            <param name="previousQuestion">Optional. The previous question context, if any.</param>
            <returns>A string prompt instructing the AI service to format data as JSON.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Prepares the output data from the AI response.
            This method is currently not implemented.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request data.</param>
            <param name="aiResponse">The AI response content.</param>
            <param name="aiAssistanceResponse">Optional. Additional response data for further processing.</param>
            <returns>A task representing the asynchronous operation with the processed chat response.</returns>
            <exception cref="T:System.NotImplementedException">Thrown as the method is not yet implemented.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the AI connection to process the given message and question.
            </summary>
            <param name="connection">The AI connection instance used to communicate with the AI service.</param>
            <param name="message">The message content to process.</param>
            <param name="question">The specific question or prompt for the AI model.</param>
            <param name="licenseKey">The license key used for authorization.</param>
            <returns>A task representing the asynchronous operation with a result of <see cref="T:Microsoft.SemanticKernel.TextContent"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.JsonFormatter.PrepareSystemMessage">
            <summary>
            Prepares a system message instructing the AI to format the output as JSON.
            </summary>
            <returns>A string message with JSON formatting instructions.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess">
            <summary>
            Processes question answer widget to create widget requests by generating appropriate inputs and processing outputs for AI-based visualization tasks.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.RawInput">
            <summary>
            Gets the raw input data for processing.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.RawOutput">
            <summary>
            Gets the raw output data after processing.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds the input message required for the AI operation.
            </summary>
            <param name="operation">The AI operation type.</param>
            <param name="tableInfo">JSON string containing table schema information.</param>
            <param name="previousQuestion">The previous question for context.</param>
            <returns>A formatted string for system message preparation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Builds the output based on the AI response and formats it for question answer widget creation.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing user information and parameters.</param>
            <param name="aiResponse">The AI response content.</param>
            <param name="aiAssistanceResponse">Optional. Additional AI response data.</param>
            <returns>A task that represents the asynchronous operation to create a formatted response.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">Thrown when there is an issue with the AI connection.</exception>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown when there is a general AI exception.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Executes the AI connection to process the given message and question.
            </summary>
            <param name="connection">The AI connection instance to communicate with the AI service.</param>
            <param name="message">The message content to process.</param>
            <param name="question">The question or prompt for the AI model.</param>
            <param name="licenseKey">The license key for authorization.</param>
            <returns>A task representing the asynchronous operation with a result of <see cref="T:Microsoft.SemanticKernel.TextContent"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.GetRequiredDatasourceForUserQuery(System.String,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Searches for the required data source based on the user query.
            </summary>
            <param name="query">The query to search for relevant data sources.</param>
            <param name="dataSources">List of available data sources.</param>
            <param name="serviceKey">The service key for authentication.</param>
            <param name="aiAssistanceRequest">The AI assistance request.</param>
            <returns>A task representing the asynchronous operation to get the required data source for the query.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.QnaCreateWidgetProcess.PrepareSystemMessage(System.String)">
            <summary>
            Prepares a system message with given table information and operation context for AI processing.
            </summary>
            <param name="tableInfoContent">The table information content.</param>
            <returns>A formatted system message for AI input preparation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess">
            <summary>
            Represents the process for generating text answers based on AI-assisted requests.
            This class implements the <see cref="T:BoldBi.Ai.Base.Contracts.IBoldAiProcess"/> interface but is not fully implemented yet.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.RawInput">
            <summary>
            Gets the raw input for the AI process.
            This property is not implemented in this class.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.RawOutput">
            <summary>
            Gets the raw output after processing.
            This property is not implemented in this class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.BuildOutput(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,Microsoft.SemanticKernel.TextContent,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse)">
            <summary>
            Builds the output response from the AI response.
            This method is not implemented in this class.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing parameters and user query.</param>
            <param name="openAiResponse">The response from OpenAI or the AI model.</param>
            <param name="aiAssistanceResponse">Optional additional AI assistance response data.</param>
            <returns>A task representing the asynchronous operation, but not implemented.</returns>
            <exception cref="T:System.NotImplementedException">This method is not implemented.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.BuildInput(BoldBi.Ai.Base.Enums.AiOperation,System.String,System.String)">
            <summary>
            Builds the input for the AI process based on the operation, table information, and previous question.
            This method is not implemented in this class.
            </summary>
            <param name="operation">The AI operation to perform.</param>
            <param name="tableInfo">Optional table information for input processing.</param>
            <param name="previousQuestion">Optional previous question for context.</param>
            <returns>Throws a <see cref="T:System.NotImplementedException"/> as this method is not implemented.</returns>
            <exception cref="T:System.NotImplementedException">This method is not implemented.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,System.String,System.String,System.String)">
            <summary>
            Runs the AI connection and processes the provided message and question.
            This method is not implemented in this class.
            </summary>
            <param name="connection">The AI connection instance for processing.</param>
            <param name="message">The message content to send for AI processing.</param>
            <param name="question">The question or query to ask the AI.</param>
            <param name="licenseKey">The license key for authorization.</param>
            <returns>Throws a <see cref="T:System.NotImplementedException"/> as this method is not implemented.</returns>
            <exception cref="T:System.NotImplementedException">This method is not implemented.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.BuildOutput">
            <summary>
            Builds the output for the AI response.
            This method is not implemented in this class.
            </summary>
            <returns>Throws a <see cref="T:System.NotImplementedException"/> as this method is not implemented.</returns>
            <exception cref="T:System.NotImplementedException">This method is not implemented.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.CoreProcesses.TextAnswerGenerationProcess.Run(BoldBi.Ai.Base.AIConnection.IAiConnection,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Runs the AI connection and processes the AI request with additional parameters.
            This method is not implemented in this class.
            </summary>
            <param name="connection">The AI connection instance for processing.</param>
            <param name="aiAssistanceRequest">The AI assistance request containing parameters.</param>
            <returns>Throws a <see cref="T:System.NotImplementedException"/> as this method is not implemented.</returns>
            <exception cref="T:System.NotImplementedException">This method is not implemented.</exception>
        </member>
        <member name="T:BoldBi.Ai.Base.CustomNullableAttribute">
            <summary>
            Used as a flag for nullable values while generating the OpenAI request body structure.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.CustomNullableAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.CustomNullableAttribute"/> class.
            </summary>
            <param name="isNullable">Indicates whether the target allows null values.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.CustomNullableAttribute.IsNullable">
            <summary>
            Gets a value indicating whether the target allows null values.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums">
            <summary>
            Contains enums for AI operations, providers, widget types, and modes.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.AiOperation">
            <summary>
            Defines various AI operations available in the application.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.None">
            <summary>Represents no operation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.ShowWidget">
            <summary>Displays a widget.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.UpdateWidget">
            <summary>Updates an existing widget.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.Answer">
            <summary>Provides an answer based on input.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.GenerateQuestion">
            <summary>Generates a question.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.DeleteWidget">
            <summary>Deletes a widget.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.NewWidget">
            <summary>Creates a new widget.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.DataConfiguration">
            <summary>Configures data settings.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.FormatJson">
            <summary>Formats content into JSON.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiOperation.CreateVisual">
            <summary> create a visual </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.AiProvider">
            <summary>
            Specifies AI service providers used in the application.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiProvider.OpenAi">
            <summary>Specifies OpenAI as the provider.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.AiProvider.AzureAi">
            <summary>Specifies Azure AI as the provider.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.WidgetTypes">
            <summary>
            Defines various types of widgets supported by the application.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Area">
            <summary>Displays data as an area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Line">
            <summary>Displays data as a line chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Spline">
            <summary>Displays data as a smooth line (spline) chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Column">
            <summary>Displays data as a column chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Scatter">
            <summary>Displays data as a scatter plot.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Bubble">
            <summary>Displays data as a bubble chart with varying sizes.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.SplineArea">
            <summary>Displays data as a spline area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StepArea">
            <summary>Displays data as a step area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StepLine">
            <summary>Displays data as a step line chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Pie">
            <summary>Displays data as a pie chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Hilo">
            <summary>Displays high and low values (stock chart).</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.HiloOpenClose">
            <summary>Displays high, low, open, and close values (stock chart).</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Candle">
            <summary>Displays candlestick data for stock information.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Bar">
            <summary>Displays data as a bar chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedArea">
            <summary>Displays data as a stacked area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedArea100">
            <summary>Displays data as a 100% stacked area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.RangeColumn">
            <summary>Displays data as a range column chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedColumn">
            <summary>Displays data as a stacked column chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedColumn100">
            <summary>Displays data as a 100% stacked column chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedBar">
            <summary>Displays data as a stacked bar chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.StackedBar100">
            <summary>Displays data as a 100% stacked bar chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Pyramid">
            <summary>Displays data as a pyramid chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Funnel">
            <summary>Displays data as a funnel chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Doughnut">
            <summary>Displays data as a doughnut chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Polar">
            <summary>Displays data as a polar chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Radar">
            <summary>Displays data as a radar chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.RangeArea">
            <summary>Displays data as a range area chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Waterfall">
            <summary>Displays data as a waterfall chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.ComboChart">
            <summary>Displays data in a combination of chart types.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.BoxAndWhisker">
            <summary>Displays data as a box and whisker plot.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.NumberCard">
            <summary>Displays a number card for KPIs or single metrics.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Grid">
            <summary>Displays data in a grid or table format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Chart">
            <summary>Represents a generic chart type.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Pivot">
            <summary>Displays pivoted data in a table format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.HeatMap">
            <summary>Displays data as a HeatMap chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.TreeMap">
            <summary>Displays data as a TreeMap chart.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.WidgetTypes.Map">
            <summary>Displays geographical data on a map.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.Mode">
            <summary>
            Defines the operating modes for AI interactions.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Mode.Interaction">
            <summary>Interactive mode for real-time user interaction.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Mode.Conversation">
            <summary>Conversation mode for conversational responses.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Mode.None">
            <summary>Represents no specific mode.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.Extremes">
            <summary>
            Represents the extremes for a dataset or a range, such as the top or bottom values.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Extremes.Top">
            <summary>
            Represents the top extreme value.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Extremes.Bottom">
            <summary>
            Represents the bottom extreme value.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.DateTimeFormat">
            <summary>
            Defines various date and time formats for use in date-related operations.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Year">
            <summary>
            Represents the year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Default">
            <summary>
            Represents the default format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Month">
            <summary>
            Represents the month format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Day">
            <summary>
            Represents the day format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Quarter">
            <summary>
            Represents the quarter format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.MonthYear">
            <summary>
            Represents the month and year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.QuarterYear">
            <summary>
            Represents the quarter and year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DayMonthYear">
            <summary>
            Represents the day, month, and year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DateHour">
            <summary>
            Represents the date and hour format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DayOfYear">
            <summary>
            Represents the day of the year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DayOfWeek">
            <summary>
            Represents the day of the week format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Hour">
            <summary>
            Represents the hour format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Minute">
            <summary>
            Represents the minute format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Second">
            <summary>
            Represents the second format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.WeekOfYear">
            <summary>
            Represents the week of the year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.WeekOfMonth">
            <summary>
            Represents the week of the month format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.RangeDate">
            <summary>
            Represents a range date format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.RelativeDate">
            <summary>
            Represents a relative date format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DefaultTime">
            <summary>
            Represents the default time format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.WeekYear">
            <summary>
            Represents the week and year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.MonthDayYear">
            <summary>
            Represents the month, day, and year format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Time">
            <summary>
            Represents the time format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.Date">
            <summary>
            Represents the date format.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.WeekofYear">
            <summary>
            Represents the week of the year format (alternative spelling).
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.WeekofMonth">
            <summary>
            Represents the week of the month format (alternative spelling).
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormat.DateTime">
            <summary>
            Represents the date and time format.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter">
            <summary>
            Defines various date and time formats for filtering operations.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.DateTime">
            <summary>Represents the DateTime format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Date">
            <summary>Represents the Date format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Year">
            <summary>Represents the Year format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Quarter">
            <summary>Represents the Quarter format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Month">
            <summary>Represents the Month format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.QuarterYear">
            <summary>Represents the QuarterYear format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.MonthYear">
            <summary>Represents the MonthYear format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.WeekYear">
            <summary>Represents the WeekYear format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.DayOfWeek">
            <summary>Represents the DayOfWeek format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.WeekOfYear">
            <summary>Represents the WeekOfYear format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Day">
            <summary>Represents the Day format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Hour">
            <summary>Represents the Hour format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Minute">
            <summary>Represents the Minute format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Second">
            <summary>Represents the Second format.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.DateTimeFormatForFilter.Time">
            <summary>Represents the Time format.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.Order">
            <summary>
            Represents the sorting order for data.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Order.Ascending">
            <summary>Ascending order.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Order.Descending">
            <summary>Descending order.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.Aggregation">
            <summary>
            Defines the aggregation types used in data calculations.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.NONE">
            <summary>No aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.SUM">
            <summary>Sum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.AVG">
            <summary>Average aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.COUNT">
            <summary>Count aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.MIN">
            <summary>Minimum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.MAX">
            <summary>Maximum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.COUNTD">
            <summary>Distinct count aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.STDEV">
            <summary>Standard deviation (sample) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.STDEVP">
            <summary>Standard deviation (population) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.VAR">
            <summary>Variance (sample) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.DistinctCount">
            <summary>Distinct count aggregation (alternative name).</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Aggregation.MEDIAN">
            <summary>Median aggregation.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.FilterAggregation">
            <summary>
            Defines the filter aggregation types used for filtering operations.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.SUM">
            <summary>Sum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.AVG">
            <summary>Average aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.COUNT">
            <summary>Count aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.MIN">
            <summary>Minimum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.MAX">
            <summary>Maximum aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.COUNTD">
            <summary>Distinct count aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.STDEV">
            <summary>Standard deviation (sample) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.STDEVP">
            <summary>Standard deviation (population) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.VAR">
            <summary>Variance (sample) aggregation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.FilterAggregation.MEDIAN">
            <summary>Median aggregation.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.MeasureFilterCondition">
            <summary>
            Defines conditions for applying filters on measures.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.Equals">
            <summary>Equals condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.DoesNotEquals">
            <summary>Does not equal condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.GreaterThan">
            <summary>Greater than condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.GreaterThanOrEqualTo">
            <summary>Greater than or equal to condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.LessThan">
            <summary>Less than condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.LessThanOrEqualTo">
            <summary>Less than or equal to condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.Between">
            <summary>Between condition.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.MeasureFilterCondition.NotBetween">
            <summary>Not between condition.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.Operation">
            <summary>
            Defines the operations that can be performed on data.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Operation.Window">
            <summary>Window operation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Operation.Filter">
            <summary>Filter operation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Operation.Calculate">
            <summary>Calculate operation.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.Operation.None">
            <summary>None operation.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.RelativeDateFilter">
            <summary>
            Defines the types of relative date filters that can be applied.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Year">
            <summary>Year filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Quarter">
            <summary>Quarter filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Month">
            <summary>Month filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Week">
            <summary>Week filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Day">
            <summary>Day filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Hour">
            <summary>Hour filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.RelativeDateFilter.Minute">
            <summary>Minute filter.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes">
            <summary>
            Defines specific types of relative date filters for filtering data.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousYear">
            <summary>Previous year filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentYear">
            <summary>Current year filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextYear">
            <summary>Next year filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousQuarter">
            <summary>Previous quarter filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentQuarter">
            <summary>Current quarter filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextQuarter">
            <summary>Next quarter filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousMonth">
            <summary>Previous month filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentMonth">
            <summary>Current month filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextMonth">
            <summary>Next month filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousWeek">
            <summary>Previous week filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentWeek">
            <summary>Current week filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextWeek">
            <summary>Next week filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.Yesterday">
            <summary>Yesterday filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.Today">
            <summary>Today filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.Tomorrow">
            <summary>Tomorrow filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousHour">
            <summary>Previous hour filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentHour">
            <summary>Current hour filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextHour">
            <summary>Next hour filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.PreviousMinute">
            <summary>Previous minute filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.CurrentMinute">
            <summary>Current minute filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.NextMinute">
            <summary>Next minute filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes.None">
            <summary>No relative date filter.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes">
            <summary>
            Defines generic relative date filter types for filtering data.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes.Last">
            <summary>Last relative date filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes.Next">
            <summary>Next relative date filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes.Past">
            <summary>Past relative date filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes.Upcomming">
            <summary>Upcoming relative date filter.</summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.GenericRelativeDateFilterTypes.None">
            <summary>No relative date filter.</summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Enums.SortingType">
            <summary>
            Defines the sorting types for fields.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SortingType.AlphabeticSorting">
            <summary>
            Represents sorting for continuous fields.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SortingType.FieldBasedSorting">
            <summary>
            Represents sorting for discrete fields.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Enums.SortingType.DataSourceOrder">
            <summary>
            Represents no sorting.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionHandler.AiChatException">
            <summary>
            Represents an exception that occurs specifically within AI chat operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiChatException.#ctor(BoldBi.Ai.Base.ExceptionHandler.AiException,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiChatException"/> class with a specified AI exception and question.
            </summary>
            <param name="ex">The AI exception that caused the current exception.</param>
            <param name="question">The question related to the AI chat operation where the exception occurred.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiChatException.#ctor(BoldBi.Ai.Base.ExceptionHandler.ConnectionException,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiChatException"/> class with a specified connection exception and question.
            </summary>
            <param name="ex">The connection exception that caused the current exception.</param>
            <param name="question">The question related to the AI chat operation where the exception occurred.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiChatException.Question">
            <summary>
            Gets or sets the question related to the AI chat operation where the exception occurred.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionHandler.AiErrorMessage">
            <summary>
            Provides error message handling and exception handling functionality for AI operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiErrorMessage.GetMessage(Syncfusion.Dashboard.Core.Widget.ErrorCodeType)">
            <summary>
            Retrieves the error message corresponding to the specified error code.
            </summary>
            <param name="errorCode">The error code for which the message is needed.</param>
            <returns>A string containing the error message.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiErrorMessage.SerializeSingleException(System.AggregateException,System.String,System.String)">
            <summary>
            Serializes a single exception from an aggregate exception into a JSON string.
            </summary>
            <param name="ex">The aggregate exception containing a single exception.</param>
            <param name="question">The question related to the exception.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <returns>A JSON string representing the serialized exception.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiErrorMessage.SerializeMultipleExceptions(System.AggregateException,System.String,System.String)">
            <summary>
            Serializes multiple exceptions from an aggregate exception into a JSON string.
            </summary>
            <param name="ex">The aggregate exception containing multiple exceptions.</param>
            <param name="question">The question related to the exceptions.</param>
            <param name="methodName">The name of the method where the exceptions occurred.</param>
            <returns>A JSON string representing the serialized exceptions.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiErrorMessage.HandleException(System.Exception,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String)">
            <summary>
            Handles exceptions by logging the relevant details and returning a serialized exception response.
            </summary>
            <param name="ex">The exception to handle.</param>
            <param name="aiAssistanceRequest">The AI assistance request associated with the exception.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <returns>A JSON string representing the handled exception.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionHandler.AiException">
            <summary>
            Represents a custom exception type for handling AI-related errors.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.#ctor(Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> class with specified details.
            </summary>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="stackTrace">The stack trace where the exception occurred.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.#ctor(Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.Exception,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> class with an error code and an inner exception.
            </summary>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="ex">The inner exception that caused this exception.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.#ctor(System.String,Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> class with detailed information.
            </summary>
            <param name="message">The exception message.</param>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="stackTrace">The stack trace where the exception occurred.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.#ctor(BoldBi.Ai.Base.ExceptionHandler.AiException)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> class by copying another exception instance.
            </summary>
            <param name="error">The <see cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException"/> instance to copy.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.Message">
            <summary>
            Gets the exception message.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.StackTrace">
            <summary>
            Gets the stack trace where the exception occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.AiMessage">
            <summary>
            Gets or sets the AI-specific message associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.UserMessage">
            <summary>
            Gets or sets the user-friendly message associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.Error">
            <summary>
            Gets or sets a value indicating whether the exception represents an error.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.HasHelpLink">
            <summary>
            Gets or sets a value indicating whether the exception has a help link.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.ErrorCode">
            <summary>
            Gets or sets the error code associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.AiException.MethodName">
            <summary>
            Gets or sets the name of the method where the exception occurred.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.AiException.IsValidErrorCode(Syncfusion.Dashboard.Core.Widget.ErrorCodeType)">
            <summary>
            Determines whether the specified error code is valid.
            </summary>
            <param name="errorCode">The error code to validate.</param>
            <returns><c>true</c> if the error code is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException">
            <summary>
            Represents a custom exception for handling connection-related errors.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.#ctor(Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.Exception,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException"/> class with an error code, inner exception, and method details.
            </summary>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="ex">The inner exception that caused this exception.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.#ctor(Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException"/> class with an error code, stack trace, and method details.
            </summary>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="stackTrace">The stack trace where the exception occurred.</param>
            <param name="methodName">The name of the method where the exception occurred.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.#ctor(Syncfusion.Dashboard.Core.Widget.ErrorCodeType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException"/> class with an error code and a custom error message.
            </summary>
            <param name="errorCode">The error code representing the type of exception.</param>
            <param name="error">The custom error message.</param>
            <param name="hasHelpLink">Indicates whether the exception has a help link. Default is <c>false</c>.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.#ctor(System.String,Syncfusion.Dashboard.Core.Widget.ErrorCodeType)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.ExceptionHandler.ConnectionException"/> class with a custom error message and an error code.
            </summary>
            <param name="error">The custom error message.</param>
            <param name="errorCode">The error code representing the type of exception.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.AiMessage">
            <summary>
            Gets or sets the AI-specific message associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.Error">
            <summary>
            Gets or sets a value indicating whether the exception represents an error.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.HasHelpLink">
            <summary>
            Gets or sets a value indicating whether the exception has a help link.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.ErrorCode">
            <summary>
            Gets or sets the error code associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.Message">
            <summary>
            Gets the exception message.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.UserMessage">
            <summary>
            Gets or sets the user-friendly message associated with the exception.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.StackTrace">
            <summary>
            Gets the stack trace where the exception occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionHandler.ConnectionException.MethodName">
            <summary>
            Gets or sets the name of the method where the exception occurred.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionlessLogs.ILogger">
            <summary>
            Defines the methods for logging information and errors in the application.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Info(System.String)">
            <summary>
            Logs an informational message.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Info(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an informational message with additional request details.
            </summary>
            <param name="message">The message to log.</param>
            <param name="request">The AI assistance request associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Info(System.String,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs an informational message with additional assistance details.
            </summary>
            <param name="message">The message to log.</param>
            <param name="assistance">The logging assistance details associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String,System.Exception)">
            <summary>
            Logs an error message with exception details.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String,System.Exception,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs an error message with exception and assistance details.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
            <param name="assistance">The logging assistance details associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String,System.Exception,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an error message with exception and request details.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
            <param name="request">The AI assistance request associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(BoldBi.Ai.Base.ExceptionHandler.AiException,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an AI exception with request details.
            </summary>
            <param name="ex">The AI exception to log.</param>
            <param name="request">The AI assistance request associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(BoldBi.Ai.Base.ExceptionHandler.ConnectionException,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs a connection exception with request details.
            </summary>
            <param name="ex">The connection exception to log.</param>
            <param name="request">The AI assistance request associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an error message with request details.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
            <param name="request">The AI assistance request associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.ILogger.Error(System.String,System.String,System.String)">
            <summary>
            Logs an error message with a license key.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
            <param name="licenceKey">The license key associated with the log.</param>\
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler">
            <summary>
            Provides logging functionalities by implementing the <see cref="T:BoldBi.Ai.Base.ExceptionlessLogs.ILogger"/> interface.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.LogWriter">
            <summary>
            Gets the instance of the <see cref="T:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler"/>.
            This property initializes the logger if it has not been created yet.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Info(System.String)">
            <summary>
            Logs an informational message.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Info(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an informational message with details from an AI assistance request.
            </summary>
            <param name="message">The message to log.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Info(System.String,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs an informational message with details from logging assistance.
            </summary>
            <param name="message">The message to log.</param>
            <param name="assistance">The logging assistance object containing site information.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,System.Exception,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs an error message with details from the logging assistance object.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
            <param name="assistance">The logging assistance object containing additional context.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,System.Exception)">
            <summary>
            Logs an error message without additional context from a logging assistance object.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,System.Exception,System.String)">
            <summary>
            Logs an error message with a license key.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
            <param name="licenceKey">The license key associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,System.Exception,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an error message with details from an AI assistance request.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="method">The name of the method where the error occurred.</param>
            <param name="ex">The exception associated with the error.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(BoldBi.Ai.Base.ExceptionHandler.AiException,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an AI exception with details from an AI assistance request.
            </summary>
            <param name="ex">The AI exception to log.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(BoldBi.Ai.Base.ExceptionHandler.ConnectionException,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs a connection exception with details from an AI assistance request.
            </summary>
            <param name="ex">The connection exception to log.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs an error message with details from an AI assistance request.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String)">
            <summary>
            Logs an error message without additional context from an AI assistance request.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Error(System.String,System.String,System.String)">
            <summary>
            Logs an error message with a license key.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="methodName">The name of the method where the error occurred.</param>
            <param name="licenceKey">The license key associated with the log.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.Warning(System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs a warning message with details from an AI assistance request.
            </summary>
            <param name="message">The warning message to log.</param>
            <param name="methodName">The name of the method where the warning occurred.</param>
            <param name="request">The AI assistance request containing logging data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHandler.GetUserInfo(System.String)">
            <summary>
            Extracts the domain from a user's email address.
            </summary>
            <param name="userEmail">The email address of the user.</param>
            <returns>The domain part of the email address if available; otherwise, returns the email address itself.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.ExceptionlessLogs.LogHelper">
            <summary>
            Provides helper methods for logging using log4net.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.ExceptionlessLogs.LogHelper.GetLogger">
            <summary>
            Gets a logger instance for logging AI-related messages.
            </summary>
            <returns>An instance of <see cref="T:log4net.ILog"/> configured for AI logs.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Extensions.ScheduledActions">
            <summary>
            Handles the processing of dead-letter queues as a hosted service.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Extensions.ScheduledActions"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the background service to process dead-letter queues at regular intervals.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task that represents the start of the service.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the background service.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task that represents the stop of the service.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.Dispose">
            <summary>
            Disposes the resources used by the <see cref="T:BoldBi.Ai.Base.Extensions.ScheduledActions"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.DoWork(System.Object)">
            <summary>
            Method that is called at regular intervals to process dead-letter queues.
            </summary>
            <param name="state">An object containing information to be used by the callback method. This parameter is not used in this implementation.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledActions.UpdateSessionEndTimes">
            <summary>
            Periodically checks and updates session end times for sessions with no end time.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter">
            <summary>
            Service for scheduling regular deletion of old records from the database.
            This service is designed to run daily, removing data older than a specified cutoff period.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the scheduled data deletion task.
            </summary>
            <param name="cancellationToken">Token to signal cancellation.</param>
            <returns>A task that represents the asynchronous start operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the scheduled data deletion task.
            </summary>
            <param name="cancellationToken">Token to signal cancellation.</param>
            <returns>A task that represents the asynchronous stop operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.Dispose">
            <summary>
            Disposes the timer and other resources used by this service.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.DoWork(System.Object)">
            <summary>
            Performs the scheduled cleanup operation for specified tables.
            </summary>
            <param name="state">An optional state object (not used in this implementation).</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.ScheduledDataDeleter.DeleteOldRecordsAsync``1(Microsoft.EntityFrameworkCore.DbSet{``0},System.String)">
            <summary>
            Deletes records older than a cutoff date from the specified DbSet.
            </summary>
            <typeparam name="T">The type of the entity in the DbSet.</typeparam>
            <param name="dbSet">The DbSet from which old records will be deleted.</param>
            <param name="dateColumnName">The name of the date column used to determine record age.</param>
            <returns>A task that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Extensions.UsageLogConsumer">
            <summary>
            A background service that consumes and processes messages from Azure Service Bus queues.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Extensions.UsageLogConsumer"/> class
            and synchronously initializes the Azure Service Bus connection.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the background service and disposes of the Azure Service Bus client and processors.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the background service and begins processing messages from Azure Service Bus queues.
            </summary>
            <param name="stoppingToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleMessageAsync``1(System.String,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            Deserializes the message and calls the appropriate processing method.
            </summary>
            <typeparam name="T">The type to deserialize the message into.</typeparam>
            <param name="message">The message body as a string.</param>
            <param name="processMethod">The method to process the deserialized message.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.InitializeServiceBus">
            <summary>
            Initializes the Azure Service Bus client and creates message processors for each queue.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleMessage(System.String,System.String)">
            <summary>
            Processes messages for each queue, calling the appropriate handler based on the queue name.
            </summary>
            <param name="queue">The name of the queue from which the message was received.</param>
            <param name="message">The message body as a string.</param>
            <returns>A task that represents the asynchronous message handling operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleSearchActivity(BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity)">
            <summary>
            Handles the processing of SearchActivity messages.
            </summary>
            <param name="search">The deserialized SearchActivity object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleDataCollector(BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo)">
            <summary>
            Handles the processing of DataSourceInfo messages.
            </summary>
            <param name="sourceInfo">The deserialized DataSourceInfo object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleUserActivity(BoldBi.Ai.Base.Models.DatabaseLog.UserActivity)">
            <summary>
            Handles the processing of UserActivity messages.
            </summary>
            <param name="user">The deserialized UserActivity object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleSiteActivity(BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity)">
            <summary>
            Handles the processing of SiteActivity messages.
            </summary>
            <param name="site">The deserialized SiteActivity object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleChatActivity(BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage)">
            <summary>
            Handles the processing of AiSearchUsage (Chat) messages.
            </summary>
            <param name="chat">The deserialized AiSearchUsage object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleSessionsActivity(BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage)">
            <summary>
            Handles the processing of AiSessionUsage (Sessions) messages.
            </summary>
            <param name="sessions">The deserialized AiSessionUsage object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Extensions.UsageLogConsumer.HandleAmountUpdate(BoldBi.Ai.Base.Models.AILicense.AiKeyDetails)">
            <summary>
            Handles the processing of AiKeyDetails (Amount) messages.
            </summary>
            <param name="amount">The deserialized AiKeyDetails object.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.AiInputPreparationHelper">
            <summary>
            Provides helper methods for preparing and converting data source details into table information formats.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AiInputPreparationHelper.ConvertDatasourcesToTableInfo(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails})">
            <summary>
            Converts a list of data source details to table information without altering the data.
            </summary>
            <param name="dataSources">The list of data source details.</param>
            <returns>The list of <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails"/> representing the data sources.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AiInputPreparationHelper.ConvertDatasourcesToTableInfoString(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails})">
            <summary>
            Converts a list of data source details to a string format containing structured table information.
            </summary>
            <param name="dataSources">The list of data source details.</param>
            <returns>A string representing the table information for the provided data sources.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AiInputPreparationHelper.PrepareTableContent(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails})">
            <summary>
            Prepares the content for each table, formatting it as a structured string containing table and column details.
            </summary>
            <param name="requiredDS">The list of data sources to process.</param>
            <returns>A string representing table names and their corresponding columns in JSON-like format.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.AmountUpdateHelper">
            <summary>
            Helper class for managing and updating the cost of each request to OpenAI based on token usage.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AmountUpdateHelper.ProcessUsage(OpenAI.Chat.ChatTokenUsage,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes the token usage details and updates the cost for each request based on the AI model.
            </summary>
            <param name="tokensSpent">The token usage information from the request.</param>
            <param name="licenseKey">The license key associated with the request.</param>
            <param name="aiModel">The AI model used (e.g., GPT-3, GPT-4).</param>
            <param name="aiAssistanceRequest">The assistance request containing session and query details.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AmountUpdateHelper.ProcessUsage(System.Int32,System.Int32,System.Int32,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes the token usage details and updates the cost for each request based on the AI model.
            </summary>
            <param name="inputToken">The number of input tokens used.</param>
            <param name="outputToken">The number of output tokens generated.</param>
            <param name="totalToken">The total number of tokens used (input + output).</param>
            <param name="licenseKey">The license key associated with the request.</param>
            <param name="aiModel">The AI model used (e.g., GPT-3, GPT-4).</param>
            <param name="aiAssistanceRequest">The assistance request containing session and query details.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AmountUpdateHelper.CalculateCostPerRequest(System.Int32,System.Int32,System.Int32,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Calculates the cost of a single request based on token usage and the AI model.
            </summary>
            <param name="inputToken">The number of input tokens used.</param>
            <param name="outputToken">The number of output tokens generated.</param>
            <param name="totalToken">The total number of tokens used (input + output).</param>
            <param name="aiModel">The AI model used to determine the token cost rates.</param>
            <param name="aiAssistanceRequest">The assistance request containing session and query details.</param>
            <returns>The total cost of the request based on the tokens used.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.AmountUpdateHelper.FetchAndUpdateRequestLimit(System.String,System.Double,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Fetches the current license details and updates the request limit based on the calculated cost.
            </summary>
            <param name="licenseKey">The license key associated with the user request.</param>
            <param name="costPerRequest">The cost of the request based on token usage.</param>
            <param name="aiAssistanceRequest">The assistance request containing logging details.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.CacheManager">
            <summary>
            Provides methods for managing cache related to rate limits.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.CacheManager.AddRateLimitToCache(Microsoft.Extensions.Caching.Memory.IMemoryCache,BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext)">
            <summary>
            Adds rate limits to the cache from the database.
            </summary>
            <param name="memoryCache">The memory cache to store the rate limits.</param>
            <param name="dbContext">The database context to fetch rate limits from.</param>
            <returns>A JSON string indicating the result of the operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext">
            <summary>
            Represents the database context for the application, providing access to the AI license and usage data.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.ai_licenses">
            <summary>
            Gets or sets the AI licenses in the database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.bold_ai_chat">
            <summary>
            Gets or sets the AI search usage data in the database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.bold_ai_sessions">
            <summary>
            Gets or sets the AI session usage data in the database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.bold_ai_sandbox_users">
            <summary>
            Gets or sets the AI sandbox users data in the database.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configures the database connection using Npgsql.
            </summary>
            <param name="optionsBuilder">The builder used to configure the database context.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures the model for the database context.
            </summary>
            <param name="modelBuilder">The builder used to configure the model.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext">
            <summary>
            Context class for interacting with the audit log database.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.bold_ai_requests">
            <summary>
            Gets or sets the DbSet representing search activities for Bold AI requests.
            </summary>
            <remarks>
            This property maps to the "bold_ai_requests" table in the database.
            </remarks>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.bold_ai_datasources">
            <summary>
            Gets or sets the DbSet representing data source information for Bold AI.
            </summary>
            <remarks>
            This property maps to the "bold_ai_datasources" table in the database.
            </remarks>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.bold_ai_users">
            <summary>
            Gets or sets the DbSet representing user activity information for Bold AI.
            </summary>
            <remarks>
            This property maps to the "bold_ai_users" table in the database.
            </remarks>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.bold_ai_siteinfo">
            <summary>
            Gets or sets the DbSet representing site activity information for Bold AI.
            </summary>
            <remarks>
            This property maps to the "bold_ai_siteinfo" table in the database.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configures the database connection using Npgsql.
            </summary>
            <param name="optionsBuilder">The options builder for configuring the context.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Configures the model for the database context.
            </summary>
            <param name="modelBuilder">The model builder for configuring entity properties.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb">
            <summary>
            Provides methods to fetch pricing and other details from the database.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb"/> class with database connection strings.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.IsAllowedTenant(System.String)">
            <summary>
            Checks if a tenant is allowed based on the provided JSON input.
            </summary>
            <param name="jsonInput">The JSON input containing the tenant ID.</param>
            <returns>An object indicating whether the tenant is allowed access.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetAmountByLicenseKey(System.String)">
            <summary>
            Retrieves the amount for a given license key.
            </summary>
            <param name="aiKey">The license key to look up.</param>
            <returns>An object containing the amount associated with the license key.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetPricingByMessage(System.String)">
            <summary>
            Asynchronously retrieves pricing information by search ID.
            </summary>
            <param name="searchId">The ID of the search.</param>
            <returns>A JSON string representing the pricing information, or null if not found.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetPricingBySession(System.String)">
            <summary>
            Asynchronously retrieves pricing information by session ID.
            </summary>
            <param name="sessionId">The ID of the session.</param>
            <returns>A JSON string representing the pricing information, or null if not found.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetPricingByUser(System.String)">
            <summary>
            Fetches pricing information for a given user email.
            </summary>
            <param name="userInfo">The info of the user.</param>
            <returns>JSON string containing the AI tokens and pricing details.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetPricingPerTenant(System.String)">
            <summary>
            Fetches pricing information for a given tenant and license key within a specified date range.
            </summary>
            <param name="tenantId">The tenantId to look up.</param>
            <returns>JSON string containing the AI tokens and pricing details.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.FetchFromDb.GetAiUsage(System.String)">
            <summary>
            Fetches AI usage cost based AI key.
            </summary>
            <param name="inputJson">Json for getting balance amount for license.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper">
            <summary>
            Helper class for logging pricing and usage data related to AI search and session usage, as well as updating license balance amounts in the database.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper._dbContext">
            <summary>
            The database context used for data operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper"/> class.
            Default constructor that creates a new instance of <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext"/>.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper.#ctor(BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper"/> class with a specified <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext"/> instance.
            </summary>
            <param name="dbContext">DB context instance as input.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper.LogSearchUsageToDB(BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage)">
            <summary>
            Asynchronously logs search usage data to the database.
            Updates an existing record if one exists with the same SearchID, otherwise adds a new record.
            </summary>
            <param name="searchUsage">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage"/> containing the search usage data to log.</param>
            <returns>
            A task that represents the asynchronous operation.
            Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper.LogSessionUsageToDB(BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage)">
            <summary>
            Asynchronously logs session usage data to the database.
            Updates an existing record if one exists with the same SessionID, otherwise adds a new record.
            </summary>
            <param name="sessionUsage">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage"/> containing the session usage data to log.</param>
            <returns>
            A task that represents the asynchronous operation.
            Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.PricingLogHelper.UpdateAmountToDb(BoldBi.Ai.Base.Models.AILicense.AiKeyDetails)">
            <summary>
            Asynchronously updates the balance amount in the database for a specified AI key.
            Reduces the existing amount by the specified value and updates the last modified date.
            </summary>
            <param name="amount">An instance of <see cref="T:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails"/> containing the amount to update.</param>
            <returns>
            A task that represents the asynchronous operation.
            Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper">
            <summary>
            Helper class for logging various types of activities to the database.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.#ctor(BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper"/> class with a specified database context.
            </summary>
            <param name="dbContext">An instance of <see cref="T:BoldBi.Ai.Base.Helpers.DatabaseContext.UsageLogDbContext"/> to interact with the database.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.LogRequestsToDB(BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity)">
            <summary>
            Asynchronously logs search activity data to the database. Updates existing records or adds new ones if they do not exist.
            </summary>
            <param name="searchActivity">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity"/> containing the search activity data to log.</param>
            <returns>A task that represents the asynchronous operation. Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.LogDatasourcesToDB(BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo)">
            <summary>
            Asynchronously logs data source information to the database. Updates existing records or adds new ones if they do not exist.
            </summary>
            <param name="collectedData">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo"/> containing the data source information to log.</param>
            <returns>A task that represents the asynchronous operation. Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.LogUsersToDB(BoldBi.Ai.Base.Models.DatabaseLog.UserActivity)">
            <summary>
            Asynchronously logs user activity data to the database. Updates existing records or adds new ones if they do not exist.
            </summary>
            <param name="userData">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity"/> containing the user activity data to log.</param>
            <returns>A task that represents the asynchronous operation. Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.LogSiteInfoToDB(BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity)">
            <summary>
            Asynchronously logs site information data to the database. Updates existing records or adds new ones if they do not exist.
            </summary>
            <param name="siteData">An instance of <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity"/> containing the site information data to log.</param>
            <returns>A task that represents the asynchronous operation. Returns <c>true</c> if the operation was successful; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.UpdateFeedbackInfo(System.String)">
            <summary>
            Updates feedback information in the database based on JSON input.
            </summary>
            <param name="jsonInput">A JSON-formatted string containing feedback data.</param>
            <returns>An object representing the result of the update operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper.RetrieveFeedbackInfo(System.String)">
            <summary>
            Retrieves feedback information from the database based on JSON input.
            </summary>
            <param name="jsonInput">A JSON-formatted string containing the feedback query data.</param>
            <returns>An instance of <see cref="T:Syncfusion.Dashboard.Core.Common.QnaWidgetHistory"/> containing feedback details.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor">
            <summary>
            Processes dead-letter messages from various Service Bus queues.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.GetDeadLetterQueueProcessor">
            <summary>
            Gets the singleton instance of <see cref="T:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor"/>.
            </summary>
            <returns>The single instance of <see cref="T:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSearchQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for search requests.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessDataSourceQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for data sources.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessUserQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for user activities.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSiteQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for site activities.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessChatQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for chat activities.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSessionsQueueDeadLetter">
            <summary>
            Processes the dead-letter queue for session activities.
            </summary>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessDeadLetterQueue(System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            Consumes and processes messages from a dead-letter queue.
            </summary>
            <param name="queueName">Name of the dead-letter queue.</param>
            <param name="processMessage">Delegate to process each message.</param>
            <returns>An <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse"/> indicating the status of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ErrorHandler(Azure.Messaging.ServiceBus.ProcessErrorEventArgs)">
            <summary>
            Handles errors encountered during message processing.
            </summary>
            <param name="args">Error event arguments.</param>
            <returns>A completed task.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSearchQueueMessage(System.String)">
            <summary>
            Processes a message from the search queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessDataSourceQueueMessage(System.String)">
            <summary>
            Processes a message from the data source queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessUserQueueMessage(System.String)">
            <summary>
            Processes a message from the user queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSiteQueueMessage(System.String)">
            <summary>
            Processes a message from the site queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessChatQueueMessage(System.String)">
            <summary>
            Processes a message from the chat queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessSessionsQueueMessage(System.String)">
            <summary>
            Processes a message from the sessions queue.
            </summary>
            <param name="message">The message to process.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.DeadLetterQueueProcessor.ProcessMessage``1(System.String,System.Func{BoldBi.Ai.Base.Helpers.DatabaseHelpers.UsageLogHelper,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}}})">
            <summary>
            Deserializes and processes a message.
            </summary>
            <typeparam name="T">The type of the message.</typeparam>
            <param name="message">The message to process.</param>
            <param name="logAction">The logging action to perform.</param>
            <returns>A task representing the result of processing.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.FieldBuilder">
            <summary>
            A class responsible for building AI assistance responses by processing input JSON data,
            generating visual and filter fields, merging fields, and preparing datasource field information.
            </summary>
            <remarks>
            This class implements the <see cref="T:BoldBi.Ai.Base.Contracts.IFieldBuilder"/> interface and provides functionality
            to transform input field data into a structured response suitable for AI assistance.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.Build(System.String,System.String)">
            <summary>
            form the data for designer widget structure.
            </summary>
            <param name="inputJson">recives openai generated result.</param>
            <param name="tableInfo">receives table.</param>
            <returns>returns data for designer widget structure.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.DeserializeInputField(System.String)">
            <summary>
            deserialize json string into object.
            </summary>
            <param name="inputJson">deserialized object.</param>
            <returns>json object.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GenerateVisualFields(BoldBi.Ai.Base.Models.Columns,BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            generate visual fields.
            </summary>
            <param name="encodingFields">receives axis.</param>
            <param name="widgetType">receives widget type.</param>
            <returns>visual fields.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GetXAxisContainerName(BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            get the x-axis property container name.
            </summary>
            <param name="widgetType">receives the widget type.</param>
            <returns>x-axis property container name.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GetYAxisContainerName(BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            get the y-axis property container name.
            </summary>
            <param name="widgetType">receives the widget type.</param>
            <returns>x-axis property container name.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GetRowContainerName(BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            get row container name.
            </summary>
            <param name="widgetType">receives the widget type.</param>
            <returns>row property container name.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.CreateBiFieldFromAxis(System.Collections.Generic.List{BoldBi.Ai.Base.Contracts.IAxisProperty},System.String)">
            <summary>
            create field from the provided axis and contaier name.
            </summary>
            <param name="axis">receives the type of axis.</param>
            <param name="containerName">receives the name of the container.</param>
            <returns>formed fields.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.CreateBiField(BoldBi.Ai.Base.Contracts.IAxisProperty,System.String)">
            <summary>
            Creates a BI (Business Intelligence) field based on the provided axis property and container name.
            </summary>
            <param name="property">
            The axis property used to construct the field. It provides metadata such as the field name, alias,
            table name, and additional axis-specific properties like expressions and time units.
            </param>
            <param name="containerName">
            The name of the container (e.g., report, dashboard, or data model) that the field belongs to.
            </param>
            <returns>
            A <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> object that represents the BI field, including its name, display name,
            container name, table name, summary type (if applicable), date/time format, and expression-related metadata.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.MergeFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIOutputPreparation.Field}[])">
            <summary>
            Merges multiple lists of fields into a single list, combining all elements while ignoring null lists.
            </summary>
            <param name="fieldLists">
            An array of lists containing <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> objects to be merged. Null lists will be ignored during the merge process.
            </param>
            <returns>
            A single <see cref="T:System.Collections.Generic.List`1"/> containing all the fields from the provided lists.
            If no lists are provided or all are null, the result will be an empty list.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GenerateFilterFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.Transform})">
            <summary>
            Asynchronously generates BI (Business Intelligence) filter fields by processing a list of transformations.
            </summary>
            <param name="transform">
            A list of <see cref="T:BoldBi.Ai.Base.Models.Transform"/> objects representing the transformations to be processed for generating BI fields.
            Each transformation contributes to the resulting list of fields.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task result contains a <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField"/> object
            with the generated fields populated based on the provided transformations.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.GenerateTransformFields(BoldBi.Ai.Base.Models.Transform)">
            <summary>
            Asynchronously generates BI (Business Intelligence) transform fields based on the specified transformation filter.
            </summary>
            <param name="filter">
            A <see cref="T:BoldBi.Ai.Base.Models.Transform"/> object representing the transformation filter.
            This includes filter and window-related data used to generate BI fields.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task result contains a <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField"/> object
            with the generated fields based on the provided transformation.
            </returns>
            <remarks>
            This method utilizes helper methods to process filters and rank fields:
            <list type="bullet">
            <item><description><see cref="M:BoldBi.Ai.Base.Helpers.FieldBuilder.AddTransformFilterFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.Filters})"/> processes filter-based transformations.</description></item>
            <item><description><see cref="M:BoldBi.Ai.Base.Helpers.FieldBuilder.AddTransformRankFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.Rank})"/> processes rank-based transformations (window operations).</description></item>
            </list>
            The fields from both operations are merged using <see cref="M:BoldBi.Ai.Base.Helpers.FieldBuilder.MergeFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIOutputPreparation.Field}[])"/>.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.AddTransformFilterFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.Filters})">
            <summary>
            Asynchronously generates a list of BI (Business Intelligence) fields based on the provided list of filters.
            </summary>
            <param name="filters">
            A list of <see cref="T:BoldBi.Ai.Base.Models.Filters"/> objects representing the filters to be transformed into BI fields.
            Each filter contributes metadata such as column name, aggregate type, time unit, and additional filter information.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task result contains a list of <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> objects
            populated based on the provided filters. If the input is null, the task returns <c>null</c>.
            </returns>
            <remarks>
            For each filter in the input:
            <list type="bullet">
            <item><description>A primary field is created based on the filter's column name and metadata.</description></item>
            <item><description>If the filter includes a relative date filter with a different date column, an additional field is created.</description></item>
            </list>
            These fields are marked as filter columns and include metadata for internal processing.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.AddTransformRankFields(System.Collections.Generic.List{BoldBi.Ai.Base.Models.Rank})">
            <summary>
            Asynchronously generates a list of BI (Business Intelligence) fields based on the provided rank filters.
            </summary>
            <param name="filters">
            A list of <see cref="T:BoldBi.Ai.Base.Models.Rank"/> objects representing the rank-based transformations used to generate BI fields.
            Each rank filter contributes group-by fields and associated metadata.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task result contains a list of <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> objects
            populated based on the rank filters. If the input is null, the task returns an empty list.
            </returns>
            <remarks>
            For each rank filter in the input:
            <list type="bullet">
            <item><description>A field is created for each encoding field in the filter's group-by list.</description></item>
            <item><description>The field metadata includes properties such as name, display name, date/time format, and rank filter info.</description></item>
            </list>
            These fields are marked as filter columns and invisible by default.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.FieldBuilder.UpdateUniqueColumnName(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIOutputPreparation.Field})">
            <summary>
            Updates the unique column names for a list of BI (Business Intelligence) fields by assigning a sequential identifier to each field.
            </summary>
            <param name="fields">
            A list of <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> objects to be updated with unique column names.
            </param>
            <returns>
            The updated list of <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field"/> objects with unique column names assigned.
            </returns>
            <remarks>
            This method iterates through the list of fields and assigns a unique column name in the format "columnX",
            where X is a sequential number starting from 1.
            </remarks>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.JsonSchemaBuilder">
            <summary>
            Provides functionality to construct a JSON schema for AI response formatting.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.JsonSchemaBuilder.BuildJsonSchemaForClass(System.Type,System.String)">
            <summary>
            Creates a JSON schema representation for a given class type, tailored for AI response formats.
            </summary>
            <param name="type">The class type for which the schema is generated.</param>
            <param name="schemaName">The name to assign to the generated schema.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing the structured JSON schema,
            including the response format details.
            </returns>
            <remarks>
            This method utilizes the <see cref="T:BoldBi.Ai.Base.Helpers.SchemaGenerator"/> to generate the schema for the specified class type.
            It also includes customization options such as schema strictness and formatting.
            </remarks>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.SchemaGenerator">
            <summary>
            Provides functionality to generate JSON schemas for C# types.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SchemaGenerator.GenerateSchema(System.Type)">
            <summary>
            Generates a schema dictionary for the given type.
            </summary>
            <param name="type">The type to generate the schema for.</param>
            <returns>A dictionary representing the type's schema.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation">
            <summary>
            Provides methods to activate AI licenses and retrieve UMS tokens for authentication.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation"/> class.
            </summary>
            <param name="httpClient">Http client.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseActivation.ActivateAILicense(System.String)">
            <summary>
            Activates an AI license for the specified tenant by retrieving an access token and
            using it to send a license activation request.
            </summary>
            <param name="inputJson">The input JSON containing the TenantId for which the AI license should be activated.</param>
            <returns>
            An <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse"/> object containing the result of the license activation,
            including a status message and error information if applicable.
            </returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper">
            <summary>
            Helper class for managing AI licenses.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper"/> class.
            </summary>
            <param name="memoryCache">The memory cache used for rate limit caching.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,BoldBi.Ai.Base.Helpers.DatabaseContext.AppDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper"/> class.
            </summary>
            <param name="memoryCache"> Contains the rate limit information for the AI license.</param>
            <param name="dbContext"> Contains the database context for accessing AI license data. </param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.AddAiLicense(System.Object)">
            <summary>
            Adds a new AI license to the database.
            </summary>
            <param name="license">The license details as an object.</param>
            <returns>JSON response indicating success or failure.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.UpdateAiLicense(System.Object)">
            <summary>
            Updates an existing AI license in the database.
            </summary>
            <param name="license">The license details as an object.</param>
            <returns>JSON response indicating success or failure.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.DeactivateAiLicense(System.String)">
            <summary>
            Deactivates AI licenses for a given tenant.
            </summary>
            <param name="tenantId">The tenant ID as a string.</param>
            <returns>JSON response indicating success or failure.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.DeleteAiLicense(System.String)">
            <summary>
            Deletes AI licenses for a given tenant.
            </summary>
            <param name="tenantId">The tenant ID as a string.</param>
            <returns>JSON response indicating success or failure.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.ManageLicense.LicenseManageHelper.GetLicenseDetails(System.String)">
            <summary>
            Retrieves the details of an AI license by its key.
            </summary>
            <param name="aiKey">The AI key as a string.</param>
            <returns>JSON response with license details or error message.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter">
            <summary>
            Provides methods to convert AI responses into field information for chart visualization.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter.ConvertAiResponseToFieldInfo(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Converts the AI response into field information required for chart visualization.
            </summary>
            <param name="aiResponse">The AI response string in JSON format.</param>
            <param name="aiAssistanceRequest">The request object containing details for AI assistance.</param>
            <returns>An <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> object containing the converted field information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter.ValidateResponseData(System.Collections.Generic.Dictionary{System.String,System.Object},BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Validates the AI response data to ensure that the chart type is valid.
            </summary>
            <param name="data">The parsed AI response data.</param>
            <param name="aiAssistanceRequest">The request object containing details for AI assistance.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter.IsSupportedWidgetType(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
            <summary>
            Checks if the widget type specified in the AI response is supported.
            </summary>
            <param name="fields">The list of fields extracted from the AI response.</param>
            <param name="chartType">The chart type specified in the AI response.</param>
            <returns><c>true</c> if the widget type is supported; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter.PrepareAndReturnAiResponse(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Prepares and returns the AI assistance response with the necessary field and chart type information.
            </summary>
            <param name="fields">The list of validated fields from the AI response.</param>
            <param name="aiAssistanceRequest">The request object containing details for AI assistance.</param>
            <param name="aiResponse">The original AI response string.</param>
            <param name="chartType">The chart type specified in the AI response.</param>
            <param name="data">The parsed AI response data.</param>
            <returns>An <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> object containing the field and chart information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.AiResponseConverter.ThrowAiException(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Throws an AI exception with a custom message and logs the error.
            </summary>
            <param name="message">The error message to be logged and included in the exception.</param>
            <param name="aiAssistanceRequest">The request object containing details for AI assistance.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer">
            <summary>
            Provides methods to prepare field information for AI assistance and widget creation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.FieldInfoContainer">
            <summary>
            Gets or sets the name of the field information container.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.CreateInstance">
            <summary>
            Creates a singleton instance of <see cref="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer"/>.
            </summary>
            <returns>The singleton instance of <see cref="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.PrepareFieldInfoTemplate(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse,Microsoft.SemanticKernel.TextContent)">
            <summary>
            Prepares the field information template for AI assistance by logging the activity and resolving widget type.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing input parameters.</param>
            <param name="aiAssistanceResponse">The AI assistance response containing result data.</param>
            <param name="aiResponse">The AI response with textual content and model ID.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/> containing the prepared widget information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.CreateResponse(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse,Microsoft.SemanticKernel.TextContent,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel})">
            <summary>
            Creates a response object containing the widget type and field information based on the AI assistance request and response.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing input parameters.</param>
            <param name="aiAssistanceResponse">The AI assistance response containing result data.</param>
            <param name="aiResponse">The AI response with textual content and model ID.</param>
            <param name="fieldInfoModels">The prepared field information models.</param>
            <returns>An instance of <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse"/> with detailed widget data.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.MapControlType(System.String,System.String)">
            <summary>
            Maps the control type to a corresponding name based on specific rules and chart type.
            </summary>
            <param name="controlType">The control type to be mapped.</param>
            <param name="chartType">The type of chart to influence control mapping.</param>
            <returns>A string representing the mapped control type.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.PrepareFieldInfoModel(Newtonsoft.Json.Linq.JArray,System.String)">
            <summary>
            Prepares the field information model by parsing the field information JSON array and categorizing fields based on control type.
            </summary>
            <param name="fieldInfoArray">The JSON array containing field information.</param>
            <param name="chartType">The type of chart for which field information is being prepared.</param>
            <returns>A list of <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel"/> representing organized field information models.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldInfoPreparer.ProcessFieldInfoTemplate(Newtonsoft.Json.Linq.JToken,System.Type)">
            <summary>
            Processes the field information template by mapping JSON tokens to object properties using reflection.
            </summary>
            <param name="item">The JSON token representing a single field item.</param>
            <param name="type">The type of object to which the JSON token will be mapped.</param>
            <returns>An instance of the specified type with properties populated based on the JSON token.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper">
            <summary>
            Helper class for operations related to field type processing and data source mapping.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetFieldType(System.String)">
            <summary>
            Gets the closest matching field type from a predefined list based on the input field type.
            </summary>
            <param name="fieldType">The field type to match.</param>
            <returns>Returns the matched field type from the predefined list.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetGenericDateType(BoldBi.Ai.Base.Enums.SpecificRelativeDateFilterTypes)">
            <summary>
            Gets the closest matching field type from a predefined list based on the input field type.
            </summary>
            <param name="fieldType">The field type to match.</param>
            <returns>Returns the matched field type from the predefined list.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetSummaryType(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Determines the summary type for a column based on the field type data.
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <param name="summaryType">The summary type to validate or override.</param>
            <returns>Returns the appropriate summary type based on the column type.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetColStyle(System.String)">
            <summary>
            Gets the CSS class style based on the field's data type.
            </summary>
            <param name="value">The data type of the field.</param>
            <returns>Returns a CSS class style string representing the field's data type.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.IsDateRelatedFormat(System.String)">
            <summary>
            Checks if a given name corresponds to a date-related format.
            </summary>
            <param name="name">The name to check.</param>
            <returns>Returns true if the name is a date-related format; otherwise, false.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetDateTimeFormat(System.String)">
            <summary>
            Gets the default DateTime format based on the provided data type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns "Default" for recognized date types, otherwise "None".</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetClosestMatch(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Finds the closest match for a target string within a list of strings.
            </summary>
            <param name="targetString">The target string to match.</param>
            <param name="stringList">The list of strings to search.</param>
            <returns>Returns the closest matching string from the list.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.IsAggregationFunction(System.String)">
            <summary>
            Checks if a given summary type is an aggregation function.
            </summary>
            <param name="summaryType">The summary type to check.</param>
            <returns>Returns true if the summary type is an aggregation function; otherwise, false.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.UpdateFilterStatusFlags(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Updates filter status flags in the provided filter information dictionary.
            </summary>
            <param name="dimensionFilterInfo">Dictionary containing filter information.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.ValidateSummaryType(System.String,System.String)">
            <summary>
            Validates the summary type for a field based on its type.
            </summary>
            <param name="fieldType">The field type to validate.</param>
            <param name="summaryType">The summary type to check or modify.</param>
            <returns>Returns "COUNT" for non-measure fields, otherwise the provided summary type.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetFieldsByDatasourceId(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String)">
            <summary>
            Retrieves field information by matching data source ID from a list of table information.
            </summary>
            <param name="dataList">List of table information details.</param>
            <param name="datasourceId">The data source ID to match.</param>
            <returns>Returns a list of field information inputs that match the data source ID.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.GetDataSourceNameByDatasourceId(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String)">
            <summary>
            Retrieves datasource name information by matching data source ID from a list of table information.
            </summary>
            <param name="dataList">List of table information details.</param>
            <param name="datasourceId">The data source ID to match.</param>
            <returns>Returns a datasource name inputs that match the data source ID.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.UpdateFilterProperties(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Asynchronously updates filter properties for a field dictionary.
            </summary>
            <param name="aiField">The dictionary containing field properties.</param>
            <param name="columnsData">Dictionary of column name to column ID mappings.</param>
            <param name="keysList">List of keys for data mapping.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <returns>Returns the updated field dictionary with filter properties applied.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldTypeHelper.MapTableNamesToDataSourceIds(System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails})">
            <summary>
            Maps table names to their respective data source IDs.
            </summary>
            <param name="tableInfo">List of table information details.</param>
            <returns>Returns a dictionary of table names to data source IDs.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator">
            <summary>
            Provides methods for validating and processing field data for AI assistance and chart preparation.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateFields(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
            <summary>
            Validates the given list of fields based on chart type, applying necessary transformations for AI assistance.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="chartType">The type of chart for which fields are being validated.</param>
            <returns>The validated and updated list of fields.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown when the field list is empty.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateColumnName(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Checks if the given field contains a valid column name.
            </summary>
            <param name="field">The field to validate.</param>
            <returns><c>true</c> if the field does not contain a column name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateSummaryType(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Validates and assigns a summary type to a field based on field type, chart type, container name, and column name.
            </summary>
            <param name="summaryType">The summary type to validate.</param>
            <param name="fieldType">The type of field being validated.</param>
            <param name="chartType">The type of chart for which the field is being validated.</param>
            <param name="containerName">The name of the container for the field.</param>
            <param name="columnName">The name of the column associated with the field.</param>
            <returns>A valid summary type for the given field.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown when an invalid summary type is provided.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateMeasureFormatting(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Validates and updates the measure formatting of fields, ensuring a valid format type is set.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <returns>The updated list of fields with validated measure formatting.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateChartCustomSorting(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Validates and removes custom sorting for Y-axis values in chart fields.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <returns>The updated list of fields with validated custom sorting.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateNumberCard(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Validates the fields for number card or card chart types, ensuring appropriate container name assignments.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <returns>The updated list of fields with validated container names for number card or card types.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FieldValidator.ValidateUniqueColumnName(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Validates and assigns unique column names to fields if they are missing.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <returns>The updated list of fields with unique column names.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor">
            <summary>
            Processes filter and custom sorting information for AI fields.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.UpdateFilterInfo(System.String,System.String,System.String)">
            <summary>
            Updates the filter information based on the provided JSON, field type, and unique column name.
            </summary>
            <param name="filterJson">The JSON string representing the filter information.</param>
            <param name="fieldType">The type of the field (Measures, Dimensions, DateTime).</param>
            <param name="uniqueColumnName">The unique name of the column for which filter information is prepared.</param>
            <returns>A JSON-serialized string containing updated filter information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Prepares filter information for a specified AI field based on column data and field types.
            </summary>
            <param name="aiField">The AI field with filter information.</param>
            <param name="columnsData">The column data containing column IDs.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="fieldTypeData">The field type data for various columns.</param>
            <returns>A dictionary containing processed filter information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.FormatDate(System.String)">
            <summary>
            Formats the specified date string into a standardized format.
            </summary>
            <param name="dateString">receives date as string.</param>
            <returns>expected formated date.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareCustomSorting(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Prepares custom sorting information for a specified AI field.
            </summary>
            <param name="aiField">The AI field with custom sorting information.</param>
            <param name="columnsData">The column data containing column IDs.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="fieldTypeData">The field type data for various columns.</param>
            <returns>A dictionary containing custom sorting information, or null if not applicable.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.UpdateRankFilterInfo(System.String)">
            <summary>
            Prepares custom sorting information for a specified AI field.
            </summary>
            <param name="rankJson">The AI field with custom sorting information.</param>
            <returns>A dictionary containing custom sorting information, or null if not applicable.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.UpdateCustomSorting(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Updates the custom sorting details based on the provided parameters.
            </summary>
            <param name="aiField">A dictionary containing AI field data.</param>
            <param name="columnsData">A dictionary mapping column names to their respective IDs.</param>
            <param name="keysList">A list of keys available for matching.</param>
            <param name="fieldTypeData">A dictionary mapping column names to their data types or summary types.</param>
            <returns>
            A JSON string representing the custom sorting configuration if sorting is applied;
            otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareMeasureFilterInfo(BoldBi.Ai.Base.Models.Filters,System.String)">
            <summary>
            Prepares a dictionary containing measure filter metadata.
            </summary>
            <param name="filter">The filter criteria, including column name, conditions, and values.</param>
            <param name="uniqueColumnName">The unique column name for the filter.</param>
            <returns>
            A dictionary with key <c>"MeasureFilterInfo"</c> and value as another dictionary containing:
            <c>ColumnName</c>, <c>Conditions</c>, <c>Values</c>, and <c>UniqueColumnName</c>.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareDimensionFilterInfo(BoldBi.Ai.Base.Models.Filters)">
            <summary>
            Prepares a dictionary containing dimension filter metadata.
            </summary>
            <param name="filter">The filter criteria, including inclusion/exclusion and filter values.</param>
            <returns>
            A dictionary with key <c>"DimensionFilterInfo"</c> containing:
            <c>IsAllowFilteringApplied</c>, <c>AllowFilterInfo</c>, and <c>DateFilterInfo</c>.
            </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareDateTimeFilterInfo(BoldBi.Ai.Base.Models.Filters)">
            <summary>
            Prepares a dictionary containing date-time filter metadata based on the filter type.
            </summary>
            <param name="filter">The filter criteria, including relative and non-relative date filter details.</param>
            <returns>
            A dictionary with date-time filter metadata, either relative or non-relative, based on the filter configuration.
            </returns>
            <remarks>
            Calls <c>PrepareRelativeDateTimeFilterInfo</c> if the filter has a relative date type; otherwise,
            it calls <c>PrepareNonRelativeDateTimeFilterInfo</c>.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareRelativeDateTimeFilterInfo(BoldBi.Ai.Base.Models.Filters)">
            <summary>
            Prepares a dictionary containing metadata for relative date-time filters.
            </summary>
            <param name="filter">The filter criteria, including relative date range and generic or specific filter details.</param>
            <returns>
            A dictionary with key <c>"RelativeDateFilterInfo"</c> containing metadata such as <c>RelativeDateFormat</c>,
            <c>DateInstance</c>, and <c>Range</c>.
            </returns>
            <remarks>
            Determines whether the filter uses a generic or specific relative date type and populates the metadata accordingly.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.PrepareNonRelativeDateTimeFilterInfo(BoldBi.Ai.Base.Models.Filters)">
            <summary>
            Prepares a dictionary containing metadata for non-relative date-time filters.
            </summary>
            <param name="filter">The filter criteria, including time unit, conditions, and values.</param>
            <returns>
            A dictionary with key <c>"DimensionFilterInfo"</c> containing metadata such as filtering rules and date filter details.
            </returns>
            <remarks>
            If the filter uses date or datetime with non-equal conditions, it populates specific date conditions.
            Otherwise, it sets default filtering metadata.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.AddNonRelativeDateConditions(BoldBi.Ai.Base.Models.Filters,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds date condition metadata to the provided dictionary based on the filter's condition and values.
            </summary>
            <param name="filter">The filter containing the condition and associated date values.</param>
            <param name="dateFilterInfo">
            A dictionary where date condition metadata, such as <c>DateFormatCondition</c>, <c>StartDate</c>, and <c>EndDate</c>, will be added.
            </param>
            <remarks>
            Processes the filter's condition (e.g., <c>Between</c>, <c>GreaterThan</c>, <c>LessThan</c>) and formats the date values accordingly.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.ExtractFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Extracts filter information from an AI field.
            </summary>
            <param name="aiField">The AI field containing filter information.</param>
            <returns>A dictionary containing extracted filter information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.RemoveFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Removes specific filter information from the provided filter dictionary.
            </summary>
            <param name="filterInfo">The filter information dictionary.</param>
            <param name="key">The key of the filter info to remove.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.ProcessDimensionFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes dimension filter information, updating based on data characteristics.
            </summary>
            <param name="filterInfo">The filter information dictionary.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="columnsData">The column data containing column IDs.</param>
            <param name="fieldTypeData">The field type data for various columns.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.ProcessTopNFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes the top N filter information, updating columns and summary types as needed.
            </summary>
            <param name="dimensionFilterInfo">The dimension filter information dictionary.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="columnsData">The column data containing column IDs.</param>
            <param name="fieldTypeData">The field type data for various columns.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.ProcessConditionFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes the condition filter information, updating columns as needed.
            </summary>
            <param name="dimensionFilterInfo">The dimension filter information dictionary.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="columnsData">The column data containing column IDs.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.FilterInfoProcessor.ProcessMeasureFilterInfo(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Processes measure filter information, updating columns as needed.
            </summary>
            <param name="filterInfo">The filter information dictionary.</param>
            <param name="keysList">The list of column keys.</param>
            <param name="columnsData">The column data containing column IDs.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions">
            <summary>
            Utility class for handling JSON validation and formatting, with support for AI-assisted formatting.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions.FormatToValidJson(System.String)">
            <summary>
            Formats an unformatted JSON string by quoting keys and values to make it valid JSON.
            </summary>
            <param name="unFormattedJson">The unformatted JSON string.</param>
            <returns>A valid JSON formatted string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions.ParseJson(System.String)">
            <summary>
            Parses the AI response JSON and returns it as a dictionary.
            </summary>
            <param name="aiResponse">Response from AI. </param>>
            <returns>Dictionary of string and object. </returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions.ExtractJsonFromAiResponse(Microsoft.SemanticKernel.TextContent)">
            <summary>
            Extracts JSON content from the AI response text.
            </summary>
            <param name="response">The AI response containing the JSON text.</param>
            <returns>The extracted JSON string if found; otherwise, an empty string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions.IsValidAiResponse(System.String)">
            <summary>
            Checks if the given AI response is in a valid JSON format by matching against a JSON pattern.
            </summary>
            <param name="aiResponse">The AI response string to validate.</param>
            <returns><c>true</c> if the AI response matches the JSON pattern; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.JsonFunctions.IsValidJsonFormat(System.String)">
            <summary>
            Checks if a given string is in valid JSON format.
            </summary>
            <param name="jsonString">The JSON string to validate.</param>
            <returns>True if the string is valid JSON; otherwise, false.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator">
            <summary>
            Provides methods to detect the appropriate chart type based on input data and user queries.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.DetectChartType(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Detects the chart type based on the question, data characteristics, and an optional default chart type.
            </summary>
            <param name="question">The question from the user that may suggest a chart type.</param>
            <param name="dimensionCount">The count of dimensions in the data.</param>
            <param name="measureCount">The count of measures in the data.</param>
            <param name="isSorting">Indicates whether sorting is applied to the data.</param>
            <param name="isAggregateField">Indicates whether the field is aggregated.</param>
            <param name="defaultChartType">The default chart type, if specified.</param>
            <returns>Returns the detected chart type as a <see cref="T:BoldBi.Ai.Base.Enums.WidgetTypes"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ResolveWidgetType(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel})">
            <summary>
            Resolves the widget type based on the AI assistance request, response, and field information models.
            </summary>
            <param name="request">The AI assistance request containing the user query.</param>
            <param name="response">The AI assistance response containing the chart type.</param>
            <param name="fieldInfoModels">A list of field information models.</param>
            <returns>Returns the resolved widget type as a <see cref="T:BoldBi.Ai.Base.Enums.WidgetTypes"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.IsSupportedWidgetType(BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            Checks if the specified widget type is supported.
            </summary>
            <param name="widgetTypes">The widget type to check.</param>
            <returns>True if the widget type is supported; otherwise, false.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.WidgetTypeValidation(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
            <summary>
            Validates the widget type based on the provided field data and chart type.
            </summary>
            <param name="fieldData">The list of field data to validate.</param>
            <param name="chartType">The type of the chart to validate against.</param>
            <returns>A tuple containing the validated field data and the corresponding widget type.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ValidateWidgetInfo(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
            <summary>
            Validates widget information based on the provided fields and chart type.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="chartType">The type of chart to validate against.</param>
            <returns>A task that represents the asynchronous operation, with a boolean result indicating validation success.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.GetKeywordsForWidgetType(BoldBi.Ai.Base.Enums.WidgetTypes)">
            <summary>
            Retrieves a list of keywords associated with a specified widget type.
            </summary>
            <param name="widgetType">The widget type for which to retrieve keywords.</param>
            <returns>Returns a list of keywords for the specified widget type, or null if none are defined.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.DetectFromQuestion(System.String)">
            <summary>
            Detects the chart type based on keywords found in the user question.
            </summary>
            <param name="question">The question from the user.</param>
            <returns>Returns a matching <see cref="T:BoldBi.Ai.Base.Enums.WidgetTypes"/> if keywords are found; otherwise, null.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.DetectFromData(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Detects the chart type based on data characteristics such as the number of measures, dimensions, and aggregation.
            </summary>
            <param name="measureCount">The count of measures in the data.</param>
            <param name="dimensionCount">The count of dimensions in the data.</param>
            <param name="isAggregateField">Indicates whether the field is aggregated.</param>
            <param name="isSorting">Indicates whether sorting is applied to the data.</param>
            <returns>Returns the appropriate chart type as a <see cref="T:BoldBi.Ai.Base.Enums.WidgetTypes"/> based on the data characteristics.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.DetectFromDefaultChartType(System.String)">
            <summary>
            Detects the chart type based on a specified default chart type, throwing an exception if unsupported.
            </summary>
            <param name="defaultChartType">The default chart type as a string.</param>
            <returns>Returns the detected chart type as a <see cref="T:BoldBi.Ai.Base.Enums.WidgetTypes"/> based on the default chart type.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">Thrown when the default chart type is unsupported.</exception>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ValidateGrid(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Int32,System.Int32)">
            <summary>
            Validates grid widgets based on the specified fields and counts.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="filterColumnCount">The count of filter columns.</param>
            <param name="totalFieldCount">The total count of fields.</param>
            <returns>A boolean indicating whether the grid is valid.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ValidateComplexWidget(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Int32,System.Int32)">
            <summary>
            Validates complex widgets based on the specified fields and counts.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="filterColumnCount">The count of filter columns.</param>
            <param name="totalFieldCount">The total count of fields.</param>
            <returns>A boolean indicating whether the complex widget is valid.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ValidateNumberCard(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Int32,System.Int32)">
            <summary>
            Validates number card widgets based on the specified fields and counts.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="filterColumnCount">The count of filter columns.</param>
            <param name="totalFieldCount">The total count of fields.</param>
            <returns>A boolean indicating whether the number card widget is valid.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetInfoValidator.ValidateScatter(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Int32,System.Int32)">
            <summary>
            Validates scatter widgets based on the specified fields and counts.
            </summary>
            <param name="fields">The list of fields to validate.</param>
            <param name="filterColumnCount">The count of filter columns.</param>
            <param name="totalFieldCount">The total count of fields.</param>
            <returns>A boolean indicating whether the scatter widget is valid.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper">
            <summary>
            Helper class for preparing widget data for AI assistance response.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.SetDatasourceFieldsInfo(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Asynchronously sets information about data source fields based on the provided inputs.
            </summary>
            <param name="fields">List of fields information from the data source.</param>
            <param name="tableInfo">Table details for data source mapping.</param>
            <param name="chartType">Type of chart to prepare data for.</param>
            <param name="request">The AI assistance request object.</param>
            <returns>Returns an AI assistance response with serialized field information.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.SetDatasourceFieldsInfoFromStructureOutput(System.String,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String)">
            <summary>
            Configures and prepares datasource field information from the structure output for AI assistance.
            </summary>
            <param name="fieldJson">
            A JSON string representing the fields and their properties.
            </param>
            <param name="tableInfo">
            A list of <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails"/> objects containing table metadata.
            </param>
            <param name="chartType">
            A string representing the type of chart (e.g., bar, pie, line).
            </param>
            <returns>
            An instance of <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> containing the configured field information,
            the associated datasource ID, the chart type, and the table information.
            </returns>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">
            Thrown if the <paramref name="fieldJson"/> cannot be deserialized into the expected format.
            </exception>
            <remarks>
            This method processes the provided field structure, maps table names to datasource IDs,
            prepares field information based on chart type, and returns the necessary information for AI assistance.
            </remarks>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.GetDataSourceIdAndFieldMappings(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Retrieves the data source ID and data source name based on the provided field mappings, table data, and table information.
            Also populates dictionaries for column mappings, field types, and actual field data types.
            </summary>
            <param name="fields">A list of dictionaries representing field information, where each dictionary contains field metadata.</param>
            <param name="tableData">A dictionary mapping table names to their respective data source IDs.</param>
            <param name="tableKeyList">A list of table names used for matching the closest table name.</param>
            <param name="tableInfo">A list of <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails"/> containing details about tables and their fields.</param>
            <param name="columnsData">An output parameter that is populated with a dictionary mapping column names to field IDs.</param>
            <param name="fieldTypeData">An output parameter that is populated with a dictionary mapping column names to their field types.</param>
            <param name="fieldActualType">An output parameter that is populated with a dictionary mapping column names to their actual data types.</param>
            <returns>Returns the data source ID.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.PrepareFields(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Asynchronously prepares the fields for serialization by validating and updating field properties.
            </summary>
            <param name="fields">List of fields to be prepared.</param>
            <param name="columnsData">Dictionary of column name to column ID mappings.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <param name="fieldActualType">Dictionary of column name to actual type mappings.</param>
            <param name="chartType">The type of chart for which the fields are being prepared.</param>
            <returns>Returns a list of dictionaries containing updated field properties.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.PrepareFieldsForStructureOutput(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Asynchronously prepares the fields for serialization by validating and updating field properties.
            </summary>
            <param name="fields">List of fields to be prepared.</param>
            <param name="columnsData">Dictionary of column name to column ID mappings.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <param name="fieldActualType">Dictionary of column name to actual type mappings.</param>
            <param name="chartType">The type of chart for which the fields are being prepared.</param>
            <returns>Returns a list of dictionaries containing updated field properties.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.ValidateFieldName(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Validates the column name in the provided field dictionary.
            </summary>
            <param name="aiField">Dictionary containing field properties to validate.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.PopulateFieldData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Populates field data with properties based on the provided mappings and chart type.
            </summary>
            <param name="aiField">Dictionary containing field properties to be populated.</param>
            <param name="columnsData">Dictionary of column name to column ID mappings.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <param name="fieldActualType">Dictionary of column name to actual type mappings.</param>
            <param name="chartType">The type of chart for which the fields are being prepared.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.PopulateFieldDataForStructureOutput(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Populates field data with properties based on the provided mappings and chart type.
            </summary>
            <param name="aiField">Dictionary containing field properties to be populated.</param>
            <param name="columnsData">Dictionary of column name to column ID mappings.</param>
            <param name="fieldTypeData">Dictionary of column name to field type mappings.</param>
            <param name="fieldActualType">Dictionary of column name to actual type mappings.</param>
            <param name="chartType">The type of chart for which the fields are being prepared.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.GetFieldDateTimeFormat(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Gets the DateTime format for the provided field based on the actual type.
            </summary>
            <param name="aiField">Dictionary containing field properties.</param>
            <param name="actualType">The actual data type of the field.</param>
            <returns>Returns a string representing the DateTime format.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.OutputPreparation.Classes.WidgetPreparationHelper.SerializeJsonFields(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>
            Serializes the prepared fields to a JSON string.
            </summary>
            <param name="jsonFields">List of dictionaries containing field properties.</param>
            <returns>Returns a JSON string representing the serialized fields.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.SandboxUsersHelper">
            <summary>
            Helper class for managing AI sandbox users.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SandboxUsersHelper.AddSandboxUser(System.String)">
            <summary>
            Adds or updates a sandbox user based on the provided JSON input.
            If the user exists, updates their access status and request balance. Otherwise, adds a new user.
            </summary>
            <param name="inputJson">The JSON input containing the user email.</param>
            <returns>An <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse"/> object indicating the success or failure of the operation.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.SemanticSearchHelper">
            <summary>
            Provides functionality to perform semantic searches on data sources using OpenAI embeddings.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SemanticSearchHelper.SearchRelevantDS(System.String,System.Collections.Generic.List{BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails},System.String)">
            <summary>
            Searches for the most relevant data source based on the provided question.
            </summary>
            <param name="question">The question or query string used to search for relevant data sources.</param>
            <param name="tableInfosList">A list of <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails"/> containing data source information and fields.</param>
            <param name="serviceKey">The OpenAI service key used for embedding and search generation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, containing the ID of the relevant data source if found.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.SessionManager">
            <summary>
            Manages the creation and termination of AI sessions, along with logging related activities.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.CreateSession(System.String)">
            <summary>
            Creates a new AI session based on the provided JSON input and logs relevant details.
            </summary>
            <param name="jsonInput">The JSON string containing session and user details.</param>
            <returns>A JSON string representing the created assistant and session details.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.EndSession(System.String)">
            <summary>
            Ends an AI session based on the provided JSON input, logs the termination, and updates the session end time in the database.
            </summary>
            <param name="jsonInput">The JSON string containing session termination details.</param>
            <returns>An object indicating the result of the session termination.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.LogSessionUsage(System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Logs the session usage details, including token counts and associated costs.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="inputTokens">The number of input tokens used during the session.</param>
            <param name="outputTokens">The number of output tokens generated during the session.</param>
            <param name="totalTokens">The total number of tokens used in the session.</param>
            <param name="inputTokenCost">The cost associated with input tokens.</param>
            <param name="outputTokenCost">The cost associated with output tokens.</param>
            <param name="totalTokensCost">The total cost of tokens used in the session.</param>
            <param name="loggingAssistance">An object containing logging information.</param>
            <param name="startTime">The optional start time of the session.</param>
            <param name="endTime">The optional end time of the session.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.LogSearchUsage(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Logs the search usage data including token counts and associated costs.
            </summary>
            <param name="aiAssistanceRequest">The AI assistance request containing session and logging data.</param>
            <param name="searchTime">The time at which the search was performed.</param>
            <param name="inputTokens">The number of input tokens used during the search.</param>
            <param name="outputTokens">The number of output tokens generated during the search.</param>
            <param name="totalTokens">The total number of tokens used in the search.</param>
            <param name="inputTokenCost">The cost associated with input tokens.</param>
            <param name="outputTokenCost">The cost associated with output tokens.</param>
            <param name="totalTokensCost">The total cost of tokens used in the search.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.LogUserDetails(BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs the details of the user involved in the session.
            </summary>
            <param name="loggingAssistance">The object containing user details.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.SessionManager.LogSiteDetails(BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Logs the details of the site involved in the session.
            </summary>
            <param name="loggingAssistance">The object containing site details.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Helpers.UsageLogFactory">
            <summary>
            Provides functionality for processing and sending messages to an Azure Service Bus queue.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.UsageLogFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Helpers.UsageLogFactory"/> class and sets up the Azure Service Bus client.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.UsageLogFactory.GetUsageLogFactory">
            <summary>
            Retrieves the singleton instance of <see cref="T:BoldBi.Ai.Base.Helpers.UsageLogFactory"/>.
            </summary>
            <returns>The singleton instance of <see cref="T:BoldBi.Ai.Base.Helpers.UsageLogFactory"/>.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.UsageLogFactory.DisposeAsync">
            <summary>
            Releases the resources used by the Service Bus client and sender asynchronously.
            </summary>
            <returns>A task that represents the asynchronous disposal operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.UsageLogFactory.ProcessMessage(System.Object,System.String,BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance)">
            <summary>
            Processes and sends a message to the specified Azure Service Bus queue.
            </summary>
            <param name="message">The message to be processed and sent.</param>
            <param name="queueName">The name of the Azure Service Bus queue.</param>
            <param name="loggingAssistance">The logging details for error handling and tracking.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Helpers.UsageLogFactory.InitializeServiceBus">
            <summary>
            Initializes the Azure Service Bus client connection.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Implementations.ChatMessageProcessor">
            <summary>
            Processes chat messages and executes related AI operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ChatMessageProcessor.ExecuteChatMessageContent(BoldBi.Ai.Base.AIConnection.IAiConnection,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Executes the chat message content by using the specified AI connection.
            </summary>
            <param name="connection">The AI connection to execute the message content.</param>
            <param name="request">The request containing details of the chat message to process.</param>
            <returns>A <see cref="T:Microsoft.SemanticKernel.ChatMessageContent"/> object containing the processed chat message content.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ChatMessageProcessor.ExecuteChatProcess(BoldBi.Ai.Base.AIConnection.IAiConnection,Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Processes the chat message content to create input data for AI assistance.
            </summary>
            <param name="connection">The AI connection to execute the chat process.</param>
            <param name="chatMessageContent">The content of the chat message to process.</param>
            <returns>An <see cref="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder"/> object containing the data for further AI processing.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Implementations.ConnectionFactory">
            <summary>
            Provides functionality to create and manage AI connections and usage tokens.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ConnectionFactory.CreateConnection(BoldBi.Ai.Base.Enums.Mode,BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Creates an AI connection based on the specified mode and operation.
            </summary>
            <param name="mode">The mode of operation for the AI connection.</param>
            <param name="operation">The type of AI operation to execute.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an <see cref="T:BoldBi.Ai.Base.AIConnection.IAiConnection"/> instance.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ConnectionFactory.UpdateUsageTokens(BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens)">
            <summary>
            Updates the usage tokens with the specified token values.
            </summary>
            <param name="tokens">The <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> containing new token values to add to the existing totals.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ConnectionFactory.GetUsageTokens">
            <summary>
            Gets the current usage tokens.
            </summary>
            <returns>The <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> containing the current token usage information.</returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Implementations.ResponseBuilder">
            <summary>
            Provides functionality to build and process responses for AI operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ResponseBuilder.IsValidJson(System.String)">
            <summary>
            Checks if the provided string is a valid JSON format.
            </summary>
            <param name="json">The JSON string to validate.</param>
            <returns>A task that represents the asynchronous operation. The task result contains a boolean indicating whether the JSON is valid.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ResponseBuilder.FormatToValidJson(System.String)">
            <summary>
            Formats the provided text into valid JSON format.
            </summary>
            <param name="text">The text to format into JSON.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the formatted JSON string.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ResponseBuilder.GetAiService(BoldBi.Ai.Base.Enums.AiOperation)">
            <summary>
            Retrieves the AI service process for the specified AI operation type.
            </summary>
            <param name="type">The type of AI operation to process.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an instance of <see cref="T:BoldBi.Ai.Base.Contracts.IBoldAiProcess"/> for the specified operation.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.ResponseBuilder.ConvertAiResponseToFieldInfo(System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Converts the AI response JSON to field information based on the provided AI assistance request.
            </summary>
            <param name="json">The JSON response from the AI service.</param>
            <param name="aiAssistanceRequest">The request containing details of the AI assistance operation.</param>
            <returns>A task that represents the asynchronous operation. The task result contains an <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse"/> with the converted field information.</returns>
            <exception cref="T:BoldBi.Ai.Base.ExceptionHandler.AiException">
            Thrown when the provided JSON is not a valid AI response or an error occurs during processing.
            </exception>
        </member>
        <member name="T:BoldBi.Ai.Base.Implementations.UsageProcessor">
            <summary>
            Processes and updates AI usage information for a given request.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.UsageProcessor.ProcessUsage(OpenAI.Chat.ChatTokenUsage,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes and updates the usage information for a specified AI operation.
            </summary>
            <param name="tokensSpent">The usage details from the AI service completion response.</param>
            <param name="licenseKey">The encrypted license key for the AI service.</param>
            <param name="modelId">The identifier of the AI model used.</param>
            <param name="request">The AI assistance request containing operation details.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Implementations.UsageProcessor.ProcessUsage(System.Int32,System.Int32,System.Int32,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Processes the token usage and updates the relevant information using the provided details.
            </summary>
            <param name="inputToken">The number of input tokens used.</param>
            <param name="outputToken">The number of output tokens generated.</param>
            <param name="totalToken">The total number of tokens used (input + output).</param>
            <param name="licenseKey">The encrypted license key for the tenant.</param>
            <param name="modelId">The ID of the AI model used for processing.</param>
            <param name="request">The AI assistance request object containing additional metadata.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.LoggingSystem.ActivityLogger">
            <summary>
            Handles logging of AI activity, including search and data logs, for AI assistance requests and responses.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.LoggingSystem.ActivityLogger.AddActivityLog(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse,System.String)">
            <summary>
            Adds both search and data activity logs based on the provided AI assistance request and response.
            </summary>
            <param name="aiAssistanceRequest">The request containing AI assistance information.</param>
            <param name="aiAssistanceResponse">The response containing results from the AI assistance process.</param>
            <param name="aiModel">The AI model used for the request.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.LoggingSystem.ActivityLogger.SearchLog(BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Logs search activity for an AI assistance request.
            </summary>
            <param name="aiAssistanceRequest">The request containing AI assistance information.</param>
            <param name="dataSourceId">The data source identifier associated with the search.</param>
            <param name="sessionId">The session identifier for the request.</param>
            <param name="hasError">Indicates whether the search encountered an error.</param>
            <param name="response">The response generated by the AI model.</param>
            <param name="status">The status of the response.</param>
            <param name="aiModel">The AI model used for the request.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.LoggingSystem.ActivityLogger.DataLog(System.String,System.String,System.String,BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest)">
            <summary>
            Logs data information about the data source involved in an AI assistance request.
            </summary>
            <param name="dataSourceId">The data source identifier associated with the data.</param>
            <param name="tableInfo">The table information in JSON format.</param>
            <param name="dataSourceName">The name of the data source.</param>
            <param name="aiAssistanceRequest">The AI assistance request containing logging details.</param>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest">
            <summary>
            Represents the request model for AI assistance in BoldBI.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.SessionId">
            <summary>
            Gets or sets the session identifier for the AI request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.Query">
            <summary>
            Gets or sets the query that the user has input for AI processing.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.PreviousQuestions">
            <summary>
            Gets or sets the previous questions asked by the user in the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.QueryId">
            <summary>
            Gets or sets the unique identifier for the query.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.TableInfos">
            <summary>
            Gets or sets information about the tables involved in the request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.LoggingData">
            <summary>
            Gets or sets the logging data for tracking AI assistance interactions.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.FullName">
            <summary>
            Gets or sets the full name of the user making the request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.Mode">
            <summary>
            Gets or sets the mode in which the AI assistance is being used (e.g., Design or View mode).
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.RequestType">
            <summary>
            Gets or sets the type of request being made (e.g., Query, Suggestion).
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.AiOperationType">
            <summary>
            Gets or sets the Ai Operation Type making the request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.AiAssistanceRequest.Url">
            <summary>
            Gets or sets the server url making the request.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.ChartProperty">
            <summary>
            Represents properties related to a chart within an AI assistance session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.ChartProperty.HasChartProperty">
            <summary>
            Gets or sets a value indicating whether the chart has specific properties set.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.ChartProperty.Question">
            <summary>
            Gets or sets the question associated with the chart request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.ChartProperty.WidgetName">
            <summary>
            Gets or sets the name of the widget to which the chart is associated.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.ChartProperty.Answer">
            <summary>
            Gets or sets the answer generated by the AI related to the chart.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.CreateWidgetInput">
            <summary>
            Represents the input model for creating a widget in an AI assistance session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.CreateWidgetInput.Question">
            <summary>
            Gets or sets the question or query associated with creating the widget.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.DeleteWidget">
            <summary>
            Represents the input model for deleting a widget in an AI assistance session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.DeleteWidget.Question">
            <summary>
            Gets or sets the question or query associated with the delete action.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.DeleteWidget.WidgetAction">
            <summary>
            Gets or sets the action type for the widget (e.g., delete action).
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.DeleteWidget.ChartName">
            <summary>
            Gets or sets the name of the chart or widget to be deleted.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.History">
            <summary>
            Represents the interaction history in an AI assistance session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.History.User">
            <summary>
            Gets or sets the user's message or input in the interaction history.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.History.Assistant">
            <summary>
            Gets or sets the assistant's response in the interaction history.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.History.Function">
            <summary>
            Gets or sets the function or action performed during the interaction.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder">
            <summary>
            Represents the builder for organizing input data related to widget creation, chart properties, and widget deletion.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder.CreateWidgets">
            <summary>
            Gets or sets the list of widgets to be created.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder.ChatProperties">
            <summary>
            Gets or sets the list of chart properties associated with the AI interactions.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.InputDataBuilder.WidgetDeletion">
            <summary>
            Gets or sets the list of widgets marked for deletion.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails">
            <summary>
            Represents the details of a data source table used in AI assistance interactions.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails.DataSourceId">
            <summary>
            Gets or sets the identifier of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails.DataSourceName">
            <summary>
            Gets or sets the name of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIInputBuilder.TableInfoDetails.Fields">
            <summary>
            Gets or sets the list of field information associated with the data source.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails">
            <summary>
            Represents the details of an AI key used for licensing and rate-limiting in BoldBI.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.#ctor(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Double,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails"/> class with specified parameters.
            </summary>
            <param name="aiKey">The AI key associated with the license.</param>
            <param name="tenantId">The tenant identifier associated with the AI key.</param>
            <param name="isActive">A value indicating whether the AI key is active.</param>
            <param name="plan">The plan type associated with the AI key.</param>
            <param name="rateLimit">The rate limit for the AI key.</param>
            <param name="amount">The monetary amount associated with the AI key.</param>
            <param name="createdDate">The date the AI key was created.</param>
            <param name="lastModifiedDate">The date the AI key was last modified.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.AiKey">
            <summary>
            Gets or sets the AI key associated with the license.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.TenantId">
            <summary>
            Gets or sets the tenant identifier associated with the AI key.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.IsActive">
            <summary>
            Gets or sets a value indicating whether the AI key is active.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.Plan">
            <summary>
            Gets or sets the plan type associated with the AI key.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.RateLimit">
            <summary>
            Gets or sets the rate limit for the AI key.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.Amount">
            <summary>
            Gets or sets the monetary amount associated with the AI key.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.CreatedDate">
            <summary>
            Gets or sets the date the AI key was created.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiKeyDetails.LastModifiedDate">
            <summary>
            Gets or sets the date the AI key was last modified.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AILicense.AiLicense">
            <summary>
            Represents an AI license with details about the AI key, plan, rate limit, amount, and tenant identifier.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiLicense.AiKey">
            <summary>
            Gets or sets the AI key associated with the license.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiLicense.Plan">
            <summary>
            Gets or sets the plan type associated with the AI license. Nullable.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiLicense.RateLimit">
            <summary>
            Gets or sets the rate limit for the AI license. Nullable.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiLicense.Amount">
            <summary>
            Gets or sets the monetary amount associated with the AI license. Nullable.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AiLicense.TenantId">
            <summary>
            Gets or sets the tenant identifier associated with the AI license. Nullable.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers">
            <summary>
            Represents a sandbox user for AI services.
            Contains details about the user's email, access status, and request balance.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers"/> class with the specified parameters.
            </summary>
            <param name="userEmail">The email address of the sandbox user.</param>
            <param name="canAccess">Indicates whether the user has access to the sandbox.</param>
            <param name="balanceRequests">The remaining number of requests the user can make.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.UserID">
            <summary>
            Gets or sets the user guid.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.UserEmail">
            <summary>
            Gets or sets the email address of the sandbox user.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.CanAccess">
            <summary>
            Gets or sets a value indicating whether the sandbox user has access to the AI services.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.BalanceRequests">
            <summary>
            Gets or sets the number of remaining requests the user can make in the sandbox.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AILicense.AISandboxUsers.CreatedDate">
            <summary>
            Gets or sets the created date of the entry.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AILicense.PlanRateLimit">
            <summary>
            Provides functionality to retrieve rate limits and associated amounts based on plan types.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.PlanRateLimit.GetRateLimitAndAmount(System.Int32)">
            <summary>
            Retrieves the rate limit and amount based on the specified plan type.
            </summary>
            <param name="plan">The plan type as an integer.</param>
            <returns>A tuple containing the rate limit and amount associated with the plan.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when an invalid plan value is provided.</exception>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AILicense.TenantInfo">
            <summary>
            Provides functionality to handle tenant-related information, including decrypting AI keys.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AILicense.TenantInfo.GetDecryptedAiKey(System.String)">
            <summary>
            Retrieves the decrypted AI key from the provided encrypted AI key.
            </summary>
            <param name="encryptedAiKey">The encrypted AI key as a string.</param>
            <returns>
            The decrypted AI key if successful; otherwise, an empty string if the input is null or empty.
            </returns>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField">
            <summary>
            Represents a business intelligence field structure used in AI output preparation.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField"/> class.
            Initializes a new instance.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.BiField.Fields">
            <summary>
            Gets or Sets the collection of fields associated with this BI field.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel">
            <summary>
            Represents a model containing column name information and associated field details.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.ColumnsAndFieldInfoModel.FieldInfos">
            <summary>
            Gets or sets the list of field information associated with the column.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIOutputPreparation.Field">
            <summary>
            Represents a field used in data processing with relevant properties for configuration and filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.Name">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.ContainerName">
            <summary>
            Gets or sets the container name to which the field belongs.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.SummaryType">
            <summary>
            Gets or sets the summary type used for aggregation or display of the field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.DateTimeFormat">
            <summary>
            Gets or sets the datetime format associated with the field, if applicable.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.DisplayName">
            <summary>
            Gets or sets the display name for the field, which can be shown in UI elements.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.UniqueColumnName">
            <summary>
            Gets or sets the unique column name for the field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.TableName">
            <summary>
            Gets or sets the table name where the field is located.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.IsVisible">
            <summary>
            Gets or sets a value indicating whether the field is visible. Default is true.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.IsFilterColumn">
            <summary>
            Gets or sets a value indicating whether the field can be used as a filter column. Default is false.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.FilterInfo">
            <summary>
            Gets or sets the filter information for the field, which can be used to apply filter conditions.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.RankFilterInfo">
            <summary>
            Gets or sets the rank filter information for the field, which can be used to apply rank-based filter conditions.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.IsExpressionField">
            <summary>
            Gets or sets a value indicating whether the field is an expression field (computed via expressions). Default is false.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.Field.CustomSorting">
            <summary>
            Gets or sets the custom sorting logic or criteria for the object.
            This property can be used to define or access a custom sorting mechanism.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput">
            <summary>
            Represents field information input for OpenAI processing, including details about column, field type, data type, and table.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput.FieldType">
            <summary>
            Gets or sets the type of the field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput.DataType">
            <summary>
            Gets or sets the data type of the field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput.TableName">
            <summary>
            Gets or sets the name of the table to which the field belongs.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIOutputPreparation.OpenAiFieldInfoInput.Id">
            <summary>
            Gets or sets the unique identifier for the field.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse">
            <summary>
            Represents the API response from an AI request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse.ApiResponse">
            <summary>
            Gets or sets a value indicating whether the API response was successful.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse.HasError">
            <summary>
            Gets or sets a value indicating whether there was an error in processing the request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse.Error">
            <summary>
            Gets or sets the error message, if any occurred during the processing of the request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiApiResponse.StatusMessage">
            <summary>
            Gets or sets the status message describing the result of the API request.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse">
            <summary>
            Represents the response from the AI assistance request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.AiResponse">
            <summary>
            Gets or sets the AI-generated response text.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.ChartType">
            <summary>
            Gets or sets the type of chart requested.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.DatasourceId">
            <summary>
            Gets or sets the ID of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.ErrorCode">
            <summary>
            Gets or sets the error code if an error occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.ErrorMessage">
            <summary>
            Gets or sets the error message if an error occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.Response">
            <summary>
            Gets or sets the additional response object from the AI.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.Status">
            <summary>
            Gets or sets the status of the AI response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.TableInfo">
            <summary>
            Gets or sets the list of table information details associated with the response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.HasAdditionalInfo">
            <summary>
            Gets or sets a value indicating whether additional information is available.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.DataSourceName">
            <summary>
            Gets or sets the name of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AiAssistanceResponse.Title">
            <summary>
            Gets or sets the title of the response.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage">
            <summary>
            Represents the usage details of AI, including token counts for input, output, and total.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage.OutputTokenCount">
            <summary>
            Gets or sets the number of tokens generated in the output.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage.InputTokenCount">
            <summary>
            Gets or sets the number of tokens provided in the input.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage.TotalTokenCount">
            <summary>
            Gets or sets the total number of tokens used (input + output).
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Assistant">
            <summary>
            Represents an AI assistant instance.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Assistant.AssistantID">
            <summary>
            Gets or sets the unique identifier for the assistant.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Assistant.AssistantType">
            <summary>
            Gets or sets the type of the assistant (e.g., chatbot, virtual agent).
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Assistant.Session">
            <summary>
            Gets or sets the session information associated with the assistant.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Session">
            <summary>
            Represents a session for an AI assistant.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Session.SessionID">
            <summary>
            Gets or sets the unique identifier for the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Session.StartTime">
            <summary>
            Gets or sets the start time of the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Session.EndTime">
            <summary>
            Gets or sets the end time of the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Session.IsActive">
            <summary>
            Gets or sets a value indicating whether the session is currently active.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.ChartPropertiesList">
            <summary>
            Contains a list of property names used for configuring chart properties.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ChartPropertiesList.PropertyNames">
            <summary>
            A static list of property names that can be used for chart configuration.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse">
            <summary>
            Represents the response from the chat interface containing widget manipulation details.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse.CreateWidgetResponse">
            <summary>
            Gets or sets the response for creating a widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse.UpdateWidgetResponse">
            <summary>
            Gets or sets the response for updating a widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse.ChartManipulation">
            <summary>
            Gets or sets the list of widgets to be deleted as part of chart manipulation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse.Greetings">
            <summary>
            Gets or sets the greetings message.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse">
            <summary>
            Represents the response for creating a widget in the chat interface.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.WidgetType">
            <summary>
            Gets or sets the type of the widget being created.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.DataSourceId">
            <summary>
            Gets or sets the ID of the data source associated with the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.DataSourceName">
            <summary>
            Gets or sets the name of the data source associated with the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.FieldData">
            <summary>
            Gets or sets the field data used for the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.QueryId">
            <summary>
            Gets or sets the ID of the query used for the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.ChartType">
            <summary>
            Gets or sets the type of chart to be displayed in the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.AiResponse">
            <summary>
            Gets or sets the AI response related to the widget creation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.Question">
            <summary>
            Gets or sets the question that prompted the widget creation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.Title">
            <summary>
            Gets or sets the title of the widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.CreateWidgetResponse.Model">
            <summary>
            Gets or sets the model used for the widget creation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings">
            <summary>
            Represents a greeting message response in the chat interface.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings.AiResponse">
            <summary>
            Gets or sets the AI-generated response for the greeting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings.Question">
            <summary>
            Gets or sets the question that may have prompted the greeting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings.IsGreetingMessage">
            <summary>
            Gets or sets a value indicating whether the message is a greeting message.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings.Message">
            <summary>
            Gets or sets the greeting message content.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Greetings.Model">
            <summary>
            Gets or sets the model used for generating the greeting.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse">
            <summary>
            Represents a contract for chat response models.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse.AiResponse">
            <summary>
            Gets or sets the AI-generated response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse.Question">
            <summary>
            Gets or sets the question that may have prompted the response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.IChatResponse.Model">
            <summary>
            Gets or sets the model used for generating the response.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse">
            <summary>
            Represents a response containing relevant questions generated by the AI.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse.AiResponse">
            <summary>
            Gets or sets the AI-generated response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse.Question">
            <summary>
            Gets or sets the question that prompted the AI response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse.Model">
            <summary>
            Gets or sets the model used for generating the response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse.FullName">
            <summary>
            Gets or sets the full name of the user or entity associated with the response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.ReleventQuestionResponse.UsageTokens">
            <summary>
            Gets or sets the usage tokens associated with the response.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Response">
            <summary>
            Represents a response containing chat-related information and usage tokens.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIResponseBuilder.Response.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Response"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIResponseBuilder.Response.#ctor(BoldBi.Ai.Base.Models.AIResponseBuilder.ChatResponse,BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Response"/> class with specified chat response and usage tokens.
            </summary>
            <param name="response">The chat response to associate with this response.</param>
            <param name="tokens">The usage tokens to associate with this response.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Response.ChatResponse">
            <summary>
            Gets or sets the chat response associated with this response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Response.UsageTokens">
            <summary>
            Gets or sets the usage tokens associated with the response.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent">
            <summary>
            Contains response messages related to AI service status and authentication errors.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.MaxAmountExceeded">
            <summary>
            Message indicating that the AI service balance is empty.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.RateLimitExceeded">
            <summary>
            Message indicating that the request limit has been exceeded.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.SandboxRequestLimitExceed">
            <summary>
            Message indicating that the maximum allowed AI request limit for the Sandbox environment has been reached.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.LicenseKeyRequired">
            <summary>
            Message indicating that an AI License Key is required for authentication.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.InvalidAIKey">
            <summary>
            Message indicating that the provided AI License Key is invalid.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.TokenRequired">
            <summary>
            Message indicating that a static AI token is required for authentication.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.InvalidToken">
            <summary>
            Message indicating that the provided AI token is invalid.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.UserAgentMissing">
            <summary>
            Message indicating that no User Agent was provided for authentication.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.NoAccessToUser">
            <summary>
            Message indicating that there is no access to the user for authentication.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.AIResponseBuilder.ResponseContent.NoUserEmail">
            <summary>
            Message indicating that no User Email was provided for authentication.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.TextGenerationResponse">
            <summary>
            Represents the response from a text generation request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.TextGenerationResponse.Text">
            <summary>
            Gets or sets the generated text.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.TextGenerationResponse.ModelId">
            <summary>
            Gets or sets the model identifier used for generating the text.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.TextGenerationResponse.MetaData">
            <summary>
            Gets or sets the metadata related to the text generation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.MetaData">
            <summary>
            Contains metadata information about the text generation request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.MetaData.Usage">
            <summary>
            Gets or sets the usage details of the text generation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.Usage">
            <summary>
            Represents the usage details related to the tokens used in the text generation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Usage.PromptTokens">
            <summary>
            Gets or sets the number of tokens used in the prompt.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Usage.CompletionTokens">
            <summary>
            Gets or sets the number of tokens used in the completion.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.Usage.TotalTokens">
            <summary>
            Gets or sets the total number of tokens used in the text generation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse">
            <summary>
            Represents the response for updating a widget in the chat.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse.AiResponse">
            <summary>
            Gets or sets the AI-generated response related to the widget update.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse.Response">
            <summary>
            Gets or sets the detailed response regarding the widget update.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse.Question">
            <summary>
            Gets or sets the question that prompted the update response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse.Model">
            <summary>
            Gets or sets the model used for generating the response.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UpdateWidgetResponse.WidgetName">
            <summary>
            Gets or sets the name of the widget that was updated.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens">
            <summary>
            Represents the usage of tokens for API interactions.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.#ctor(BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> class with specified usage.
            </summary>
            <param name="usage">The <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.AIUsage"/> instance containing token usage data.</param>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens"/> class with specified usage.
            </summary>
            <param name="ouputTokenCount">usage of result token. </param>
            <param name="inputTokenCount">usage of input token. </param>
            <param name="totalTokenCount">usage of total token. </param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.TotalTokens">
            <summary>
            Gets or sets the total number of tokens used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.PromptTokens">
            <summary>
            Gets or sets the number of prompt tokens used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AIResponseBuilder.UsageTokens.CompletionTokens">
            <summary>
            Gets or sets the number of completion tokens used.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.AzureAICredentials">
            <summary>
            Represents the credentials required for accessing Azure AI services.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AzureAICredentials.AzureAiKey">
            <summary>
            Gets or sets the Azure AI key used for authentication.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AzureAICredentials.AzureAiResourceName">
            <summary>
            Gets or sets the name of the Azure AI resource.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.AzureAICredentials.AzureAiDeploymentName">
            <summary>
            Gets or sets the name of the Azure AI deployment.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage">
            <summary>
            Represents the usage details for an AI search request, including session information, token counts and costs, user information, and environment details.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.#ctor(System.String,System.String,System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage"/> class with specified parameters.
            </summary>
            <param name="sessionID">The session ID associated with the request.</param>
            <param name="searchID">The unique search ID.</param>
            <param name="searchDateTime">The date and time of the search.</param>
            <param name="inputToken">The count of input tokens used.</param>
            <param name="outputToken">The count of output tokens generated.</param>
            <param name="totalToken">The total token count.</param>
            <param name="inputTokenCost">The cost of input tokens.</param>
            <param name="outputTokenCost">The cost of output tokens.</param>
            <param name="totalTokensCost">The total cost of tokens.</param>
            <param name="userID">The user's ID.</param>
            <param name="userEmail">The user's email.</param>
            <param name="tenantID">The tenant ID.</param>
            <param name="requestType">The type of request.</param>
            <param name="environment">The environment of the request.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.SessionID">
            <summary>
            Gets or sets the session ID associated with the AI search request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.SearchID">
            <summary>
            Gets or sets the unique search ID.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.SearchDateTime">
            <summary>
            Gets or sets the date and time of the search.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.InputToken">
            <summary>
            Gets or sets the count of input tokens used in the search.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.OutputToken">
            <summary>
            Gets or sets the count of output tokens generated by the search.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.TotalToken">
            <summary>
            Gets or sets the total token count for the search.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.InputTokenCost">
            <summary>
            Gets or sets the cost associated with the input tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.OutputTokenCost">
            <summary>
            Gets or sets the cost associated with the output tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.TotalTokensCost">
            <summary>
            Gets or sets the total cost of tokens for the search.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.UserInfo">
            <summary>
            Gets or sets the user information in the format "userID-userEmail".
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.TenantID">
            <summary>
            Gets or sets the tenant ID associated with the search request.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.RequestType">
            <summary>
            Gets or sets the type of request made (e.g., "query" or "summary").
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSearchUsage.Environment">
            <summary>
            Gets or sets the environment in which the request was made (e.g., "production" or "staging").
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage">
            <summary>
            Represents the usage details for an AI session, including session times, token counts and costs, user information, and environment details.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.#ctor(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage"/> class with specified parameters.
            </summary>
            <param name="sessionID">The unique session ID.</param>
            <param name="sessionStartTime">The start time of the session.</param>
            <param name="sessionEndTime">The end time of the session.</param>
            <param name="inputToken">The count of input tokens used in the session.</param>
            <param name="outputToken">The count of output tokens generated in the session.</param>
            <param name="totalToken">The total token count for the session.</param>
            <param name="inputTokenCost">The cost associated with the input tokens.</param>
            <param name="outputTokenCost">The cost associated with the output tokens.</param>
            <param name="totalTokensCost">The total cost of tokens for the session.</param>
            <param name="userID">The user's ID.</param>
            <param name="userEmail">The user's email.</param>
            <param name="tenantID">The tenant ID associated with the session.</param>
            <param name="environment">The environment in which the session occurred (e.g., "production" or "staging").</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.SessionID">
            <summary>
            Gets or sets the unique session ID.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.SessionStartTime">
            <summary>
            Gets or sets the start time of the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.SessionEndTime">
            <summary>
            Gets or sets the end time of the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.InputToken">
            <summary>
            Gets or sets the count of input tokens used in the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.OutputToken">
            <summary>
            Gets or sets the count of output tokens generated in the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.TotalToken">
            <summary>
            Gets or sets the total token count for the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.InputTokenCost">
            <summary>
            Gets or sets the cost associated with the input tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.OutputTokenCost">
            <summary>
            Gets or sets the cost associated with the output tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.TotalTokensCost">
            <summary>
            Gets or sets the total cost of tokens for the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.TenantID">
            <summary>
            Gets or sets the tenant ID associated with the session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.UserInfo">
            <summary>
            Gets or sets the user information in the format "userID-userEmail".
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiSessionUsage.Environment">
            <summary>
            Gets or sets the environment in which the session occurred (e.g., "production" or "staging").
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing">
            <summary>
            Represents the token usage and associated costs for an AI session.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.InputToken">
            <summary>
            Gets or sets the count of input tokens used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.OutputToken">
            <summary>
            Gets or sets the count of output tokens generated.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.TotalToken">
            <summary>
            Gets or sets the total count of tokens used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.InputTokenCost">
            <summary>
            Gets or sets the cost associated with input tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.OutputTokenCost">
            <summary>
            Gets or sets the cost associated with output tokens.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.TotalTokenCost">
            <summary>
            Gets or sets the total cost for all tokens used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.AiTokensAndPricing.BalanceAmount">
            <summary>
            Gets or sets the balance amount remaining after token usage.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo">
            <summary>
            Represents information about a data source, including its ID, schema, name, random records, and associated user.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo"/> class with specified data source details.
            </summary>
            <param name="dataSourceID">The unique identifier of the data source.</param>
            <param name="tableSchema">The schema of the data source table.</param>
            <param name="dataSourceName">The name of the data source.</param>
            <param name="randomRecords">A string representation of random records from the data source.</param>
            <param name="userID">The ID of the user associated with the data source.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.DataSourceID">
            <summary>
            Gets or sets the unique identifier of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.TableSchema">
            <summary>
            Gets or sets the schema of the data source table.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.DataSourceName">
            <summary>
            Gets or sets the name of the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.RandomRecords">
            <summary>
            Gets or sets a string representation of random records from the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.UserID">
            <summary>
            Gets or sets the ID of the user associated with the data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.DataSourceInfo.CreatedDate">
            <summary>
            Gets or sets the date on which the activity occurred.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance">
            <summary>
            Represents logging assistance information for tracking user actions and environment details.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.RandomRecords">
            <summary>
            Gets or sets a string representation of random records for logging purposes.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.UserId">
            <summary>
            Gets or sets the ID of the user associated with the log entry.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.UserEmail">
            <summary>
            Gets or sets the email address of the user associated with the log entry.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.UserName">
            <summary>
            Gets or sets the name of the user associated with the log entry.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.SiteId">
            <summary>
            Gets or sets the ID of the site associated with the log entry.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.SiteUrl">
            <summary>
            Gets or sets the URL of the site associated with the log entry.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.BoldBiVersion">
            <summary>
            Gets or sets the version of Bold BI being used.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.ModeType">
            <summary>
            Gets or sets the type of mode (e.g., design or view) in which the action was performed.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.LoggingAssistance.Environment">
            <summary>
            Gets or sets the environment in which the action was performed.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity">
            <summary>
            Represents the details of a search activity, including message information, response status, user and environment details.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity"/> class with specified parameters.
            </summary>
            <param name="messageID">The unique identifier of the message.</param>
            <param name="message">The content of the search message.</param>
            <param name="dataSourceID">The identifier of the associated data source.</param>
            <param name="sessionID">The identifier of the session in which the search activity took place.</param>
            <param name="hasError">Indicates whether there was an error in the search activity.</param>
            <param name="response">The response returned for the search activity.</param>
            <param name="statusMessage">The status message of the search activity.</param>
            <param name="aiModel">The AI model used for the search activity.</param>
            <param name="tenantId">The identifier of the tenant.</param>
            <param name="userId">The user ID associated with the search activity.</param>
            <param name="userEmail">The email address of the user.</param>
            <param name="feedback">The feedback given by the user.</param>
            <param name="type">The request type for the search activity.</param>
            <param name="deploymentType">The environment in which the search was performed.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.MessageID">
            <summary>
            Gets or sets the unique identifier of the message.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.SearchDate">
            <summary>
            Gets or sets the date and time when the search activity occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.Message">
            <summary>
            Gets or sets the content of the search message.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.DataSourceID">
            <summary>
            Gets or sets the identifier of the associated data source.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.SessionID">
            <summary>
            Gets or sets the session ID in which the search activity took place.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.HasError">
            <summary>
            Gets or sets a value indicating whether there was an error in the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.Response">
            <summary>
            Gets or sets the response returned for the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.StatusMessage">
            <summary>
            Gets or sets the status message of the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.AiModel">
            <summary>
            Gets or sets the AI model used for the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.TenantID">
            <summary>
            Gets or sets the tenant ID associated with the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.UserEmail">
            <summary>
            Gets or sets the user's email address associated with the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.Feedback">
            <summary>
            Gets or sets the feedback given by the user for the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.UserInfo">
            <summary>
            Gets or sets user information in a combined format of user ID and email.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.RequestType">
            <summary>
            Gets or sets the type of request for the search activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SearchActivity.Environment">
            <summary>
            Gets or sets the environment in which the search was performed.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity">
            <summary>
            Represents information about site activity, including version, AI provider, tenant, and environment details.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity"/> class with specified parameters.
            </summary>
            <param name="boldBiVersion">The version of Bold BI in use.</param>
            <param name="aiProvider">The AI provider used for the activity.</param>
            <param name="tenantID">The unique identifier of the tenant.</param>
            <param name="tenantURL">The URL of the tenant's site.</param>
            <param name="email">The email address associated with the activity.</param>
            <param name="environment">The environment in which the activity occurred.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.BoldBiVersion">
            <summary>
            Gets or sets the version of Bold BI in use.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.AiProvider">
            <summary>
            Gets or sets the AI provider used for the activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.TenantID">
            <summary>
            Gets or sets the unique identifier of the tenant.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.TenantURL">
            <summary>
            Gets or sets the URL of the tenant's site.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.Email">
            <summary>
            Gets or sets the email address associated with the activity.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.Environment">
            <summary>
            Gets or sets the environment in which the activity occurred.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.SiteActivity.CreatedDate">
            <summary>
            Gets or sets the date on which the activity occurred.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.SqlQueries">
            <summary>
            Contains SQL queries used for database operations related to AI sessions and licenses.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.SqlQueries.UpdateEndSessionTime">
            <summary>
            SQL query to update the end time of an AI session.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.SqlQueries.HasLicense">
            <summary>
            SQL query to check if a license is active for a given tenant.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.SqlQueries.UpdateTenantId">
            <summary>
            SQL query to update tenant id for specific tenant.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants">
            <summary>
            Contains constants for various usage log queue names used in the application.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.SearchQueue">
            <summary>
            The name of the search queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.DataSourceQueue">
            <summary>
            The name of the data source queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.UserQueue">
            <summary>
            The name of the user queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.SiteQueue">
            <summary>
            The name of the site queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.ChatQueue">
            <summary>
            The name of the chat queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.SessionsQueue">
            <summary>
            The name of the sessions queue.
            </summary>
        </member>
        <member name="F:BoldBi.Ai.Base.Models.DatabaseLog.UsageLogConstants.AmountUpdateQueue">
            <summary>
            The name of the amount update queue.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity">
            <summary>
            Represents user activity information for logging purposes.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity"/> class.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity"/> class with specified user information.
            </summary>
            <param name="userID">The unique identifier of the user.</param>
            <param name="userEmail">The email address of the user.</param>
            <param name="userName">The name of the user.</param>
            <param name="tenantID">The unique identifier of the tenant.</param>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.UserID">
            <summary>
            Gets or sets the unique identifier of the user.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.UserEmail">
            <summary>
            Gets or sets the email address of the user.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.TenantID">
            <summary>
            Gets or sets the unique identifier of the tenant.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.UserInfo">
            <summary>
            Gets or sets the combined user information as a string.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.DatabaseLog.UserActivity.CreatedDate">
            <summary>
            Gets or sets the date on which the activity occurred.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.Axis">
            <summary>
            Represents the properties of an axis for a chart or widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Axis.Field">
            <summary>
            Gets or sets the field name for the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Axis.TimeUnit">
            <summary>
            Gets or sets the time unit for the axis based on the user query.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Axis.DisplayName">
            <summary>
            Gets or sets the display name for the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Axis.TableName">
            <summary>
            Gets or sets the table name associated with the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Axis.CustomSorting">
            <summary>
            Gets or sets the alias name for the axis.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.Columns">
            <summary>
            Represents column encoding details for X, Y, and offset axes.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Columns.X">
            <summary>
            Gets or sets the details of the X-axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Columns.Y">
            <summary>
            Gets or sets the details of the Y-axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Columns.Row">
            <summary>
            Gets or sets the details of the offset axis.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.CustomSorting">
            <summary>
            Represents the sorting configuration for an axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.CustomSorting.SortingType">
            <summary>
            Gets or sets the sorting type for the axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.CustomSorting.Field">
            <summary>
            Gets or sets the field name used for sorting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.CustomSorting.Op">
            <summary>
            Gets or sets the aggregation operation for sorting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.CustomSorting.Sort">
            <summary>
            Gets or sets the sorting order for the axis.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.Filters">
            <summary>
            Represents filtering conditions for the data.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.ColumnName">
            <summary>
            Gets or sets the column name used for filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.IsInclude">
            <summary>
            Gets or sets a value indicating whether to include or exclude the filter condition.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.Conditions">
            <summary>
            Gets or sets the condition applied for filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.TimeUnit">
            <summary>
            Gets or sets the time unit used in the filter.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.Values">
            <summary>
            Gets or sets the values to filter on.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.Aggregate">
            <summary>
            Gets or sets the aggregation method for filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Filters.RelativeDateFilter">
            <summary>
            Gets or sets the relative date filter details.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.GenericFilterType">
            <summary>
            Represents generic relative date filtering details.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.GenericFilterType.Type">
            <summary>
            Gets or sets the generic relative date filter type.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.GenericFilterType.Value">
            <summary>
            Gets or sets the value used for the relative date filter.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.OrderBy">
            <summary>
            Represents details for ordering data by a specific field.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.OrderBy.TimeUnit">
            <summary>
            Gets or sets the time unit for sorting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.OrderBy.Aggregate">
            <summary>
            Gets or sets the aggregation method for sorting.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.OrderBy.OrderByfield">
            <summary>
            Gets or sets the field name used for ordering.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.Rank">
            <summary>
            Represents ranking details for grouping and sorting data.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Rank.GroupBy">
            <summary>
            Gets or sets the list of fields used for grouping.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Rank.OrderBy">
            <summary>
            Gets or sets the sorting details for ranking.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Rank.RankValue">
            <summary>
            Gets or sets the rank value.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Rank.Extreme">
            <summary>
            Gets or sets the extreme type (highest/lowest).
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Rank.IsDateColumn">
            <summary>
            Gets or sets a value indicating whether the column is a date column.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.RelativeDateFilter">
            <summary>
            Represents relative date filtering details.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.RelativeDateFilter.DateColumnName">
            <summary>
            Gets or sets the column name used for relative date filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.RelativeDateFilter.Range">
            <summary>
            Gets or sets the relative date range for filtering.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.RelativeDateFilter.SpecificFilter">
            <summary>
            Gets or sets the specific relative date filter type.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.RelativeDateFilter.GenericFilter">
            <summary>
            Gets or sets the generic relative date filter details.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.Transform">
            <summary>
            Represents transformations such as filters, ranks, and window operations for visual properties.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Transform.Operation">
            <summary>
            Gets or sets the operation type for the transformation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Transform.Filter">
            <summary>
            Gets or sets the list of filters to apply in the transformation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.Transform.Window">
            <summary>
            Gets or sets the list of ranking operations in the transformation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.VisualProperty">
            <summary>
            Represents the visual properties for AI chat responses, used for creating a structured JSON output.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.VisualProperty.Transform">
            <summary>
            Gets or sets the list of transformations such as filters and ranks for the visual representation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.VisualProperty.Encoding">
            <summary>
            Gets or sets the column encoding details such as X, Y, and offset axes.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.VisualProperty.Mark">
            <summary>
            Gets or sets the widget type for the visual representation.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.VisualProperty.Title">
            <summary>
            Gets or sets the title of the visual representation.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Models.YAxis">
            <summary>
            Represents the properties of the Y-axis for a chart or widget.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.YAxis.Field">
            <summary>
            Gets or sets the field name for the Y-axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.YAxis.Aggregate">
            <summary>
            Gets or sets the aggregation type for the Y-axis data.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.YAxis.DisplayName">
            <summary>
            Gets or sets the display name for the Y-axis.
            </summary>
        </member>
        <member name="P:BoldBi.Ai.Base.Models.YAxis.TableName">
            <summary>
            Gets or sets the table name associated with the Y-axis.
            </summary>
        </member>
        <member name="T:BoldBi.Ai.Base.Utilities.AIDatabaseInfo">
            <summary>
            Provides methods to retrieve connection strings for various databases used in AI operations.
            </summary>
        </member>
        <member name="M:BoldBi.Ai.Base.Utilities.AIDatabaseInfo.GetMetaDbConnectionStr">
            <summary>
            Gets the connection string for the Meta database.
            </summary>
            <returns>A string representing the connection string for the Meta database.</returns>
        </member>
        <member name="M:BoldBi.Ai.Base.Utilities.AIDatabaseInfo.GetAuditLogDbConnectionStr">
            <summary>
            Gets the connection string for the Audit Log database.
            </summary>
            <returns>A string representing the connection string for the Audit Log database.</returns>
        </member>
    </members>
</doc>
