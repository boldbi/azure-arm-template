@using Newtonsoft.Json;
@addTagHelper *, Microsoft.FeatureManagement.AspNetCore
@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = T["Groups"].Value + " - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ManageGroups);
    var isAttributeTab = ViewBag.ActiveTab != null && ViewBag.ActiveTab.ToString().ToLower() == "attributes" ? "active" : string.Empty;
    var isGeneralTab = ViewBag.ActiveTab == null || ViewBag.ActiveTab.ToString().ToLower() == "general" || (!string.IsNullOrWhiteSpace(Context.Request.Query["tab"]) && string.IsNullOrWhiteSpace(isAttributeTab)) ? "active" : string.Empty;
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var granularPermissions = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
    var isEmailRequired = globalAppSettings.SystemSettings.IsEmailRequired;
    var isSelfHosted = ServerAppConfig.IsSelfHosted;
    var disabled = ViewBag.IsLocalDirectory ? "" : "disabled";
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var canShowAdminMenu = await ServerAppConfig.CanShowAdminMenu(model, _identityResponse.IsAdmin, _featureManager);
    var passwordPolicy = ServerAppConfig.PasswordPolicy;
    ViewBag.BackIconRedirectionUrl = Url.Action("group", "group");
    ViewBag.BackIconTitle = T["Groups"];
    var showGroupModule = globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD == null || (globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD != null && !globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD.Enable);
    var canShowForAdminGroup = globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD == null || (globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD != null && !globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD.Enable) || (globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD.Enable && ViewBag.groupId == ServerAppConfig.AdminGroupId && globalAppSettings.SystemSettings.PreviewFeatures.DisableGroupCRUD.ExcludeSysGroup);
    var groupDetails = JsonConvert.DeserializeObject<Group>(ViewBag.groupDetails);
    var groupDirectoryType = groupDetails.DirectoryType;
    bool isSingleDB = ViewBag.IsSingleDB;
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/viewgroup.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/groups.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/viewgroup.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/viewgroup.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/groups.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/viewgroup.min.js"></script>
    </environment>
    <script type="text/javascript">
        var groupDetails =@Html.Raw(ViewBag.groupDetails);
        var groupDirectoryType = '@groupDirectoryType';
        groupDetails.GroupName = $('<div/>').html(groupDetails.GroupName).text();
        groupDetails.GroupDescription = $('<div/>').html(groupDetails.GroupDescription).text();
        var groupId = @ViewBag.groupId;
        var groupAttributesUrl = "@Url.Action("GetGroupAttributes", "CustomAttribute")";
        var saveGroupSettingsUrl = "@Url.Action("SaveGroupSettings", "group")";
        var saveGroupSettingsUrl = "@Url.Action("SaveGroupSettings", "group")";
        var deleteGroupUserViewUrl = "@Url.Action("DeleteGroupUserView", "group")";
        var addUserInGroupUrl = "@Url.Action("AddUserInGroup", "group")";
        var allUsers=@Html.Raw(@ViewBag.allUser);
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var postactionUrl = "@Url.Action("postaction", "UserManagement")";
        var isPresentEmailId = "@Url.Action("IsPresentEmailId", "UserManagement")";
        var isUsernameExistsUrl = "@Url.Action("IsUsernameExists", "UserManagement")";
        var isEmailRequired = "@isEmailRequired";
        var enableGroupEdit = @Json.Serialize(ViewBag.EnableGroupEdit);
        var isSelfHosted = @Json.Serialize(ServerAppConfig.IsSelfHosted);
        var isSingleDB = @isSingleDB.ToString().ToLower();
        serverApp.controller('GroupEditController', function ($scope) {
            $scope.selectedRow = 1;
            $scope.page = 0;
            $scope.allGroupDetails = groupDetails;
            $scope.allUsers = allUsers;
        });
        $(document).ready(function () {
            var groupNameInput = document.getElementById('group-info-name');
            // Add the 'disabled' attribute if the condition is true
            if (isSingleDB && groupNameInput.value === "System Administrator") {
                groupNameInput.setAttribute('disabled', 'disabled');
            }

            $("#search-group-users").val("");
            $("#group-info-name").removeAttr("placeholder");
            GridLocalization(window.Server.App.Localization.UsersResourceEmpty);
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({ url: "@Url.Action("RefreshGroupUsers", "Group")?groupId="+groupId, adaptor: "UrlAdaptor" }),
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                pageSettings: { pageSize: 20 },
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                allowSelection: true,
                filterSettings: { filterType: "menu" },
                actionBegin: "fnOnEditGroupActionBegin",
                actionComplete: "fnOnUserGridActionComplete",
                dataBound: function (args) {
                    if (location.pathname.toLowerCase() === "/" || location.pathname.split("/")[location.pathname.split("/").length-1].toLowerCase() == "dashboards") {
                        refreshScroller();
                    }
                    $('[data-bs-toggle="tooltip"]').tooltip({ container: $('body') });
                },
                enableRowHover: true,
                columns: [
                    {
                        allowSorting: true,
                        headerText: "@T["Name"]",
                        width: 100,
                        field: "DisplayName",
                        templateID: "#NameTemplate",
                        headerTemplateID: "#nameheader",
                        type: "string",
                        allowFiltering: true
                    },
                    {
                        allowSorting: true,
                        headerText: "@T["Username"]",
                        width: 100,
                        field: "Username",
                        templateID: "#UsernameTemplate",
                        headerTemplateID: "#UsernameHeader",
                        type: "string",
                        allowFiltering: true,
                        visible: isSelfHosted
                    },
                    {
                        field: "Email",
                        templateID: "#emailtemplate",
                        headerText: "@T["Email Address"]",
                        width: 180,
                        type: "string",
                        allowFiltering: true,
                        headerTemplateID: "#emailheader"
                    },

                    {

                        template: true,
                        templateID: "#actionstemplate",
                        allowSorting: false,
                        width: 50,
                        allowFiltering: false
                    }
                ]
            });

            $(document).ready(function () {
                GridLocalization(window.Server.App.Localization.AttributeRecordsEmpty);
                $("#GroupAttributesGrid").ejGrid({
                    dataSource: null,
                    gridLines: ej.Grid.GridLines.None,
                    allowSorting: true,
                    allowSearching: true,
                    allowPaging: true,
                    allowSelection: true,
                    allowFiltering: true,
                    filterSettings: { filterType: "menu" },
                    pageSettings: { pageSize: 8 },
                    enableRowHover: true,
                    enableAltRow: false,
                    create: "initialGroupGridCreate",
                    dataBound: function (args) {
                        $('[data-bs-toggle="tooltip"]').tooltip({ container: $('body') });
                    },
                    columns: [
                        { field: 'Name', templateID: "#attribute-name-template", headerText: "@T["Name"]", width: 40, allowSorting: true, allowFiltering: true },
                        { field: 'Value', templateID: "#attribute-value-template", headerText: "@T["Value"]", width: 60, allowSorting: true, allowFiltering: true },
                        { field: 'Description', templateID: "#attribute-description-template", headerText: "@T["Description"]", width: 50, allowSorting: true, allowFiltering: true },
                        { field: 'ModifiedDateString', headerText: "@T["Last Modified"]", width: 40, allowSorting: true, allowFiltering: false },
                        { field: 'InheritedFrom', headerText: "@T["Inherited From"]", templateID: "#inherited", width: 40, allowSorting: true, allowFiltering: false },
                        { field: 'Options', headerText: '', templateID: "#options", width: 20, allowSorting: false, allowFiltering: false }
                    ]
                });
            });

            $.ajax({
                type: "GET",
                url: groupAttributesUrl,
                data: { id: groupId },
                success: function (result) {
                    if (result.Status) {
                        var groupAttributesGrid = $("#GroupAttributesGrid").data("ejGrid");
                        groupAttributesGrid.dataSource(result.Attributes);
                    }
                    $("#GroupAttributesGrid").ejWaitingPopup("hide");
                }
            });
        });
        $("#userList").selectpicker("refresh");
        $(document).ready(function () {
            for (var i = 0; i < $(".dropdown-menu .selectpicker li").length; i++) {
                var hovertext = $(".dropdown-menu .selectpicker li").eq(i).find("a .text").text();
                $(".dropdown-menu .selectpicker li ").eq(i).find('a').attr("title", hovertext);
            }
        });
    </script>
    @if (isSelfHosted)
    {
        <script>
            var minimumLength = "@passwordPolicy.MinimumLength";
            var lowerCaseRequired = "@passwordPolicy.LowerCaseRequired";
            var upperCaseRequired = "@passwordPolicy.UpperCaseRequired";
            var numberRequired = "@passwordPolicy.NumberRequired";
            var specialCharactersRequired = "@passwordPolicy.SpecialCharactersRequired";
        </script>
    }
    <script type="text/x-jsrender" id="attribute-name-template">
        <span class="grid-content" title="{{:Name}}" data-bs-toggle="tooltip">{{:Name}}</span>
    </script>
    <script type="text/x-jsrender" id="attribute-description-template">
        {{if Description != ""}}
        <span class="grid-content" title="{{:Description}}" data-bs-toggle="tooltip">{{:Description}}</span>
        {{else}}
        --
        {{/if}}
    </script>
    <script type="text/x-jsrender" id="attribute-value-template">
        <span class="grid-content" title="{{:Value}}" data-bs-toggle="tooltip">{{:Value}}</span>
    </script>
    <script type="text/x-jsrender" id="inherited">
        {{if Inherited != null}}
        <span class="grid-content" title="{{:Inherited}}" data-bs-toggle="tooltip">{{:Inherited}}</span>
        {{else}}
        --
        {{/if}}
    </script>
    <feature name=@FeatureManagement.EnableGroupOwnerSupport>
        <script type="text/x-jsrender" id="NameTemplate">
            <a class="item-name grid-content" title="{{:DisplayName}}" data-bs-toggle="tooltip" href="@Url.Action("ViewProfile", "UserManagement")?id={{:UserId}}">{{:DisplayName}}</a>
        </script>
    </feature>
    <feature name=@FeatureManagement.EnableGroupOwnerSupport negate="true">
        <script type="text/x-jsrender" id="NameTemplate">
            <span class="item-name grid-content" title="{{:DisplayName}}" data-bs-toggle="tooltip">{{:DisplayName}}</span>
        </script>
    </feature>
    <script type="text/x-jsrender" id="UsernameTemplate">
        <span class="grid-content" title="{{:Username}}" data-bs-toggle="tooltip">{{:Username}}</span>
    </script>
    <script type="text/x-jsrender" id="emailtemplate">
        <span class="grid-content" title="{{:Email}}" data-bs-toggle="tooltip">{{:CanShowEmail ? Email : ""}}</span>
    </script>
    <script type="text/x-jsrender" id="nameheader">
        <div class="item-name">@T["Name"]</div>
    </script>
    <script type="text/x-jsrender" id="UsernameHeader">
        <div class="item-name">@T["Username"]</div>
    </script>
    <script type="text/x-jsrender" id="emailheader">
        <div class="item-header">@T["Email Address"]</div>
    </script>
    <script type="text/x-jsrender" id="actionstemplate">
        {{if @ViewBag.groupId !=1}}
        {{if @((int)groupDetails.DirectoryType) != DirectoryType || (@((int)groupDetails.DirectoryType) == DirectoryType && !CanSync) }}        
        @if (showGroupModule)
        {
            <div>
            <span><a href="javascript:void(0);" class="delete-user" title="" data-username="{{:DisplayName}}" data-userid="{{:UserId}}"><i class="su su-close"></i> @T["Remove"]</a></span>
            </div>
        }
        {{/if}}
        {{else UserId != @ViewBag.CurrentUserId}}
        @if (showGroupModule)
        {
            <div>
            <span><a href="javascript:void(0);" class="delete-user" title="" data-username="{{:DisplayName}}" data-userid="{{:UserId}}"><i class="su su-close"></i> @T["Remove"]</a></span>
            </div>
        }
        else if (canShowForAdminGroup)
        {
            <div>
            <span><a href="javascript:void(0);" class="delete-user" title="" data-username="{{:DisplayName}}" data-userid="{{:UserId}}"><i class="su su-close"></i> @T["Remove"]</a></span>
            </div>
        }
            {{/if}}
    </script>
    <script>
        var checkGroupnameUrl = "@Url.Action("CheckGroupname", "group")";
        var addGroupUrl = "@Url.Action("AddGroup", "group")";
        var deleteGroupViewUrl = "@Url.Action("DeleteGroupView", "group")";
        var addGroupViewUrl = "@Url.Action("AddGroupView","group")";
        var deleteGroupUrl = "@Url.Action("DeleteGroup", "group")";
        var groupPageUrl = "@Url.Action("group", "group")";
    </script>
}

@section MainSection{
    @await Html.PartialAsync("../Administration/_AdminMenu")

    <div ng-controller="GroupEditController" class="col-12 no-padding no-margin @(canShowAdminMenu ? "width-alignment" : "admin-panel-full-width") height-100-percentage ">
        <div class="col-12 no-padding no-margin">
            @await Html.PartialAsync("../Shared/_TopHeaderSection", new ViewDataDictionary(ViewData) { { "IsViewGroupProfile", "true" } })
            <div id="group-header" class="col-12 bi-page-header tabs-header-padding top-nav-btn-secton">
                <div class="col-12 no-padding">
                    <div class="col-xs-6 no-padding button-section group-buttons float-end">
                        <input type="button" class="primary-button app-btn-primary float-end" id="add-custom-attribute" title="" value="@T["Add Attribute"]" data-id="@ViewBag.groupId" onclick="addCustomAttribute('group')">
                        @if (canShowForAdminGroup)
                        {                       
                            <button class="dropdown-toggle primary-button app-btn-primary float-end" data-bs-toggle="dropdown" title="@T["Manage"]">
                                <span>@T["Manage"] </span>
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu manage-group-dropdown multi-level" role="menu" id="dropdown-options">
                                <feature name=@FeatureManagement.EnableGroupOwnerSupport>
                                    @if (ViewBag.IsLocalDirectory)
                                    {
                                        <li id="add-user-button" title="@T["Add user"]" onclick="onUserAddDialogOpen()">
                                            <a href="javascript:void(0)" title="@T["Add user"]" data-bs-toggle="tooltip" data-placement="top">
                                                <i class="su su-user-add"> </i>
                                                <span>@T["Add User"]</span>
                                            </a>
                                        </li>
                                    }
                                </feature>
                                <feature name=@FeatureManagement.EnableGroupOwnerSupport negate="true">
                                    @if ((isAdmin || granularPermissions[PermissionEntity.UsersandGroups]))
                                    {
                                        <li id="add-user-button" title="@T["Add user"]" onclick="onUserAddDialogOpen()">
                                            <a href="javascript:void(0)" title="@T["Add user"]" data-bs-toggle="tooltip" data-placement="top">
                                                <i class="su su-user-add"> </i>
                                                <span>@T["Add User"]</span>
                                            </a>
                                        </li>
                                    }
                                </feature>
                                <feature name=@FeatureManagement.EnableGroupOwnerSupport>
                                    @if (ViewBag.IsLocalDirectory && ViewBag.groupId != 1)
                                    {
                                        <li id="add-owner-button" title="@T["Add Owner"]" onclick="addGroupOwnerDialogOpen()" data-groupid="@ViewBag.groupId" data-groupname="{{allGroupDetails.GroupName}}">
                                            <a href="javascript:void(0)" title="@T["Add Owner"]" data-bs-toggle="tooltip" data-placement="top">
                                                <i class="su su-add-owner"> </i>
                                                <span>@T["Add Owner"]</span>
                                            </a>
                                        </li>
                                    }
                                </feature>
                                @if (isAdmin || granularPermissions[PermissionEntity.AllPermissions] || granularPermissions[PermissionEntity.SpecificPermissions])
                                {
                                    <li>
                                        <a href="@Url.Action("grouppermission", "permission")?groupId=@ViewBag.groupId" title="@T["Manage Permissions"]" data-bs-toggle="tooltip" data-placement="top">
                                            <i class="su su-manage-permission"></i>
                                            <span>@T["Manage Permissions"]</span>
                                        </a>
                                    </li>
                                }
                                @if ((isAdmin || granularPermissions[PermissionEntity.UsersandGroups]|| granularPermissions[PermissionEntity.SpecificGroup]) && ViewBag.groupId != 1)
                                {
                                    <li id="delete-button" class="delete" title="@T["Delete Group"]" data-groupid="@ViewBag.groupId" data-groupname="{{allGroupDetails.GroupName}}">
                                        <a href="javascript:void(0)" title="@T["Delete Group"]" data-bs-toggle="tooltip" data-placement="top">
                                            <i class="su su-delete"></i>
                                            <span>@T["Delete Group"]</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {

                            @if (isAdmin || granularPermissions[PermissionEntity.AllPermissions] || granularPermissions[PermissionEntity.SpecificPermissions])
                            {
                                <button class="primary-button app-btn-primary float-end" onclick="location.href='@Url.Action("grouppermission", "permission")?groupId=@ViewBag.groupId'" title="@T["Manage Permissions"]" data-bs-toggle="tooltip" data-placement="top">
                                    <span>@T["Manage Permissions"]</span>
                                </button>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 no-padding bi-page-nav-bar">
                <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                    <li id="general-tab" role="presentation" class='@isGeneralTab'>
                        <a href="#group-general-tab" id="group-general" aria-controls="group-general-tab" role="tab" data-bs-toggle="tab">@T["General"]</a>
                    </li>
                    <li id="attribute-tab" role="presentation" class='@isAttributeTab'>
                        <a href="#group-attribute-tab" id="group-attribute" aria-controls="group-attribute-tab" role="tab" data-bs-toggle="tab">@T["Attributes"]</a>
                    </li>
                </ul>
            </div>
        </div>
        <div id="base-container" class="bi-page-container col-12 admin-panel-full-width bi-page-container-with-tab">
            <div class="bi-page-content col-12 no-padding">
                <div class="tab-content col-12 no-padding">
                    <div id="group-general-tab" role="tabpanel" class='tab-pane @isGeneralTab'>
                        <div class="col-12 bi-page-body active-directory-form">
                            <div id="info-container" class="col-12 no-padding">
                                <form class="col-12 group-form form-horizontal" autocomplete="off">
                                    <div class="form-element-label">
                                        <div class="show group-input-field group-name-input-field">
                                            <label>@T["Name"]</label>
                                            <span id="group-name" value="{{allGroupDetails.GroupName}}">{{allGroupDetails.GroupName}}</span>
                                            <label id="group-edit-button" ng-show="allGroupDetails.DirectoryType != @((int)DirectoryType.AzureAD) && allGroupDetails.DirectoryType != @((int)DirectoryType.WindowsAD) && allGroupDetails.DirectoryType != @((int)DirectoryType.OAuth2) && allGroupDetails.DirectoryType != @((int)DirectoryType.OpenIDConnect)">
                                                @if (showGroupModule)
                                                {
                                                    @if (ViewBag.groupId != 1)
                                                    {
                                                        <span class="bg-info" id="group-account-edit">
                                                            <i class="su su-edit"></i>
                                                            <input type="button" id="edit-group" value="@T["Edit"]" readonly>
                                                        </span>
                                                    }
                                                }
                                            </label>
                                        </div>
                                        <div class="hide group-input-field-edit">
                                            <label class="label-panel app-textbox-label">@T["Name"]<i class="mandatory">*</i> </label>
                                            <div class="col-sm-5 col-12 group-list" id="group-name">
                                                <input type="text" autocomplete="off" placeholder="@T["Group name"]" name="groupname" ng-bind="allGroupDetails.GroupName" ng-value="allGroupDetails.GroupName" class="form-control NotificationContent content-size" data-maxlength="255" id="group-info-name" @disabled />
                                                <span id="invalid-groupname" class="error-message validation-message" title="@T["Please enter the group name"]" data-content=""></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-element-label">
                                        <div class="show group-input-field group-name-input-field group-info-description-field">
                                            <label>@T["Description"]</label>
                                            <span id="group-description" ng-if="allGroupDetails.GroupDescription" value="{{allGroupDetails.GroupDescription}}">{{allGroupDetails.GroupDescription}}</span>
                                            <span id="group-description" ng-if="!allGroupDetails.GroupDescription" value="--">--</span>
                                        </div>
                                        <div class="hide group-input-field-edit group-description-edit-field">
                                            <label class="label-panel app-textbox-label">@T["Description"]</label>
                                            <div class="col-sm-5 col-12 group-list">
                                                <textarea class="form-control notification-content content-size" name="group-description" data-maxlength="1024" id="group-info-description" ng-bind="allGroupDetails.GroupDescription" @disabled></textarea>
                                                <div id="required-content">
                                                    @T["1024 characters maximum"]
                                                </div>
                                                <div><span id="invalid-groupname" class="error-message float-start"></span></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-element-label" style="display:none">
                                        <div class="show group-input-field group-name-input-field">
                                            <label>@T["Isolation Code"]</label>
                                            <span id="group-name" value="{{allGroupDetails.IsolationCode}}">{{allGroupDetails.IsolationCode}}</span>
                                        </div>
                                        <div class="hide group-input-field-edit">
                                            <label class="label-panel app-textbox-label" id="group-isolation-code">@T["Isolation Code"]<i class="mandatory">*</i> </label>
                                            <div class="col-sm-5 col-12 group-list">
                                                <input type="text" autocomplete="off" placeholder="@T["Group Isolation code"]" name="groupisolationcode" ng-bind="allGroupDetails.IsolationCode" ng-value="allGroupDetails.IsolationCode" class="form-control NotificationContent" maxlength="255" id="group-info-isolation-code" />
                                                <span id="invalid-group-isolation-code" class="error-message validation-message" title="@T["Please enter the valid isolation code"]" data-content=""></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="hide form-element-label group-input-field-edit save-button-field">
                                        <div class="save-button">
                                            <input type="button" class="secondary-button app-btn-secondary float-end popup-close" title="" id="group-edit-cancel-button" value="@T["Cancel"]">
                                            <input id="group-title-container-save-button" title="" class="group-save-button float-end primary-button app-btn-primary small-inner-margin no-margin" type="button" value="@T["Save"]" name="save">
                                        </div>
                                    </div>
                                    <span id="group-edit-confirmation"></span>
                                </form>
                            </div>
                            <input type="hidden" name="hiddengroupId" id="hidden-group-id" value="@ViewBag.groupId" />
                            @if (groupDirectoryType.ToString() != "Local")
                            {
                                <div id="third-party-group-info" class="col-12 no-padding profile-note-sec">

                                    <label>
                                        Adding users to groups imported from another provider won't synchronize changes with the original provider of the group. Moreover, users imported from a third-party provider cannot be added to a group imported from the same provider.
                                    </label>
                                </div>
                            }
                            <div id="people-container" class="tab-content col-md-12 col-12 page-inner-small-padding droppable">
                                @if (canShowForAdminGroup)
                                {
                                    <span style="" class="user-list-text">@T["Add user"]</span>
                                }
                                <div class="col-12 float-end user-content">
                                    @if (canShowForAdminGroup)
                                    {
                                        <div id="user-list-container">
                                        <select class="selectpicker" multiple autofocus="" data-size="8" data-none-results-text="@T["No results match"]" data-live-search="true" data-actions-box="true" title='@T["Select user(s)"]' id="user-list" style="float: right;">
                                                <option ng-repeat="user in allUsers | orderBy:'DisplayName'" ng-class="{ 'disabled-icon-color': user.CanSync && allGroupDetails.DirectoryType == user.DirectoryType && allGroupDetails.DirectoryType != @((int)DirectoryType.Local) }" ng-disabled="user.CanSync && allGroupDetails.DirectoryType == user.DirectoryType && allGroupDetails.DirectoryType != @((int)DirectoryType.Local)" value="{{user.UserId}}" title="{{user.DisplayName}}">
                                                    {{user.DisplayName}}
                                            </option>
                                        </select>
                                    </div>
                                    <input id="user-save-button" disabled="" title="@T["Add selected user(s) to the group"]" class="group-save-button primary-button app-btn-primary" type="button" value="@T["Add"]" name="save" />
                                    }
                                    <div id="search-area">
                                        <input type="text" id="search-group-users" placeholder="@T["Search users"]" autocomplete="off" />
                                        <span class="su su-inner-close close-icon" id="clear-search" title="@T["Clear search"]"></span>
                                        <span class="su su-search search-group-users" title="@T["Search users"]"></span>
                                    </div>
                                </div>
                                <div id="Grid" data-gridname="EditGroup" class="grid">
                                </div>
                            </div>
                            @*<div id="people-container" class="col-lg-12 col-12">
                        <div class="col-12 right-align no-padding">

                        <div id="search-area" class="float-end">
                        <input type="text" id="search-group-users" class="float-start no-margin" placeholder="@T["Search users"]" />
                        <span class="su close-icon su-inner-close float-end no-margin" id="clear-search" title="@T["Clear search"]"></span>
                        <span class="su su-search search-group-users float-start no-margin" title="@T["Search users"]"></span>
                        </div>
                        </div>
                        <div id="Grid" class="col-lg-12 no-padding float-start" data-gridname="EditGroup">
                        </div>
                        </div>*@
                        </div>
                    </div>
                    <div id="group-attribute-tab" role="tabpanel" class='tab-pane @isAttributeTab'>
                        <div class="col-12 bi-page-body">
                            <div id="GroupAttributesGrid"></div>
                        </div>
                        <script type="text/x-jsrender" id="inherited">
                            {{if AttributeType == @((int)AttributeType.Site)}}
                            <div title="{{:Inherited}}">
                                {{:Inherited}}
                            </div>
                            {{/if}}
                        </script>
                        <script type="text/x-jsrender" id="options">
                            <div class="user-hover-options">
                                {{if AttributeType ==  @((int)AttributeType.Group)}}
                                <a href="javascript:void(0);" id="edit-group-attribute" title="@T["Edit"]" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="group" onclick="editCustomAttribute(this)">
                                    <i class="su su-edit"></i>
                                </a>
                                <a class="delete-class" href="javascript:void(0);" id="remove-group-attribute" title="@T["Remove"]" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="group" onclick="deleteConfirmation(this)">
                                    <i class="su su-delete"></i>
                                </a>
                                {{else}}
                                <a href="javascript:void(0);" title="@T["Edit"]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                    <i class="su su-edit disabled-icon-color"></i>
                                </a>
                                <a class="delete-class" href="javascript:void(0);" title="@T["Remove"]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                    <i class="su su-delete disabled-icon-color"></i>
                                </a>
                                {{/if}}
                            </div>
                        </script>
                    </div>
                </div>
            </div>
            @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
            <div id="delete-group-area" class="no-padding"></div>
        </div>
    </div>
    <div id="add-groupuser-area" class="no-padding">
        <iframe src="" style="border: 0;" id="add-groupuser-iframe" border="0" width="100%" height="100%"></iframe>
    </div>
    @await Html.PartialAsync("../UserManagement/_UserAddDialog", globalAppSettings)
    @await Html.PartialAsync("../Items/_SharePermission")
    @await Html.PartialAsync("../CustomAttribute/_CustomAttribute")
}
