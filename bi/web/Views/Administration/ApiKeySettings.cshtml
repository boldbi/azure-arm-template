@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = T["API Key"].Value + " - " + globalAppSettings.SystemSettings.OrganizationName;
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var canShowAdminMenu = await ServerAppConfig.CanShowAdminMenu(model, _identityResponse.IsAdmin, _featureManager);
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var pageDescription = T["API keys provide a simpler alternative to OAuth for connecting to and authenticating services."];
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var isSettingsPage = requestUrl.ToString().IndexOf("/administration/api-key-settings", StringComparison.CurrentCultureIgnoreCase) > 0;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.SiteCredentials);
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/profile.css"/>
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/generateApiKey.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/profile.min.css"/>
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/generateApiKey.min.js"></script>
    </environment>
    <script>
        var apiKeyDetails = "@Url.Action("GetApiKeyDetails", "User")";
        var addApiKeyUrl = "@Url.Action("AddApiKey", "User")";
        var deleteApiKeyUrl = "@Url.Action("DeleteApiKeyDetails", "User")";
        var editApiKeyUrl = "@Url.Action("EditApiKey", "User")";
        var isSettingsPage = @Json.Serialize(isSettingsPage);
        var getApikeyUrl = isSettingsPage ? "@(Url.Action("GetAllApiKey", "Administration"))" : "@(Url.Action("GetApiKeyDetails", "User"))";
    </script>
}

@section MainSection{
    @await Html.PartialAsync("_AdminMenu")
    <div class="col-xs-12 no-padding no-margin @(canShowAdminMenu ? "width-alignment" : "admin-panel-full-width") top-nav-header-without-btn">
        @await Html.PartialAsync("../Shared/_TopHeaderSection", new ViewDataDictionary(ViewData) { { "PageHeader", @T["API Key"] }, { "PageDescription", @pageDescription } })
    </div>

<div id="generate-api-key-settings" class="bi-page-container col-xs-12 @(canShowAdminMenu ? string.Empty : "admin-panel-full-width")">
    <div id="generate-api-key-container" class="bi-page-content col-xs-12 no-padding">
        <div id="manage-key-section" class="showorhideapigrid col-xs-12">
            <div class="col-xs-12 no-padding" id="api-key-grid">
                @await Html.PartialAsync("~/Views/User/_GenerateApiKey.cshtml")
            </div>
        </div>
    </div>
    <div id="generate-api-key-div">
        <div class="dialog">
            <form id="generate-apikey-form" class="col-md-12 dialog-body">
                <table>
                    <tbody>
                    <tr>
                        <td><div class="apikey-name">@T["Name"]<span class="mandatory">*</span></div></td>
                    </tr>
                    <tr>
                        <td>
                            <span class ="margin-bottom">
                                <input type="text" id="api-key_name" class="popup form-control text-field text" data-maxlength="255" value="" tabindex="1" autofocus name="apiKeyName" placeholder="Enter api key name">
                                <span id="validate-name" class="validation-message text"></span>
                                <div id="plugin_validation" class="validation-message text"></div>
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="token-validity">
                                <span class="material-switch token-toogle-checkbox">
                                    <input type="checkbox" id="token-validity-enabled" @(false ? "checked" : string.Empty) />
                                    <label for="token-validity-enabled" class="label-primary"></label>
                                </span>
                                @T["API Key Expiration"]
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td><span class="token-description">@T["Enable this option to configure expiry date for the API key."]</span></td>
                    </tr>
                    <tr id="show-hide-datepicker">
                        <td>
                            <div class="col-sm-3 col-xs-3 token-date-picker no-padding">
                                <input type="text" name="token-date-range" class="form-control full-width" id="token-datePicker">
                                <span id="token-validate" class="validation-message text"></span>
                            </div>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
    <div id="update-api-key-div">
        <div class="dialog">
            <form id="update-apikey-form" class="col-md-12 dialog-body">
                <table>
                    <tbody>
                    <tr>
                        <td><div class="update-apikey-name">@T["Name"]<span class="mandatory">*</span></div></td>
                    </tr>
                    <tr>
                        <td>
                            <span class ="margin-bottom">
                                <input type="text" id="update-api-key_name" class="popup form-control text-field text" data-maxlength="255" value="" tabindex="1" autofocus name="updateapiKeyName">
                                <span id="validate-name" class="validation-message text"></span>
                                <div id="plugin_validation" class="validation-message text"></div>
                            </span>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
    <div id="apikey-delete-confirmation" class="col-lg-12 no-padding"></div>
   @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
</div>
}