@{
    Layout = null;
    var isMobile = new DeviceDetection(Context).IsMobile;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var isItemPageRequested = (requestUrl.AbsolutePath == "/" || requestUrl.AbsolutePath == Url.Content("~/") || requestUrl.ToString().IndexOf("/dashboards", StringComparison.CurrentCultureIgnoreCase) > 0 || requestUrl.ToString().IndexOf("/data-sources", StringComparison.CurrentCultureIgnoreCase) > 0 || requestUrl.ToString().IndexOf("/pinboards", StringComparison.CurrentCultureIgnoreCase) > 0 || requestUrl.ToString().IndexOf("/schedules", StringComparison.CurrentCultureIgnoreCase) > 0 || requestUrl.ToString().IndexOf("/slideshows", StringComparison.CurrentCultureIgnoreCase) > 0) && !isMobile;
    var emailAddress = Context.Session.GetString("emailaddress") != null ? Context.Session.GetString("emailaddress") : string.Empty;
    var itemPermissions = Model as Dictionary<ItemType, bool>;
    var itemsCount = ViewBag.ItemsCount as Dictionary<ItemType, int>;
    var draftCount = ViewBag.DraftDashboardCount as Dictionary<ItemType, int>;
    var showUpload = GlobalAppSettings.Branding == AppBranding.Syncfusion.Identifier || emailAddress.EndsWith("@syncfusion.com", StringComparison.OrdinalIgnoreCase) || emailAddress.Equals(ServerAppConfig.AppSettings.Syncfusion.Support.ConciergeEmail);
    var isDashboardTab = requestUrl.LocalPath.TrimEnd('/').IndexOf(Url.Action("Dashboards", "Dashboards"), StringComparison.CurrentCultureIgnoreCase) > -1;
    var userdashboardsCount = itemsCount != null ? itemsCount.ContainsKey(ItemType.Dashboard) ? itemsCount[ItemType.Dashboard] : 0 : 0;
    var draftDashboardCount = draftCount != null ? draftCount.ContainsKey(ItemType.Dashboard) ? draftCount[ItemType.Dashboard] : 0 : 0;
    var globalAppSettings = _globalAppSettings;
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var dashboardsPageUrl = Url.Action("Dashboards", "Dashboards");
    var isDashboardCreateDenied = GlobalAppSettings.IsUrlInDnsList(globalAppSettings.DisplayUri);
    var absoluteUrl = requestUrl.AbsolutePath.ToString().ToLower();
    var canHideUploadDashboard = isDashboardCreateDenied && !_identityResponse.IsAdmin;
}
<script>
    var isDraftExistUrl = "@Url.Action("IsDraftExist", "items")";
    var dashboardDesignerUrl = "@Url.Action("DashboardDesigner", "Designer")";
    var userDashboardsCount = "@userdashboardsCount";
    var draftDashboardCount = "@draftDashboardCount";
    var isDashboardCreateDenied = @Json.Serialize(isDashboardCreateDenied);
    var sharableDashboardsCount = "@ViewBag.SharableDashboardsCount";
</script>

<div id="create-item-container" style="display:none">
    <aside class="create-menu create-menu-effect">
        <div class="create-dashboard-section col-xs-12">
            <div class="create-dashboard-header-section col-xs-12 no-padding">
                <div class="create-dashboard-header-title">
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Dashboard) && itemPermissions[ItemType.Dashboard])
                    {
                        <label>@T["Create Dashboard"]</label>
                    }
                    else
                    {
                        <label>@T["Support Request"]</label>
                    }
                </div>
            </div>
            <div class="create-item-body-section col-xs-12 no-padding">
                <ul class="col-xs-12 no-padding">
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Dashboard) && itemPermissions[ItemType.Dashboard])
                    {
                        <li class="create-dashboard-scratch">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/blank-dashboard.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Start from Scratch"]</label><br>
                                    <span>@T["Create a dashboard from scratch"]</span>
                                </div>
                            </div>
                        </li>
                        <li id="create-multitab-dashboard">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/create-multitab-dashboard.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Multi-Tabbed Dashboard"]</label><br>
                                    <span>@T["Create a multi-tabbed dashboard by adding two or more dashboards"]</span>
                                </div>
                            </div>
                        </li>
                        if (!ServerAppConfig.IsSelfHosted && !isDashboardCreateDenied)
                        {
                            <li class="deploy-template-dashboard" id="deploy-template-dashboard">
                                <div class="create-item-list-section">
                                    <div class="create-item-list-icon" style="float: left;">
                                        <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/template-dashboard.svg" loading="lazy">
                                    </div>
                                    <div class="create-item-list-title">
                                        <label>@T["Start from Template"]</label><br>
                                        <span>@T["Explore built-in dashboard templates"]</span>
                                    </div>
                                </div>
                            </li>
                        }

                        if (ServerAppConfig.IsSelfHosted && !ServerAppConfig.HideSampleDashboard && isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Dashboard) && itemPermissions[ItemType.Dashboard] && isDashboardTab)
                        {
                            <li class="deploy-template-dashboard add-sample-button">
                                <div class="create-item-list-section">
                                    <div class="create-item-list-icon" style="float: left;">
                                        <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/template-dashboard.svg" loading="lazy">
                                    </div>
                                    <div class="create-item-list-title">
                                        <label>@T["Sample Dashboards"]</label><br>
                                        <span>@T["Explore the sample dashboards gallery"]</span>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Dashboard) && itemPermissions[ItemType.Dashboard] && isDashboardTab && !canHideUploadDashboard)
                    {
                        <li id ="upload-dashboard">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/upload-dashboard.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title upload-dashboard-div">
                                    <label>@T["Upload Dashboards"]
                                        <span class="badge preview-badge badge-secondary1 badge-secondary2">@T["PREVIEW"]</span>
                                    </label><br>
                                    <span>@T["Upload your dashboards"]</span>
                                </div>
                            </div>
                        </li>
                    }

                    @if (!ServerAppConfig.IsSelfHosted)
                    {
                        <li class="request-concierge-support">
                            <a class="create-item-list-section" href="@ServerAppConfig.AppSettings.Syncfusion.Support.CreateTicket" target="_blank">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/support.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Support"]</label><br>
                                    <span>@T["Having trouble? Contact our dedicated support team now"]</span>
                                </div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="create-item-section col-xs-12">
            <div class="create-item-body-section col-xs-12 no-padding">
                <ul class="col-xs-12 no-padding">
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Datasource) && itemPermissions[ItemType.Datasource])
                    {
                        <li id="create-datasource-connection">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/create-data-sources.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Data Sources"]</label><br>
                                    <span>
                                        @T["Import your data from popular connectors"]
                                    </span>
                                </div>
                            </div>
                        </li>
                    }
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Slideshow) && itemPermissions[ItemType.Slideshow] && itemsCount != null && itemsCount.ContainsKey(ItemType.Dashboard) && itemsCount[ItemType.Dashboard] > 0)
                    {
                        <li id="create_presentation">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/create-slideshow.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Slideshow"]</label><br>
                                    <span>@T["Create slideshow"]</span>
                                </div>
                            </div>
                        </li>
                    }
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Schedule) && itemPermissions[ItemType.Schedule] && itemsCount != null && itemsCount.ContainsKey(ItemType.Dashboard) && itemsCount[ItemType.Dashboard] > 0)
                    {
                        <li id="create_schedule">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/create-schedule.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Schedule"]</label><br>
                                    <span>
                                        @T["Monitor your data to spot emerging trends"]
                                    </span>
                                </div>
                            </div>
                        </li>
                    }
                    @if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Category) && itemPermissions[ItemType.Category] && isDashboardTab)
                    {
                        <li id="create_Category">
                            <div class="create-item-list-section">
                                <div class="create-item-list-icon" style="float: left;">
                                    <img id="templates-img" class="smiley" src="@(GlobalAppSettings.CdnDomain)/static/sidebar/v1/create-category.svg" loading="lazy">
                                </div>
                                <div class="create-item-list-title">
                                    <label>@T["Category"]</label><br>
                                    <span>@T["Create category"]</span>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </aside>
</div>
<div id="create-menu-backdrop" style="display: none;"></div>
<div id="save-draft-container" class="e-control e-popup e-popup-close">
    <form id="save-draft-form" name="saveDraftForm">
        <div class="save-draft-content-section">
            <div class="save-draft-title">@T["Let's start with a name for your dashboard."]</div>
            <div class="row save-draft-input-section">
                <div class="col-xs-12 save-draft-input-segment">
                    <span>
                        <input class="save-draft-input" id="save-draft-input" name="dashboardName" data-maxlength="255" tabindex="1" data-msg-containerid="plugin_validation" />
                    </span>
                    <span id="validate-dashboard-name" class="validation-message"></span>
                    <div id="plugin_validation" class="validation-message"></div>
                </div>
            </div>
            <div class="save-draft-note">
                @T["All dashboards are autosaved as drafts for you to continue where you left off. Publishing a dashboard must be done manually."]
            </div>
        </div>
    </form>
</div>
@if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Dashboard) && itemPermissions[ItemType.Dashboard] && isDashboardTab)
{
    @await Html.PartialAsync("../Items/_AddSampleItems")
}

@if (absoluteUrl.IndexOf(dashboardsPageUrl, StringComparison.OrdinalIgnoreCase) == -1 || (itemsCount != null && itemsCount.ContainsKey(ItemType.Dashboard) && itemsCount[ItemType.Dashboard] == 0))
{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/create-item-menu.css" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/create-item-menu.min.css" />
    </environment>

    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/create-item-menu.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/create-item-menu.min.js"></script>
    </environment>
}