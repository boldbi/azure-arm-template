@{
    var globalAppSettings = _globalAppSettings;

    var userDetail = (User)ViewBag.UserDetail;
    var isolationCode = ViewBag.IsolationCode as string;
    var isAduser = ViewBag.IsAdUser;
    var showResendButton = !userDetail.IsActivated ? "show" : "hide";
    var showActivationButton = (userDetail.Status.ToString() == "InActive") ? "show" : "hide";
    var showDeactivateButton = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower()) ? "show" : "hide";
    var showDropdown = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower() && !ViewBag.isAdUser) ? "show" : "hide";
    var showActive = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() == ViewBag.LoggedUser.ToLower()) ? "show" : "hide";
    var showActiveUser = (userDetail.Status.ToString() == "Active" && ViewBag.IsAdUser) ? "show" : "hide";
    var showInactive = (showDropdown == "hide" && showActive == "hide" && showActiveUser == "hide") ? "show" : "hide";
    var groupList = ViewBag.GroupList;
    ViewBag.Title = T["User Profile"].Value + " - " + globalAppSettings.SystemSettings.OrganizationName;
    var idpreferenceId = Context.Session.GetString("idpReferenceId") != null ? Context.Session.GetString("idpReferenceId").ToString() : string.Empty;
    var idPUrl = globalAppSettings.SystemSettings.IDPUrl;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EditUsers);
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var isAttributeTab = ViewBag.ActiveTab != null && ViewBag.ActiveTab.ToString().ToLower() == "attributes" ? "active" : string.Empty;
    var isProfileTab = ViewBag.ActiveTab == null || ViewBag.ActiveTab.ToString().ToLower() == "profile" || (!string.IsNullOrWhiteSpace(Context.Request.Query["tab"]) && string.IsNullOrWhiteSpace(isAttributeTab)) ? "active" : string.Empty;
    var autoGeneratedEmailDomain = ServerAppConfig.AppSettings.AutoGeneratedEmailDomain;
    var isAdmin = _identityResponse.IsAdmin;
    var permissions = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isOAuthorOpenIdUser = ViewBag.IsEnableCustomDirectoryUserProfileEdit && (userDetail.DirectoryType == DirectoryType.OAuth2 || userDetail.DirectoryType == DirectoryType.OpenIDConnect) ? true : false;
    List<string> groupName = new List<string>();
    ViewBag.BackIconRedirectionUrl = Url.Action("index", "UserManagement");
    ViewBag.BackIconTitle = T["Users"];
    var canShowAdminMenu = await ServerAppConfig.CanShowAdminMenu(permissions, _identityResponse.IsAdmin, _featureManager);
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/user-management-profile.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/user-management-profile.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/user-management-profile.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/user-management-profile.min.js"></script>
    </environment>

    <script type="text/javascript">
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var activateDeactivateUserUrl = "@Url.Action("ActivateDeactivateUser", "UserManagement")";
        var resendactivationcodeUrl = "@Url.Action("resendactivationcode", "UserManagement")";
        var updateprofilepictureUrl = "@Url.Action("updateprofilepicture", "user")";
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var UpdatePasswordUrl = "@Url.Action("UpdatePassword", "UserManagement")";
        var updateUserProfileUrl = "@Url.Action("UpdateUserProfile", "UserManagement")";
        var emailSettingsUrl = "@Url.Action("e-mail-settings", "administration")";
        var deleteSingleFromUserListUrl = "@Url.Action("DeleteSingleFromUserList", "UserManagement")";
        var userPageUrl = "@Url.Action("Index", "UserManagement")";
        var avatarUrl = "@(idPUrl + Url.Action("Avatar", "User"))";
        var deleteavatarUrl = "@Url.Action("deleteavatar", "UserManagement")";
        var getdefaultavatarUrl = "@Url.Action("getdefaultavatar", "User")";
        var saveIsolationCodeUrl = "@Url.Action("UpdateIsolationCode", "UserManagement")";
        var getUserAttributesUrl = "@Url.Action("GetUserAttributes", "CustomAttribute")";
        var isPresentEmailId = "@Url.Action("IsPresentEmailId", "UserManagement")";
        var isUsernameExistsUrl = "@Url.Action("IsUsernameExists", "UserManagement")";
        var userId = @ViewBag.UserDetail.UserId;
        var showDropdown = "@showDropdown";
        var isEmailRequired = @Json.Serialize(globalAppSettings.SystemSettings.IsEmailRequired);
        var isOAuthorOpenIdUser = @Json.Serialize(isOAuthorOpenIdUser);
        var autoGeneratedEmailDomain = "@autoGeneratedEmailDomain";
        $(document).ready(function () {
            $("#avatar-button-click, #avatar-delete-click").css("display","none");
            $("#status-dom").hide();

            window.dateFormat = "@_clientDateTimeInfo.ClientDateTime.DateFormat";
            var fulldata=@Html.Raw(Json.Serialize(ViewBag.UserDetail));
            editUser(fulldata,"@_clientDateTimeInfo.ClientDateTime.DateFormat");
            if (@ViewBag.EditUserProfile > 0) {
                $("#edit").trigger("click");
                if(showDropdown == "show"){
                    $("#status-div").addClass("line-spacing");
                }
            }
            $('[data-bs-toggle="tooltip"]').tooltip({ container: $('body') });
            $(document).on("click", ".popup-close", function (e) {
                $(".edit-profile-field").attr("value","updateUserProfileUrl");
                $("#profile-picture").attr("src", "@globalAppSettings.SystemSettings.CDNLink/images/preview.jpg");
                $('#upload-image').attr("disabled", "disabled");
                if ($(".img-container").children().hasClass("jcrop-active")) {
                    $('#profile-picture').data("Jcrop").destroy();
                }
                $(function () {
                    $("#avatar-upload-box").ejDialog({
                        showOnInit: false,
                        allowDraggable: true,
                        enableResize: false,
                        width: "600px",
                        enableModal: true,
                        showHeader: false,
                        close: "DialogBoxClose",
                        closeOnEscape: true
                    });
                });
                eDialog = $("#avatar-upload-box").data("ejDialog");
                eDialog.close();
            });
            GridLocalization(window.Server.App.Localization.AttributeRecordsEmpty);
            $("#UserAttributesGrid").ejGrid({
                dataSource: null,
                gridLines: ej.Grid.GridLines.None,
                allowSorting: true,
                allowSearching: true,
                allowPaging: true,
                allowSelection: true,
                allowFiltering: true,
                filterSettings: { filterType: "menu" },
                pageSettings: { pageSize: 8 },
                enableRowHover: true,
                enableAltRow: false,
                create: "initialUserGridCreate",
                dataBound: function (args) {
                    $('[data-bs-toggle="tooltip"]').tooltip({ container: $('body') });
                },
                columns: [
                    { field: 'Name', templateID: "#attribute-name-template", headerText: "@T["Name"]", width: 40, allowSorting: true, allowFiltering: true },
                    { field: 'Value', templateID: "#attribute-value-template", headerText: "@T["Value"]", width: 60, allowSorting: true, allowFiltering: true },
                    { field: 'Description', templateID: "#attribute-description-template", headerText: "@T["Description"]", width: 50, allowSorting: true, allowFiltering: true },
                    { field: 'ModifiedDateString', headerText: "@T["Last Modified"]", width: 40, allowSorting: true, allowFiltering: false },
                    { field: 'Inherited', headerText: "@T["Inherited From"]", templateID: "#inherited", width: 40, allowSorting: true, allowFiltering: false },
                    { field: 'Options', headerText: '', templateID: "#options", width: 20, allowSorting: false, allowFiltering: false }
                ]
            });

            $.ajax({
                type: "GET",
                url: getUserAttributesUrl,
                data: { id: fulldata.UserId },
                success: function (result) {
                    if (result.Status) {
                        var userAttributesGrid = $("#UserAttributesGrid").data("ejGrid");
                        userAttributesGrid.dataSource(result.Attributes);
                    }
                    $("#UserAttributesGrid").ejWaitingPopup("hide");
                }
            });
        });
    </script>
    <script type="text/x-jsrender" id="attribute-name-template">
        <span class="grid-content" title="{{:Name}}" data-bs-toggle="tooltip">{{:Name}}</span>
    </script>
    <script type="text/x-jsrender" id="attribute-description-template">
        {{if Description != ""}}
        <span class="grid-content" title="{{:Description}}" data-bs-toggle="tooltip">{{:Description}}</span>
        {{else}}
        --
        {{/if}}
    </script>
    <script type="text/x-jsrender" id="attribute-value-template">
        <span class="grid-content" title="{{:Value}}" data-bs-toggle="tooltip">{{:Value}}</span>
    </script>
}

@section MainSection {
    @await Html.PartialAsync("../Administration/_AdminMenu")
    <div class="col-12 no-padding no-margin @(canShowAdminMenu ? "width-alignment" : "admin-panel-full-width")">
        @await Html.PartialAsync("../Shared/_TopHeaderSection", new ViewDataDictionary(ViewData) { { "PageHeader", @ViewBag.UserDetail.DisplayName }, { "IsViewUserProfile", "true" } })
        <div class="col-12 bi-page-header tabs-header-padding top-nav-btn-secton">
            <div class="col-12 no-padding">
                <div class="col-xs-6 no-padding button-section">
                    @if (userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower() && (isAdmin || (!isAdmin && !userDetail.IsAdmin && permissions[PermissionEntity.UsersandGroups])))
                    {
                        @*<input class="primary-button password-save-button float-end @showDeactivateButton" type="button" id="deactivate-button-click" value="@T["Deactivate User"]" title="" />
                <input class="primary-button float-end @showResendButton" type="button" id="resend-button-click" value="@T["Resend Activation Code"]" title="" />
                <input class="primary-button password-save-button float-end @showActivationButton" type="button" id="activate-button-click" value="@T["Activate User"]" title="" />*@

                        <div id="profile-action-section" class="dropdown float-end no-padding">
                            <a class="dropdown-toggle" data-bs-toggle="dropdown">
                                <span class="su su-options-menu"></span>
                            </a>
                            <ul class="dropdown-menu" role="menu" id="profile-action-menus">
                                <li class="deactivate-user-option dropdown-submenu float-start @showDeactivateButton" onclick="activateDeactivateUser(false)">
                                    <a class="dropdown-option">
                                        <span>
                                            @T["Deactivate User"]
                                        </span>
                                    </a>
                                </li>
                                <li class="activate-user-option dropdown-submenu float-start @showActivationButton" onclick="activateDeactivateUser(true)">
                                    <a class="dropdown-option">
                                        <span>
                                            @T["Activate User"]
                                        </span>
                                    </a>
                                </li>
                                <li class="dropdown-submenu float-start @showResendButton" onclick="onResendActivationClick()">
                                    <a class="dropdown-option">
                                        <span>
                                            @T["Resend Activation Code"]
                                        </span>
                                    </a>
                                </li>
                                <li class="dropdown-submenu float-start" onclick="onDeleteDialogOpen()">
                                    <a class="dropdown-option">
                                        <span>
                                            @T["Remove User"]
                                        </span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    }

                    <input type="button" class="primary-button app-btn-primary float-end" id="add-custom-attribute" title="" value="@T["Add Attribute"]" data-id="@userDetail.UserId" onclick="addCustomAttribute('user')">
                    @if (isAdmin || permissions[PermissionEntity.UsersandGroups] && (permissions[PermissionEntity.AllPermissions] || permissions[PermissionEntity.SpecificPermissions]))
                    {
                        <a href="@Url.Action("userpermission", "permission")?userId=@userDetail.UserId" title="">
                            <input type="button" class="link-button app-btn-link float-end" value="@T["Manage Permissions"]">
                        </a>
                    }
                </div>
            </div>
        </div>
        <div class="col-12 no-padding bi-page-nav-bar">
            <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                <li id="profile-tab" role="presentation" class='@isProfileTab'>
                    <a href="#user-profile-tab" id="user-profile" aria-controls="user-profile-tab" role="tab" data-bs-toggle="tab">@T["Profile"]</a>
                </li>
                <li id="attribute-tab" role="presentation" class='@isAttributeTab'>
                    <a href="#user-attribute-tab" id="user-attribute" aria-controls="user-attribute-tab" role="tab" data-bs-toggle="tab">@T["Attributes"]</a>
                </li>
            </ul>
        </div>
    </div>
    <div id="view-profile-info" class="bi-page-container col-12 bi-page-container-with-tab @(canShowAdminMenu ? "width-alignment" : "admin-panel-full-width")">
        <span id="is-aduser">@ViewBag.IsAdUser</span>
        <span id="logged-user">@ViewBag.LoggedUser</span>
        <div id="edit-user-profile-master" role="tabpanel" class="user-permission bi-page-content col-12 no-padding">
            <div class="col-12 no-padding tab-content">
                <div id="user-profile-tab" role="tabpanel" class="col-12 tab-pane no-padding @isProfileTab">
                    <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 col-12 bi-page-body col-12">
                        <div class="col-12 no-padding profile-img-name">
                            <div class="img-view-holder col-4 no-padding">
                                <div class="profile-pic-tag" id="profile-name-text" data-id="@userDetail.IdPReferenceId" data-type="user" data-display-name="@ViewBag.UserDetail.DisplayName" data-image-size="64" data-bs-toggle="profile-tag-tooltip" title="@ViewBag.UserDetail.DisplayName" data-placement="top"></div>
                            </div>
                            <div class="col-xs-8 no-padding account-edit">
                                <label id="display-name-field" class="display-name">@userDetail.DisplayName</label>
                                @if ((userDetail.DirectoryType == DirectoryType.Local || isOAuthorOpenIdUser) && (isAdmin || (!isAdmin && !userDetail.IsAdmin)) && ServerAppConfig.IsSelfHosted)
                                {
                                    <label id="edit-button">
                                        <span class="bg-info" id="id-account-link">
                                            <input type="button" id="edit" class="" value="@T["Edit Profile"]" readonly>
                                        </span>
                                    </label>
                                }
                            </div>
                        </div>
                        @if (userDetail.DirectoryType != DirectoryType.Local && !isOAuthorOpenIdUser)
                        {
                            <div id="azure-user-info" class="col-12 no-padding profile-note-sec">
                                <label>@String.Format(T["Profile editing is not currently supported for {0} and database accounts."].Value, ServerAppConfig.IsSelfHosted ? "Azure Active Directory, Windows Active Directory, Office 365, OpenID Connect, JWT SSO, OAuth" : "Azure Active Directory, Office 365, LinkedIn, OAuth, Syncfusion.com")</label>
                            </div>
                        }
                        @if (ServerAppConfig.IsSelfHosted && isOAuthorOpenIdUser)
                        {
                            <div id="azure-user-info" class="col-12 no-padding profile-note-sec">
                                <label>@String.Format(T["Only Firstname and Lastname editing is supported for {0} accounts."].Value, " OpenID Connect, OAuth")</label>
                            </div>
                        }
                        @if (!isAdmin && userDetail.IsAdmin)
                        {
                            <div id="admin-user-info" class="col-12 no-padding profile-note-sec">
                                <label>@T["You do not have the privilege to edit the admin user’s profile."]</label>
                            </div>
                        }
                        @if (!ServerAppConfig.IsSelfHosted && (userDetail.DirectoryType == DirectoryType.Local || isOAuthorOpenIdUser))
                        {
                            <div id="profile-cannot-edit" class="col-12 no-padding profile-note-sec">
                                <label>@T["Modifying another user's profile is not currently permitted. If you would like to update your profile, please navigate to the 'My Profile' section and make the necessary changes."]</label>
                            </div>
                        }
                        <div id="edit-user-profile-form-div" class="col-12 col-sm-7 col-md-7 col-lg-7 no-padding">
                            <form class="form-horizontal edit-user-profile-form" autocomplete="off">
                                @if (ServerAppConfig.IsSelfHosted)
                                {
                                    <div class="form-element-label">
                                        <div class="show input-field user-name-input-field">
                                            <label>@T["Username"]</label>
                                            <span id="user-username-field" value="@userDetail.Username">@userDetail.Username</span>
                                        </div>
                                        <div class="hide input-field-edit">
                                            <label class="label-panel app-textbox-label">@T["Username"]<i class="mandatory">*</i> </label>
                                            <div class="col-sm-5 col-12 group-list">
                                                @Html.TextBox("user-username", userDetail.Username, new { id = "user-username", placeholder = T["Please enter the username"].Value, @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", maxlength = "254" })
                                                <span id="user-name-validation" class="alert-messages validation-message"></span>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="form-element-label">
                                    <div class="show input-field">
                                        <label>@T["First Name"]</label>
                                        <span id="user-firstname-field" value="@(!string.IsNullOrWhiteSpace(userDetail.FirstName) ? userDetail.FirstName : "--")">@(!string.IsNullOrWhiteSpace(userDetail.FirstName) ? userDetail.FirstName : "--")</span>
                                    </div>
                                    <div class="hide input-field-edit">
                                        <label class="label-panel app-textbox-label">@T["First Name"]<i class="mandatory">*</i> </label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-firstname", userDetail.FirstName, new { id = "user-firstname", placeholder = T["Please enter the first name"].Value, @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="first-name-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-element-label">
                                    <div class="show input-field">
                                        <label> @T["Last Name"]</label>
                                        <span type="text" id="user-lastname-field" value="@(!string.IsNullOrWhiteSpace(userDetail.LastName) ? userDetail.LastName: "--")">@(!string.IsNullOrWhiteSpace(userDetail.LastName) ? userDetail.LastName : "--")</span>
                                    </div>
                                    <div class="hide input-field-edit">
                                        <label class="label-panel app-textbox-label"> @T["Last Name"]</label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-lastname", userDetail.LastName, new { id = "user-lastname", placeholder = T["Please enter the last name"].Value, @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="last-name-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-element-label">
                                    <div class="show input-field">
                                        <label>@T["Email"]</label>
                                        <span id="user-email-field" value="@(userDetail.CanShowEmail && !string.IsNullOrWhiteSpace(userDetail.Email) ? userDetail.Email :"--")">@(userDetail.CanShowEmail && !string.IsNullOrWhiteSpace(userDetail.Email) ? userDetail.Email : "--")</span>
                                    </div>
                                    <div class="hide input-field-edit">
                                        <label class="label-panel app-textbox-label">@T["Email"]<i class="mandatory">@(ServerAppConfig.IsSelfHosted && globalAppSettings.SystemSettings.IsEmailRequired ? "*" : string.Empty)</i> </label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @if (ServerAppConfig.IsSelfHosted)
                                            {
                                                @Html.TextBox("user-email", userDetail.CanShowEmail && !string.IsNullOrWhiteSpace(userDetail.Email) ? userDetail.Email : "--", new { id = "user-email", placeholder = T["Please enter the email address"].Value, @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", style = "margin-top:0" })
                                            }
                                            else
                                            {
                                                <a class="back-button float-start" id="user-email" href="mailto:@userDetail.Email">@(userDetail.CanShowEmail && !string.IsNullOrWhiteSpace(userDetail.Email) ? userDetail.Email : "--")</a>
                                            }

                                            <span id="email-duplicate-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-element-label user-phone-number">
                                    <div class="show input-field">
                                        <label>@T["Phone"]</label>
                                        <span id="user-phonenumber-field" name="user-phonenumber" type="text" value="@(!string.IsNullOrWhiteSpace(userDetail.ContactNumber) ? userDetail.ContactNumber : "--")">@(!string.IsNullOrWhiteSpace(userDetail.ContactNumber) ?  userDetail.ContactNumber : "--")</span>
                                    </div>
                                    <div class="hide input-field-edit">
                                        <label class="label-panel app-textbox-label">@T["Phone"]</label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-phonenumber", userDetail.ContactNumber, new { id = "user-phonenumber", placeholder = T["Please enter the phone number"].Value, @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="contact-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-element-label" id="group-div">
                                    @if (ViewBag.GroupList.Count != 0)
                                    {
                                        <label class="label-panel app-textbox-label" id="groups">
                                            @T["Groups"]
                                        </label>
                                        <div class="col-sm-5 col-12 group-list groups  group-view">
                                            @{ for (var group = 0; group < ViewBag.GroupList.Count; group++)
                                                {
                                                    groupName.Add(@ViewBag.GroupList[group].Name);
                                                }
                                            }
                                            @(String.Join(", ", groupName))
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            <label> @T["Groups"]</label>
                                            <span type="text" value="--">--</span>
                                        </div>
                                    }

                                </div>
                                <div class="form-element-label" id="activation-status-div">
                                    <label class="label-panel app-textbox-label">@T["Email Verification"]</label>
                                    @if (userDetail.IsActivated)
                                    {
                                        <div id="completed-status" class="col-sm-5 col-12 group-list group-view">
                                            <span class="label status-label-success no-padding">@T["Completed"]</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div id="pending-status" class="col-sm-5 col-12 group-list group-view"><span class="label status-label-warning no-padding">@T["Pending"]</span></div>
                                    }
                                </div>
                                <div class="form-element-label" id="status-div">
                                    <label class="label-panel app-textbox-label">@T["Status"]</label>
                                    <div id="status-show" class="col-sm-5 col-12 group-list group-view">
                                        <i class='su su-schedule-status'></i>
                                        @Html.TextBox("status-user", "", new { id = "status-user", @class = "content-size status", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="form-element-label">
                                    @if ((userDetail.DirectoryType == DirectoryType.Local || isOAuthorOpenIdUser) && (isAdmin || (!isAdmin && !userDetail.IsAdmin)))
                                    {
                                        <div id="edit-button">
                                            <input type="button" class="secondary-button app-btn-secondary float-end popup-close" title="" id="cancel-button" value="@T["Cancel"]">
                                            <input type="button" class="primary-button app-btn-primary float-end inactive-content" id="save-button" title="" onclick="SaveUserdetails()" data-userId="@userDetail.UserId" value="@T["Save"]">
                                        </div>
                                    }
                                </div>
                            </form>
                        </div>
                        <div class="col-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                            <h5 id="updation-validation-message"></h5>
                        </div>
                    </div>
                    <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 col-12 isolation-code-container bi-page-body col-12" style="display:none">
                        <div id="edit-user-isolation-form-div" class="col-12 col-md-12 col-sm-12 col-12 no-padding validation">
                            <form class="form-horizontal edit-user-isolation-form" autocomplete="off">
                                <div id="edit-isolation">
                                    <input type="button" class="link-button app-btn-link float-end" title="" onclick="editIsolationMethod()" value="@T["Edit Isolation Code"]">
                                </div>
                                <div id="save-cancel-buttons" style="display: none;">
                                    <input type="button" class="secondary-button app-btn-secondary float-end popup-close" title="" id="cancel-isolation-button" onclick="cancelIsolationCode()" value="@T["Cancel"]">
                                    <input type="button" class="primary-button app-btn-primary float-end inactive-content" id="save-isolation-button" title="" onclick="saveIsolationCode()" value="@T["Save"]">
                                </div>
                                <div class="form-group no-padding line-spacing" id="isolation-div">
                                    <label class="label-panel text-right app-textbox-label">@T["Isolation Code"]<span class="mandatory"></span> </label>
                                    <div class="col-sm-5  col-12 group-list">
                                        @Html.TextBox("isolation-code", isolationCode, new { id = "isolation-code", placeholder = T["Please enter the isolation code"].Value, @class = "form-control content-size edit-isolation-code disable-content", disabled = "disabled" })
                                        <span id="isolation-code-validation" class="alert-messages validation-message"></span>
                                    </div>
                                </div>
                                <div id="isolation-validation-message hide" class="error-message"></div>
                            </form>
                        </div>
                    </div>
                </div>
                <div id="user-attribute-tab" role="tabpanel" class="tab-pane @isAttributeTab bi-page-body col-12">
                    <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 col-12 no-padding">
                        <div id="UserAttributesGrid">
                        </div>
                    </div>
                    <script type="text/x-jsrender" id="options">
                        <div class="user-hover-options">
                            {{if AttributeType ==  @((int)AttributeType.User)}}
                            <a href="javascript:void(0);" title="@T["Edit"]" id="edit-user-attribute" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="user" onclick="editCustomAttribute(this)">
                                <i class="su su-edit"></i>
                            </a>
                            <a class="delete-class" href="javascript:void(0);" title="@T["Remove"]" id="remove-user-attribute" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="user" onclick="deleteConfirmation(this)">
                                <i class="su su-delete"></i>
                            </a>
                            {{else}}
                            <a href="javascript:void(0);" title="@T["Edit"]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                <i class="su su-edit disabled-icon-color"></i>
                            </a>
                            <a class="delete-class" href="javascript:void(0);" title="@T["Remove"]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                <i class="su su-delete disabled-icon-color"></i>
                            </a>
                            {{/if}}
                        </div>
                    </script>
                    <script type="text/x-jsrender" id="inherited">
                        {{if AttributeType ==  @((int)AttributeType.Group)}}
                        <div title="{{:Inherited}}">
                            <a href="@Url.Action("ViewGroup", "Group")/{{:GroupId}}?tab=attributes">{{:Inherited}}</a>
                        </div>
                        {{else AttributeType ==  @((int)AttributeType.Site)}}
                        <div title="{{:Inherited}}">
                            {{:Inherited}}
                        </div>
                        {{else AttributeType ==  @((int)AttributeType.IdpProfile)}}
                        <div title="{{:Inherited}}">
                            {{:Inherited}}
                        </div>
                        {{else }}
                        <div title="{{:Inherited}}">
                            --
                        </div>
                        {{/if}}
                    </script>
                </div>
            </div>
        </div>
        <input type="hidden" id="image" value="" />
        <input type="hidden" id="user-id" value="@ViewBag.UserDetail.UserId" />
        @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
        @*@if (!ViewBag.IsAdUser)
            {
                <div id="change-password" class="change-password-div">
                    <div class="col-12 col-sm-12 col-md-12 col-lg-12" id="change-password-content">
                        <form class="col-xs-11 col-sm-11 col-md-11 col-lg-11 change-password-form no-padding">
                            <div class="user-profile-table" cellpadding="20">
                                <div class="col-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-12 col-sm-5 col-md-5 col-lg-4 no-padding label-section text-right">
                                        @Html.Label("new-password", "T["New Password"]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-xs-11 col-sm-6 col-md-4 col-lg-3 password-section">
                                        @Html.Password("fake-password", new { id = "fake-password", @class = "fake-password-avoid-autocomplete" })
                                        @Html.Password("new-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "new-password", name = "new-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="new-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                                <div id="confirm-password-section" class="col-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-12 col-sm-5 col-md-5 col-lg-4 no-padding confirm-section label-section text-right">
                                        @Html.Label("confirm-password", "T["Confirm Password"]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-xs-11 col-sm-6 col-md-4 col-lg-3 confirm-section password-section">
                                        @Html.Password("confirm-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "confirm-password", name = "confirm-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="confirm-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="col-xs-1 no-padding button-section">
                            <input type="button" class="primary-button password-save-button profile-save-button float-end" value="@T["Update"]" onclick="onUserChangePasswordClick()">
                        </div>
                        <div class="col-12 col-sm-3 col-md-2 col-lg-2 no-padding validation">
                            <h5 id="password-validation" class="password-validate-holder"></h5>
                        </div>
                    </div>
                </div>
            }*@
    </div>
    <div class="no-padding" id="userprofile-delete-confirmation" tabindex="-1" role="dialog" style="display:none">
        <div class="col-lg-12 no-padding" role="document">
            <div class="col-lg-12 no-padding" autocomplete="off">
                <div class="no-left-padding no-bottom-padding no-right-padding">
                    <div class="delete-msg">@T["Are you sure you want to remove the user from this site?"]</div>
                </div>
            </div>
        </div>
    </div>
    <span id="baseurl" data-url="@Url.Content("~/")"></span>
    @await Html.PartialAsync("_ProfilePictureUploadBox", globalAppSettings.SystemSettings.CDNLink)

    @await Html.PartialAsync("../UserManagement/_LimitUserCreation")
    @await Html.PartialAsync("../CustomAttribute/_CustomAttribute")
}