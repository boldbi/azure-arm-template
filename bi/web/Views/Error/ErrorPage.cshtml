@{
    Layout = null;
    var globalAppSettings = _globalAppSettings;
    var email = ViewBag.Email;
    var faviconLogo = globalAppSettings.SystemSettings.FavIcon;
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var cdnLink = globalAppSettings.SystemSettings.CDNLink;
    var themeBasedImageHelper = new ThemeBasedImageHelper(globalAppSettings);
    var url = new Uri(Context.Request.GetDisplayUrl());
    var dns = url.GetLeftPart(UriPartial.Authority);
}
<!DOCTYPE html>
<html class="dashboard-server">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@T[ViewBag.Title] - @(globalAppSettings.SystemSettings != null && !string.IsNullOrWhiteSpace(globalAppSettings.SystemSettings.OrganizationName) ? globalAppSettings.SystemSettings.OrganizationName : GlobalAppSettings.BrandingDisplayName)</title>
    @await Html.PartialAsync("~/Views/Shared/_ApplicationThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseFontStyleSheet.cshtml")
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.min.js"></script>
    </environment>
    <script>
        var setPermissionUrl = "@Url.Action("SetCookieStoragePermission", "Accounts")";

        function OnLoginLogoLoadError() {
            var alternateImage = "@cdnLink/static/company/@ServerAppConfig.AppSettings.AppBranding.Identifier/logo/v1/@ServerAppConfig.BrandingJson.BrandingImages.LoginLogo"
            if (document.getElementsByClassName('error-image-1').src != alternateImage) {
                document.getElementsByClassName("error-image-1")[0].src = alternateImage;
            }
        }
    </script>
    <link rel="icon" href="@faviconLogo" onerror="if (this.href !== null && this.href.toLowerCase() !== '@cdnLink/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon') this.href = '@cdnLink/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon';" />
    @await Html.PartialAsync("~/Views/Shared/_LoaderIcon.cshtml")
</head>
<body class="error-full-content">
    <div class="error-page-outer">
        <div class="error-page-content">
            <div class="error-inside">
                <div class="error-image-center-1">
                    <img src="@globalAppSettings.SystemSettings.LoginLogo" onerror="OnLoginLogoLoadError()" class="error-image-1">
                </div>
                <div class="error-image-center-2">
                    <img src="@(ViewBag.ErrorType == "access_denied" ? themeBasedImageHelper.AccessDeniedImage() : themeBasedImageHelper.PageNotFoundImage())" class="error-image-2">
                </div>
                <div class="error-type">@ViewBag.ErrorHeader</div>

                @if (ViewBag.ErrorType == "access_denied")
                {
                    if (ViewBag.InActiveUser)
                    {
                        <div class="error-text">
                            @Html.Raw(string.Format(T["You are logged in as {0}, but your account is not yet activated in the site {1}."].Value, "<strong>" + email + "</strong>", "<strong>" + new Uri(globalAppSettings.SystemSettings.BaseUrl) + "</strong>"))<br>
                            @T["Please contact your system administrator to activate your account."]
                        </div>
                    }
                    else
                    {
                        <div class="error-text">
                            @Html.Raw(string.Format(T["You are logged in as {0}, but you do not have access to the site {1}."].Value, "<strong>" + email + "</strong>", "<strong>" + new Uri(globalAppSettings.SystemSettings.BaseUrl) + "</strong>"))<br>
                            @T["If you should have access to this site, contact your system administrator."]
                        </div>
                    }
                }
                else
                {
                    <div class="error-text">
                        @ViewBag.ErrorText1 <br>
                        @ViewBag.ErrorText2
                    </div>
                }
                <div class="take-me-back-to-home-page">
                    @if (ViewBag.ErrorType == "access_denied")
                    {
                        <span class="error-page-cursor">
                            <a class="error-to-beck-text-color" href="@(new Uri(globalAppSettings.SystemSettings.BaseUrl.TrimEnd('/') + "/accounts/logout"))">@T["Try a different account"]</a>
                        </span>
                    }
                    else if (ViewBag.ErrorType == "http_error_404")
                    {
                        <span class="error-page-cursor"><a class="error-to-beck-text-color" href="@(new Uri(globalAppSettings.SystemSettings.BaseUrl.TrimEnd('/') + "/dashboards"))">@T["Go to home page"]</a></span>
                    }
                </div>
            </div>
        </div>
    </div>
    @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
</body>
</html>