@using Microsoft.AspNetCore.Mvc.Routing;
@inject Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor actionContextAccessor
@{
    var globalAppSettings = _globalAppSettings;
    Layout = null;
    var cdnLink = string.Empty;
    var themeBasedImageHelper = new ThemeBasedImageHelper(globalAppSettings);
    var faviconLogo = string.Empty;
    var internalServerLogo = string.Empty;
    var dashboardServerResourceUrl = string.Empty;
    var homePageUrl = Url.Action("Dashboards", "Dashboards");
    internalServerLogo = themeBasedImageHelper.ServerErrorImage();
    if (ServerAppConfig.IsSelfHosted)
    {
        cdnLink = GlobalAppSettings.HttpPathBase.ToString().Equals("/") ? string.Empty : !string.IsNullOrWhiteSpace(GlobalAppSettings.HttpPathBase) ? GlobalAppSettings.HttpPathBase.ToString() : new Uri(ServerAppConfig.InternalAppBiUrl).AbsolutePath.TrimEnd('/') + "/";
        dashboardServerResourceUrl = !string.IsNullOrWhiteSpace(GlobalAppSettings.HttpPathBase) ? GlobalAppSettings.HttpPathBase.ToString() : new Uri(ServerAppConfig.InternalAppBiUrl).AbsolutePath.TrimEnd('/') + "/";
        faviconLogo = ServerAppConfig.InternalAppIdpUrl + "/ums/logos?type=favicon";
    }
    else
    {
        cdnLink = @GlobalAppSettings.CdnDomain;
        dashboardServerResourceUrl = ServerAppConfig.AppSettings.EndPoints.CdnLink.TrimEnd('/');
        faviconLogo = dashboardServerResourceUrl + "/cdn/images/application/" + @ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + @ServerAppConfig.BrandingJson.BrandingImages.FavIcon;
    }

    if (homePageUrl == string.Empty)
    {
        homePageUrl = ServerAppConfig.InternalAppIdpUrl + "/ums/homepage";
    }
    var isAdminUser = Context.Session.GetString("IsAdmin") != null && Convert.ToBoolean(Context.Session.GetString("IsAdmin"));
    var organisationName = globalAppSettings.SystemSettings != null ? globalAppSettings.SystemSettings.OrganizationName : string.Empty;
    var errorandDebugHelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ErrorAndDebugLogs);
    var language = globalAppSettings.SystemSettings != null ? globalAppSettings.SystemSettings.Language : System.Globalization.CultureInfo.CurrentCulture.ToString();
    var loginLogo = globalAppSettings.SystemSettings != null ? globalAppSettings.SystemSettings.LoginLogo : cdnLink + "/cdn/images/application/" + ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + ServerAppConfig.BrandingJson.BrandingImages.LoginLogo;
    var isDeploymentError = !string.IsNullOrWhiteSpace(ViewBag.TenantErrorMessage);
    var errorMessage = string.IsNullOrWhiteSpace(ViewBag.TenantErrorMessage) ? ViewBag.ErrorMessage : ViewBag.TenantErrorMessage;
    var canShowOrgName = !isDeploymentError || !string.IsNullOrWhiteSpace(organisationName);
    var url = new Uri(Context.Request.GetDisplayUrl());
    var dns = url.GetLeftPart(UriPartial.Authority);
}
<!DOCTYPE html>
<html class="dashboard-server">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@T["Internal Server Error"] @(!canShowOrgName ? string.Empty : (" - " + organisationName))</title>    
    @await Html.PartialAsync("~/Views/Shared/_ApplicationThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseFontStyleSheet.cshtml")
    <script asp-append-version="true" src="~/js/localizationcontent.js?v=@ServerAppConfig.ProductVersion&c=@language"></script>
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.min.js"></script>
    </environment>
    <script>
        var setPermissionUrl = "@Url.Action("SetCookieStoragePermission", "Accounts")";
    </script>
    <link rel="icon" href="@faviconLogo" onerror="if (this.href !== null && this.href.toLowerCase() !== '@cdnLink/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon') this.href = '@cdnLink/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon';" />
    @await Html.PartialAsync("~/Views/Shared/_LoaderIcon.cshtml")
</head>
<body class="error-full-content">
    <div class="error-page-outer">
        <div class="error-page-content">
            <div class="error-inside">
                <div class="error-image-center-1">
                    <img src="@loginLogo" onerror="if (this.src != '@cdnLink/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.LoginLogo') this.src = '@cdnLink/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.LoginLogo';" class="error-image-1">
                </div>
                <div class="error-image-center-2">
                    <img src="@internalServerLogo" class="error-image-2">
                </div>
                <div class="error-type">@T["Internal Server Error (500)"]</div>
                <div class="error-text">
                    <span>@T["Sorry! The server has encountered an internal error and was unable to complete your request."]</span>

                </div>
                @if (!string.IsNullOrWhiteSpace(errorMessage))
                {
                    <div id="deploy-error-container">
                        <textarea type="text" id="deploy-error-box" disabled>@errorMessage</textarea>
                        <span class="su su-copy text focus" id="deploy-error-copy" data-toggle="tooltip" title="@T["Click to copy"]"></span>
                    </div>
                }
                <div class="take-me-back-to-home-page">
                   @if (isDeploymentError)
                    {
                        @if (isAdminUser && ServerAppConfig.IsSelfHosted && !ServerAppConfig.IsHideHelpLink)
                        {
                            @Html.Raw(string.Format(T["{0}Go to sites page{1} or {2}Create a support{3} ticket with application logs by referring to this {4}link{5}."].Value,
                            "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ ServerAppConfig.InternalAppIdpUrl + "/ums/sites'>",
                            "</a></span><span class='error-text-color'>",
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>", 
                            "</a></span><span class='error-text-color'>", 
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ (ServerAppConfig.AppSettings.Documentation.BaseUri + errorandDebugHelpSiteUrl) + "' target='_blank'>", 
                            "</a></span>"))
                        }
                        @if (isAdminUser && ServerAppConfig.IsSelfHosted && ServerAppConfig.IsHideHelpLink)
                        {
                            @Html.Raw(string.Format(T["{0}Go to sites page{1} or {2}Create a support{3} ticket."].Value,
                                "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ ServerAppConfig.InternalAppIdpUrl + "/ums/sites'>",
                                "</a></span><span class='error-text-color'>",
                                "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>", 
                                "</a></span><span class='error-text-color'>"))
                        }
                        @if (!ServerAppConfig.IsSelfHosted)
                        {
                            @Html.Raw(string.Format(T["{0}Go to sites page{1} or {2}Create a support ticket{3}"].Value,
                            "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ ServerAppConfig.InternalAppIdpUrl + "/ums/sites'>",
                            "</a></span><span class='error-text-color'>",
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>",
                            "</a></span>"));
                        }
                    }
                    else
                    {
                       @if (isAdminUser && ServerAppConfig.IsSelfHosted && !ServerAppConfig.IsHideHelpLink)
                        { 
                            @Html.Raw(string.Format(T["{0}Go to home page{1} or {2}Create a support{3} ticket with application logs by referring to this {4}link{5}."].Value,
                            "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ homePageUrl + "'>",
                            "</a></span><span class='error-text-color'>",
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>", 
                            "</a></span><span class='error-text-color'>", 
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ (ServerAppConfig.AppSettings.Documentation.BaseUri + errorandDebugHelpSiteUrl) + "' target='_blank'>", 
                            "</a></span>"))
                        }
                        @if (isAdminUser && ServerAppConfig.IsSelfHosted && ServerAppConfig.IsHideHelpLink)
                        { 
                            @Html.Raw(string.Format(T["{0}Go to home page{1} or {2}Create a support{3} ticket."].Value,
                                "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ homePageUrl + "'>",
                                "</a></span><span class='error-text-color'>",
                                "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>", 
                                "</a></span><span class='error-text-color'>"))
                        }
                        @if (!ServerAppConfig.IsSelfHosted)
                        {
                            @Html.Raw(string.Format(T["{0}Go to home page{1} or {2}Create a support ticket{3}"].Value,
                            "<span class='error-page-cursor'><a class='error-to-beck-text-color' href='"+ homePageUrl + "'>",
                            "</a></span><span class='error-text-color'>",
                            "</span><span class='error-page-cursor'><a class='error-to-beck-text-color' href='https://www." +(GlobalAppSettings.BrandingDomain)+ "/support' target='_blank'>",
                            "</a></span>"));
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
