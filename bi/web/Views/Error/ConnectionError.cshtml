@{
    Layout = null;
    var globalAppSettings = _globalAppSettings;
    var favicon = string.Empty;
    var loginLogo = string.Empty;
    var themeBasedImageHelper = new ThemeBasedImageHelper(globalAppSettings);
    var cdnLink = string.Empty;
    var errorMessage = Context.Items["ErrorMessage"] as string;
    var dashboardServerResourceUrl = string.Empty;
    if (ServerAppConfig.IsSelfHosted)
    {
        cdnLink = (GlobalAppSettings.HttpPathBase.ToString().Equals("/") ? string.Empty : GlobalAppSettings.HttpPathBase.ToString()) + ServerAppConfig.AppSettings.EndPoints.CdnLink + "/cdn/images";
        dashboardServerResourceUrl = GlobalAppSettings.HttpPathBase + ServerAppConfig.AppSettings.EndPoints.CdnLink;
        loginLogo = ServerAppConfig.InternalAppIdpUrl + "/ums/logos?type=login";
        favicon = ServerAppConfig.InternalAppIdpUrl + "/ums/logos?type=favicon";
    }
    else
    {
        cdnLink = ServerAppConfig.AppSettings.EndPoints.CdnDomain;
        dashboardServerResourceUrl = ServerAppConfig.AppSettings.EndPoints.CdnLink.TrimEnd('/');
        loginLogo = dashboardServerResourceUrl + "/cdn/images/application/" + @ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + @ServerAppConfig.BrandingJson.BrandingImages.LoginLogo;
        favicon = dashboardServerResourceUrl + "/cdn/images/application/" + @ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + @ServerAppConfig.BrandingJson.BrandingImages.FavIcon;
    }
    var url = new Uri(Context.Request.GetDisplayUrl());
    var dns = url.GetLeftPart(UriPartial.Authority);
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@T["Database Error"]</title>
    @await Html.PartialAsync("~/Views/Shared/_ApplicationThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseThemeStyleSheet.cshtml")
    @await Html.PartialAsync("~/Views/Shared/_BaseFontStyleSheet.cshtml")
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/layout.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/error-page-new.min.css" />
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/error-page.min.js"></script>
    </environment>
    <link rel="icon" href="@favicon" onerror="if (this.href !== null && this.href.toLowerCase() !== '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon') this.href = '@dashboardServerResourceUrl/cdn/images/application/@ServerAppConfig.AppSettings.AppBranding.Identifier/@ServerAppConfig.BrandingJson.BrandingImages.FavIcon';" />
</head>
<body class="error-full-content">
    <div class="error-page-outer">
        <div class="error-page-content">
            <div class="error-inside">
                <div class="error-image-center-1">
                    <img src="@loginLogo" onerror="if (this.src != '@cdnLink/static/company/@ServerAppConfig.AppSettings.AppBranding.Identifier/logo/v1/@ServerAppConfig.BrandingJson.BrandingImages.LoginLogo') this.src = '@themeBasedImageHelper.LoginLogoImage()';" class="error-image-1">
                </div>
                <div class="error-image-center-2">
                    <img src="@themeBasedImageHelper.ServerErrorImage()" class="error-image-2">
                </div>
                <div class="error-type">@T["Database connection error"]</div>
                <div class="error-text">
                    @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        @T["Sorry! Server has encountered an error while establishing the connection to application database."]
                        <div id="deploy-error-container">
                            <textarea type="text" id="deploy-error-box" disabled>@errorMessage</textarea>
                            <span class="su su-copy text focus" id="deploy-error-copy" data-bs-toggle="tooltip" title="@T["Click to copy"]"></span>
                        </div>
                    }
                    else
                    {
                        @T["Sorry! Server has encountered an error while establishing the connection to application database. This error could be occurred due to below possible causes:"]
                        <ul class="list-style">
                            <li>@T["The database server might have been down."]</li>
                            <li>@T["The login credentials for the database might have been changed."]</li>
                            <li>@T["The database might have been corrupted."]</li>
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>