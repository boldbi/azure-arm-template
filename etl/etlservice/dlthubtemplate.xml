<Connector>
  <extractor>
    <name>MongoDB</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MongoDB
      connectorname: MongoDB
      config:
        connection_url: mongodb://dbuser:passwd@host:port
        database: databasename
      select:
        - tablename
      metadata:
        tablename:
          replication_method: FULL_TABLE
          replication_key: replication_key
          replication_value: replication_value
          interval_type: years/months/days
          interval_value: 
          timezone: UNIX/UTC
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>MongoDBINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MongoDB
      connectorname: MongoDB
      config:
        connection_url: mongodb://dbuser:passwd@host:port
        database: databasename
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>PostgreSQLINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: PostgreSQL
      connectorname: PostgreSQL
      config:
        host: hostname
        port: 5432
        username: user
        database: database
        password: password
        drivername: postgresql+pg8000
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>PostgreSQL</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: PostgreSQL
      connectorname: PostgreSQL
      schemaname: public
      config:
        host: hostname
        port: 5432
        username: user
        database: database
        password: password
        drivername: postgresql+pg8000
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>MSSQL</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MSSQL
      connectorname: MSSQL
      schemaname: dbo
      config:
        host: hostname
        #Remove the port property if not configured
        port: 1433
        username: user
        database: database
        password: password
        drivername: mssql+pyodbc
        #if ODBC Driver 18 for SQL Server is installed, use the following driver: ODBC+Driver+18+for+SQL+Server
        driver: ODBC+Driver+17+for+SQL+Server 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>MSSQLINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MSSQL
      connectorname: MSSQL
      schemaname: dbo
      config:
        host: hostname
        port: 1433
        username: user
        database: database
        password: password
        drivername: mssql+pyodbc
        #if ODBC Driver 18 for SQL Server is installed, use the following driver: ODBC+Driver+18+for+SQL+Server
        driver: ODBC+Driver+17+for+SQL+Server 
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication-value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>MySQL</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MySQL
      connectorname: MySQL
      config:
        host: hostname
        port: 3306
        username: user
        database: database
        password: password
        drivername: mysql+pymysql
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>MySQLINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: MySQL
      connectorname: MySQL
      config:
        host: hostname
        port: 3306
        username: user
        database: database
        password: password
        drivername: mysql+pymysql
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication-value
      ]]>
    </yaml>
  </extractor>

  <extractor>
    <name>Oracle</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Oracle
      connectorname: Oracle
      config:
        host: hostname
        port: 1521
        username: user
        database: database
        password: password
        service_name: service_name
        drivername: oracle+oracledb
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>OracleINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Oracle
      # Thin Mode only suppported. 
      connectorname: Oracle
      config:
        host: hostname
        port: 1521
        username: user
        database: database
        password: password
        #if you dont have ServiceName remove the service_name property .  
        service_name: service_name
        drivername: oracle+oracledb
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication-value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>OpenAPI</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: OpenAPI
      connectorname: OpenAPI
      config:
        ymlURL: 
        ymlPath: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Facebook Ads</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Facebook Ads
      connectorname: Facebook Ads
      config:
        access_token: <>
        account_id: <>
      properties:
        type: insights
        initial_load_past_days: 30
        attribution_window_days_lag: 7
        time_increment_days: 1
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>GitHub</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Github
      connectorname: GitHub
      config:
        access_token: <>
      properties:
        type: reactions / repo_events
        owner: 
        repo:
        items_per_page: 
        max_items: 
        max_item_age_seconds:
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google Ads</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Ads
      connectorname: Google Ads
      config:
        project_id: 
        client_id: 
        client_secret: 
        dev_token: 
        customer_id: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google AdsAuth</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Ads
      connectorname: Google Ads
      config:
        project_id: 
        client_id: {0}
        client_secret: {1}
        dev_token: 
        customer_id: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google Analytics</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Analytics
      connectorname: Google Analytics
      config:
        project_id: 
        client_email: 
        private_key:
        type: Service 
      properties:
        property_id: 
        queries: 
        start_date: 
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google AnalyticsAuth</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Analytics
      connectorname: Google Analytics
      config:
        project_id: 
        client_id: {0}
        client_secret: {1} 
        type: OAuth 
      properties:
        property_id: 
        queries: 
        start_date: 
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google Sheets</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Sheets
      connectorname: Google Sheets
      config:
        project_id: 
        client_email: 
        private_key: 
        type: Service
      properties:
        spreadsheet_url_or_id: 
        # range_names value should be range_names: "range_name1", "range_name2"
        range_names: 
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Google SheetsAuth</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Google Sheets
      connectorname: Google Sheets
      config:
        project_id: 
        client_id: {0}
        client_secret: {1} 
        type: OAuth
      properties:
        spreadsheet_url_or_id: 
        # range_names value should be range_names: "range_name1", "range_name2"
        range_names: 
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>HubSpot</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: HubSpot
      connectorname: HubSpot
      config:
        api_key: <>
      properties:
        includehistory: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Matomo</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Matomo
      connectorname: Matomo
      config:
        api_token: <>
        url: 
      properties:
        type: 
        queries: 
        site_id: 
        initial_load_past_days: 
        live_events_site_id : 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Notion</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Notion
      connectorname: Notion
      config:
        api_key: <>
      properties:
        selcted_database_ids: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Mux</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Mux
      connectorname: Mux
      config:
        mux_api_access_token: <>
        mux_api_access_key: <> 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Personio</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Personio
      connectorname: Personio
      config:
        client_id: <>
        client_secret: <> 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Pipedrive</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Pipedrive
      connectorname: Pipedrive
      config:
        pipedrive_api_key: <>
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Salesforce</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Salesforce
      connectorname: Salesforce
      config:
        username: username
        password: password
        security_token: <>
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Strapi</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Strapi
      connectorname: Strapi
      config:
        api_secret_key: <>
        domain: domain
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Jira</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Jira
      connectorname: Jira
      config:
        sudomain: subdomain
        email: email
        api_token: <> 
      properties:
        queries: "created >= -30d order by created DESC"
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>FileSystem</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      config:
        account_key: <account_key>
      properties:
        storage: local/azure
        type: excel/csv/json/yaml
        # sheetname is required for excel type
        sheetname: <sheetname>
        filePath: <Uploaded filename>
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>FileSystemCSV</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      config:
      properties:
        type: csv
        filePath: localfilepath
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>FileSystemJson</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      config:
      properties:
        type: jsonl
        filePath: localfilepath
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Slack</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Slack
      connectorname: Slack
      config:
        access_token: <>
      properties:
        page_size:
        start_date:
        end_date:  
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Workable</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Workable
      connectorname: Workable
      config:
        access_token: <>
        sub_domain: 
      properties:
        since_timestamp:
        since_timestamp: 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Stripe</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: Stripe
      connectorname: Stripe
      config:
        stripe_secret_key: <>
      select:
        - endpoint
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskSupport</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskSupport
      connectorname: ZendeskSupport
      config:
        subdomain: subdomain
        email: mail
        password: password
        token: <>
        Oauth token: <> 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskSupportINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskSupport
      connectorname: ZendeskSupport
      config:
        subdomain: subdomain
        email: mail
        password: password
        token: <>
        Oauth token: <> 
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskChat</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskChat
      connectorname: ZendeskChat
      config:
        subdomain: subdomain
        Oauth token: <> 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskChatINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskChat
      connectorname: ZendeskChat
      config:
        subdomain: subdomain
        Oauth token: <> 
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskTalk</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskTalk
      connectorname: ZendeskTalk
      config:
        subdomain: subdomain
        email: mail
        password: password
        token: <>
        Oauth token: <> 
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ZendeskTalkINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: ZendeskTalk
      connectorname: ZendeskTalk
      config:
        subdomain: subdomain
        email: mail
        password: password
        token: <>
        Oauth token: <> 
      select:
        - tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: replication_key
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Web</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: web
      #Json Response only supported
      connectorname: Web
      config:
        url: 
        type: get        
        # Param should be in json format => param: { 'key1': 'value1', 'key2': 'value2' } 
        param:         
        # data should be in json format => data: { 'data1': 'value1', 'data2': 'value2' } 
        data:
        # Headers should be in json format => headers: { 'ContentType': 'application/json', 'x-api-key': 'somevalue' } 
        headers:
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>WebPost</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: web
      #Json Response only supported
      connectorname: Web
      config:
        url: 
        type: post        
        # Param should be in json format => param: { 'key1': 'value1', 'key2': 'value2' } 
        param:         
        # data should be in json format => data: { 'data1': 'value1', 'data2': 'value2' } 
        data:
        # Headers should be in json format => headers: { 'ContentType': 'application/json', 'x-api-key': 'somevalue' } 
        headers:
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>WebAuth</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: web
      #Json Response only supported
      connectorname: Web
      config:
        url: 
        # Basic Authentication
        username: username 
        password: password
        type: get        
        # Param should be in json format => param: { 'key1': 'value1', 'key2': 'value2' } 
        param:         
        # data should be in json format => data: { 'data1': 'value1', 'data2': 'value2' } 
        data:
        # Headers should be in json format => headers: { 'ContentType': 'application/json', 'x-api-key': 'somevalue' } 
        headers:
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>WebPostAuth</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: web
      #Json Response only supported
      connectorname: Web
      config:
        url: 
        # Basic Authentication
        username: username 
        password: password
        type: post        
        # Param should be in json format => param: { 'key1': 'value1', 'key2': 'value2' } 
        param:         
        # data should be in json format => data: { 'data1': 'value1', 'data2': 'value2' } 
        data:
        # Headers should be in json format => headers: { 'ContentType': 'application/json', 'x-api-key': 'somevalue' } 
        headers:
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>PythonScript</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    # Please add below lines in your python script to move dataframe data into table and upload the script in the extractor
    # pipeline.run(yourdataframename, table_name="yourtablename")
    - name: pyscript1
      #Json Response only supported
      connectorname: PythonScript
      config:
        filePath: <Path>
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>DynamoDB</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: DynamoDB
      connectorname: DynamoDB
      config:
        access_key_id: 
        secret_access_key:
        region:
        # Either use date filter or page_size
        column_name: 
        date:
        limit:  
      select:
        - tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearch</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearchINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: 'replication_key'
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearchDate</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
        lastmodified: 'columnname'
        interval_type: hours/minutes/year/month/days
        interval_value: 1
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearchDateINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
        lastmodified: 'columnname'
        interval_type: hours/minutes/year/month/days
        interval_value: 1
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: 'replication_key'
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearchQuery</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
        # query example - {"query": {"range": {"@timestamp": {"gte": "2024-02-22T00:00:00"}}}}
        query: <Json format>tablename
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>ElasticSearchQueryINC</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: es
      #Json Response only supported
      connectorname: ElasticSearch
      config:
        host: hostname
        port: 9200
        api_key: api_key 
        username: user 
        password: password 
        index_name: <indexname>
        page_size: 10000
        # query example - {"query": {"range": {"@timestamp": {"gte": "2024-02-22T00:00:00"}}}}
        query: <Json format>tablename
      metadata:
        tablename:
          replication_method: INCREMENTAL
          replication_key: 'replication_key'
          replication_value: replication_value
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>CSV</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      properties:
        storage: local
        type: csv
        filePath: <Uploaded filename>
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Excel</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      config:
      properties:
        storage: local
        type: excel
        # sheetname is required for excel type
        sheetname: sheetname
        filePath: <Uploaded filename>
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Json</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      properties:
        storage: local
        type: json
        filePath: <Uploaded filename>
      ]]>
    </yaml>
  </extractor>
  <extractor>
    <name>Yaml</name>
    <yaml>
      <![CDATA[
version: 1.0.1
destination: 
plugins:
  extractors:
    - name: FileSystem
      connectorname: FileSystem
      properties:
        storage: local
        type: yaml
        filePath: <Uploaded filename>
      ]]>
    </yaml>
  </extractor>
</Connector>
