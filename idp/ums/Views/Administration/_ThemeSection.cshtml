@{
    var hasBoldBIOnPremise = ViewData["hasBoldBIOnPremise"].ToString() == "True";
    var hasBoldReportsOnPremise = ViewData["hasBoldReportsOnPremise"].ToString() == "True";
    var isCommonDeployment = ViewData["isCommonDeployment"].ToString() == "True";
}
<div class=" @(@isCommonDeployment || @hasBoldBIOnPremise ? "show" : "hide")">
    <div class="sub-section last-sub-section col-xs-12  no-padding theme-section">
        <h3 class="title sub-section-heading">@T["Theme"]</h3>

        <div class="form-group section-content-first">
            @Html.Label("appearance", T["Mode"].Value, new { @class = "app-textbox-label" })
            <div id="appearance-container">
                <div class="light-theme radio-button-section" id="light">
                    <input type="radio" id="light-theme" name="appearance" class="css-radio" value="light" @(GlobalAppSettings.SystemSettings.Theme.Appearance == AppearanceTheme.Light.ToString().ToLower() ? "checked" : string.Empty) />
                    <label for="light-theme" class="app-textbox-label radio-btn-label notransition">@T["Light"]</label>
                </div>
                <div class="dark-theme radio-button-section" id="dark">
                    <input type="radio" id="dark-theme" name="appearance" class="css-radio" value="dark" @(GlobalAppSettings.SystemSettings.Theme.Appearance == AppearanceTheme.Dark.ToString().ToLower() ? "checked" : string.Empty) />
                    <label for="dark-theme" class="app-textbox-label radio-btn-label notransition">@T["Dark"]</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("application-theme", T["Custom Theme"].Value, new { @class = "app-textbox-label" })
            <p class="upload-link-btn">
                <a href="#"  id="woff-upload" title="@T["Upload the theme file here."]">@T["Manage"]</a>
            </p>
            <div class="admin-settings-drop-down col-lg-12 no-padding section-dropdown-content-first">
                @Html.DropDownList("application-theme", ViewBag.ApplicationTheme as IEnumerable<SelectListItem>, new { id = "application-theme", @class = "admin-settings-drop-down", data_none_results_text = T["No results match"].Value, data_size = "5", data_live_search = "false" })
                <div class="info-message no-padding">@T["A custom theme can use either a dark or light mode. It is not possible to utilize a single custom theme for both mode. Please choose a custom theme based on the mode of your application. To remove the custom theme, please select the default theme."]</div>
            </div>
            
        </div>
        <div class="form-group">
            @Html.Label("dashboard-theme", T["Dashboard Theme"].Value, new { @class = "app-textbox-label" })
            <p class="upload-link-btn">
                <a href="#" id="woff-dashboard-upload" title="@T["Upload the theme file here."]">@T["Manage"]</a>
            </p>
            <div class="admin-settings-drop-down col-lg-12 no-padding">
                @Html.DropDownList("dashboard-theme", ViewBag.DashboardTheme as IEnumerable<SelectListItem>, new { id = "dashboard-theme", @class = "admin-settings-drop-down", data_none_results_text = T["No results match"].Value, data_size = "5", data_live_search = "false" })
            </div>
        </div>
    </div>
</div>