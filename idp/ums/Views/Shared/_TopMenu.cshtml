@{
    var isAdmin = Context.Session.GetString("IsAdmin") != null ? Convert.ToBoolean(Context.Session.GetString("IsAdmin").ToString()) : false;

    var idPUrl = GlobalAppSettings.SystemSettings.InternalAppUrls.Idp;

    var userId = Guid.Parse(Context.User.Claims.First(c => c.Type == ClaimTypes.NameIdentifier).Value);

    var requestUrl = new Uri(this.Context.Request.GetDisplayUrl());
    var currentUrlLocalPath = requestUrl.PathAndQuery.ToLower();

    var currentUrl = requestUrl.ToString().TrimEnd('/');

    var isImageRequest = currentUrl.IndexOf(".png", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".jpg", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".gif", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".svg", StringComparison.CurrentCultureIgnoreCase) > 0;

    var profilePageUrl = Url.Action("Profilepage", "User");

    var displayName = Context.Session.GetString("displayname") != null ? Context.Session.GetString("displayname").ToString() : string.Empty;

    var emailAddress = Context.Session.GetString("emailaddress") != null ? Context.Session.GetString("emailaddress").ToString() : string.Empty;

    var username = Context.Session.GetString("username") != null ? Context.Session.GetString("username").ToString() : string.Empty;

    var idpreferenceId = Context.Session.GetString("idpReferenceId") != null ? Context.Session.GetString("idpReferenceId").ToString() : string.Empty;

    var adminType = (AdminType)Enum.Parse(typeof(AdminType), Context.Session.GetString("AdminType"));

    var profilePicture = idPUrl + Url.Content("/User/Avatar?id=" + userId + "&ImageSize=64");

    var isHomePage = currentUrlLocalPath.TrimEnd('/') == Url.Action("Homepage", "Home") || currentUrlLocalPath.TrimEnd('/') + "/homepage" == Url.Action("Homepage", "Home");

    var isMobile = DeviceDetection.IsMobile(Context);

    var defaultAppLogo = GlobalAppSettings.Branding == AppBranding.Bold.Identifier ? GlobalAppSettings.CdnDomain + "/static/company/boldid/logo/v1/" + CloudAppConfig.Branding.BrandingImages.MainLogo : GlobalAppSettings.SystemSettings.CDNLink + "/images/" + CloudAppConfig.AppBranding + "/application/" + CloudAppConfig.Branding.BrandingImages.MainLogo;
    var appLogo = (GlobalAppSettings.SystemSettings.MainScreenLogo.EndsWith(CloudAppConfig.Branding.BrandingImages.MainLogo) || GlobalAppSettings.SystemSettings.MainScreenLogo.EndsWith("main_logo.png")) ? defaultAppLogo : GlobalAppSettings.SystemSettings.MainScreenLogo;
    var profilePictureUrl = idPUrl + Url.Content("/User/Avatar?id=" + idpreferenceId).TrimEnd('/');
    var imageUrl = idPUrl;
    var healthCheckUrl = idPUrl + "/status";
}

    @if (!isMobile)
    {
        <nav id="top-nav" class="sf-nav-group mobile-hidden">
            <ul class="icon-list">
                @if (CloudAppConfig.IsSelfHosted && (adminType == AdminType.SuperAdmin || adminType == AdminType.AppAdmin))
                {
                <li class="icon-item help-icon-item">
                        <a class="dropdown-toggle" data-toggle="dropdown">
                        <span class="icon-container">
                                <i class="su su-help"></i>
                            </span>
                        </a>
                        <ul class="dropdown-menu top-menu no-margin" role="menu">
                            <li class="top-menu-item-title">
                                <div>@T["Help"]</div>
                            </li>
                            <li class="top-menu-item">
                                <a id="download-log">
                                    @T["Get diagnostic logs"]
                                </a>
                            </li>
                            <li class="top-menu-item">
                                <a href="@healthCheckUrl">
                                    @T["Health check"]
                                </a>
                            </li>
                            <li class="top-menu-item-title">
                                <div>@T["About"]</div>
                            </li>
                            <li class="top-menu-item">
                                <a href="@Url.Action("DisplayBoldServiceVersion", "Administration")">
                                    @T["Product version"]
                                </a>
                            </li>
                        </ul>
                    </li>
                }
                <li class="profile-section dropup">
                    <a class="dropdown-toggle" data-toggle="dropdown">
                        <span class="icon-container">
                        <span class="profile-pic-tag" data-id="@userId" data-type="user" data-display-name="@displayName" data-image-size="32" data-toggle="tooltip" title="@displayName" data-placement="bottom" data-url="@imageUrl" style="border-radius:50%"></span>
                        </span>
                    </a>
                    <ul class="dropdown-menu top-menu" role="menu">
                        <li class="top-menu-item top-menu-profile">
                            <div class="top-menu-profile-text-padding">@T["Profile"]</div>
                            <a rel="alternate" hreflang="en" href="@idPUrl/user/profile">
                                <div class="top-menu-profile-hover">
                                <div class="profile-pic-tag" data-id="@userId" data-type="user" data-display-name="@displayName" data-image-size="40" data-url="@imageUrl" style="border-radius:50%"></div>
                                    <div class="top-menu-user-name">
                                        <div class="top-menu-user-name-style">@displayName</div>
                                        @if (emailAddress.Contains(CloudAppConfig.AutoGeneratedEmailDomain))
                                        {
                                            <div class="top-menu-user-name-style">@username</div>
                                        }
                                        else
                                        {
                                            <div class="top-menu-user-email-style">@emailAddress</div>
                                        }
                                    </div>
                                </div>
                            </a>
                        </li>
                        <li class="sf-top-menu-separator"></li>
                        <li class="top-menu-item">
                            <a href="@Url.Action("logout", "accounts")?returnUrl=@currentUrlLocalPath">
                                @T["Sign out"]
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>
    }