@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.DataClasses;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Http.Extensions;
@using System.Linq;
@using System.Security.Claims;
@{
    var displayName = Context.Session.GetString("displayname") != null ? Context.Session.GetString("displayname").ToString() : string.Empty;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());

    var currentUrlLocalPath = requestUrl.LocalPath.ToLower();

    var currentUrl = requestUrl.ToString().TrimEnd('/');

    var isImageRequest = currentUrl.IndexOf(".png", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".jpg", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".gif", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".svg", StringComparison.CurrentCultureIgnoreCase) > 0;

    var idPUrl = GlobalAppSettings.SystemSettings.BaseUrl.TrimEnd('/');
    var profilePageUrl = $"{idPUrl}/user/profile";

    var isAdmin = await new UserManagement().IsAdmin(Guid.Parse(Context.User.Claims.First(c => c.Type == ClaimTypes.NameIdentifier).Value));
    var tenantSitesUrl = CloudAppConfig.TenantManagementUrl(Context) + "/sites";
    var tenantUsersUrl = CloudAppConfig.TenantManagementUrl(Context) + "/administration/user-management/users";
    var tenantSettingsUrl = CloudAppConfig.TenantManagementUrl(Context) + "/administration";
    var emailAddress = Context.Session.GetString("emailaddress") != null ? Context.Session.GetString("emailaddress").ToString() : string.Empty;
    var username = Context.Session.GetString("username") != null ? Context.Session.GetString("username").ToString() : string.Empty;
    AdminType adminType = (AdminType)Enum.Parse(typeof(AdminType), Context.Session.GetString("AdminType"));
    var userId = Context.User.Claims.First(c => c.Type == ClaimTypes.NameIdentifier).Value;
    var imageUrl = GlobalAppSettings.SystemSettings.InternalAppUrls.Idp;
}

<nav id="top-nav" class="sf-nav-group mobile-hidden">
    <ul class="icon-list">
        <li class="profile-section dropup">
            <a class="dropdown-toggle text-decoration-none" data-bs-toggle="dropdown">
                <span class="icon-container">
                    <span class="profile-pic-tag" data-id="@userId" data-type="user" data-display-name="@displayName" data-image-size="32" data-bs-toggle="tooltip" title="@displayName" data-bs-placement="bottom" data-url="@imageUrl" style="border-radius:50%"></span>
                </span>
            </a>
            <ul class="dropdown-menu top-menu" role="menu">
                <li class="top-menu-item top-menu-profile">
                    <div class="top-menu-profile-text-padding">@T["Profile"]</div>
                    <a href="/user/profile" class="top-menu-profile-height text-decoration-none">
                        <div class="top-menu-profile-hover">
                            <div class="profile-pic-tag" data-id="@userId" data-type="user" data-display-name="@displayName" data-image-size="40" data-url="@imageUrl" style="border-radius:50%"></div>
                            <div class="top-menu-user-name">
                                <div class="top-menu-user-name-style">@displayName</div>
                                @if (emailAddress.Contains(CloudAppConfig.AutoGeneratedEmailDomain))
                                {
                                    <div class="top-menu-user-name-style">@username</div>
                                }
                                else
                                {
                                    <div class="top-menu-user-email-style">@emailAddress</div>
                                }
                            </div>
                        </div>
                    </a>
                </li>
                <li class="sf-top-menu-separator"></li>
                <li class="top-menu-item">
                    <a href="@Url.Action("logout", "accounts")?returnUrl=@currentUrlLocalPath" class="text-decoration-none">
                        @T["Sign out"]
                    </a>
                </li>
            </ul>
        </li>
    </ul>
</nav>

  <script nonce="@Context.Items["ScriptNonce"]">
    var UserNameElementLength = $(".top-menu-user-name").find(".top-menu-user-name-style").text().length;
    var UserEmailElementLength = $(".top-menu-user-name").find(".top-menu-user-email-style").text().length;
    if (UserNameElementLength > 21 || UserEmailElementLength > 25) {
        $(".top-menu-profile-hover").attr("title", "<span class='tooltip-row'>@displayName</span><br><span class='tooltip-row'>@emailAddress</span>");
        var tooltipTriggers = document.querySelectorAll('.top-menu-profile-hover');
        tooltipTriggers.forEach(function (tooltipTrigger) {
            new bootstrap.Tooltip(tooltipTrigger, {
                html: true
            });
        });
    }
</script>
