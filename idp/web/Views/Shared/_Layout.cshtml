@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.Middlewares;
@using Microsoft.AspNetCore.Http.Extensions;
@using System.Security.Claims;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Html
@{
    var reqUrl = new Uri(Context.Request.GetDisplayUrl());
    var requestUrl = reqUrl.AbsolutePath.ToLower();

    //To show or hide menu for mobile devices
    var menuClass = DeviceDetection.IsMobile(Context) ? "collapse width" : "collapse in";

    var includeMessageBox = ViewBag.MessageBox == null || ViewBag.MessageBox == true;

    var userId = Context != null && Context.User != null && Context.Request.IsHttps ? Context.User.GetUserId() : Guid.Empty;

    var isWelcomePage = ViewBag.IsWelcomePage != null && ViewBag.IsWelcomePage;
    var headerTitle = ViewBag.HeaderTitle != null ? ViewBag.HeaderTitle : GlobalAppSettings.SystemSettings.OrganizationName;
    var dateFormat = string.IsNullOrWhiteSpace(_clientDateTimeInfo.ClientDateTime.DateFormat) ? GlobalAppSettings.SystemSettings.DateFormat : _clientDateTimeInfo.ClientDateTime.DateFormat;
    var cookieValue = string.IsNullOrWhiteSpace(Context.Request.Cookies["boldservice.client.locale"]) ? string.Empty : Context.Request.Cookies["boldservice.client.locale"];
    var encodedCookieValue = new HtmlString(cookieValue);
    var isMobile = DeviceDetection.IsMobile(Context);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
    <partial name="_OGPContent" />
    @RenderSection("meta", false)
    @await Html.PartialAsync("_PasswordPolicyRules")
    <title>
        @ViewBag.Title
    </title>
    @await Html.PartialAsync("_Favicon")
    <link rel="stylesheet" href="@CloudAppConfig.TenantManagementUrl(Context).TrimEnd('/')/bundles/css/cssloader.css" asp-append-version="true" />

    <script nonce="@Context.Items["ScriptNonce"]">
        var rootUrl = "";
        var baseurl = "";
        var setCookieHttpOnlyUrl = "@Url.Action("SetHttpOnlyCookie", "PartialView")";
        var cookieValue = JSON.stringify(@encodedCookieValue);
        var value = {
            Locale: navigator.language,
            TimeZone: Intl.DateTimeFormat().resolvedOptions().timeZone
        };

        setTimeout(function () {
            if (isEmptyOrWhitespace(cookieValue) || cookieValue != JSON.stringify(value)) {
                SetHttpOnlyCookie("boldservice.client.locale", JSON.stringify(value), 365);
            }
        }, 5000);
    </script>

    @await Html.PartialAsync("../Shared/_FontReference")
    @await Html.PartialAsync("../Shared/_ThemeReference")

    <link rel="stylesheet" href="~/bundles/css/layout.css" integrity="@IntegrityTagHelper.GetIntegrity("bundles/css/layout.css")" crossorigin="anonymous" asp-append-version="true" />
    @RenderSection("styles", false)

    <script nonce="@Context.Items["ScriptNonce"]" src="~/bundles/js/layout.js" integrity="@IntegrityTagHelper.GetIntegrity("bundles/js/layout.js")" crossorigin="anonymous" asp-append-version="true"></script>
    <script nonce="@Context.Items["ScriptNonce"]" src="~/bundles/js/ej2.js" integrity="@IntegrityTagHelper.GetIntegrity("bundles/js/ej2.js")" crossorigin="anonymous" asp-append-version="true"></script>
</head>
<body ng-app="serverApp" class="clearfix" id="body">
    <div class="loader-blue loader-icon" id="layout-body-loader-icon">
        <svg class="circular">
            <circle class="path" cx="27" cy="27" r="20" fill="none" stroke-width="4" stroke-miterlimit="10"></circle>
        </svg>
    </div>
    <div id="server-app-container" style="opacity: 0">
        @await Html.PartialAsync("~/Views/Shared/_LocalizationContent.cshtml")
        <section id="header-area" class="mobile-visible">
            <div class="header-bar col-lg-12 col-md-12 col-sm-12 float-start">
                @if (!isWelcomePage)
                {
                    <div class="mobile-menu-icon text-center mobile-visible collapsed" data-bs-toggle="collapse" aria-expanded="false" data-target="#menu-area">
                        <span>
                            <i class="su su-mobile-menu-icon"></i>
                        </span>
                    </div>
                }
                <div class="org-name-wrapper">
                    <h5 class="header-org-name">@headerTitle</h5>
                </div>

                <div class="float-end" id="notification-section">
                    <a id="notification-link" class="notification-mobile-link no-padding text-decoration-none" href="@Url.Action("getusernotifications", "notification")">
                    </a>
                </div>
            </div>
        </section>
        <section id="menu-area" class="collapse">

            @if (isMobile)
            {
                if (requestUrl == "/user/profile" || requestUrl == "/profile/change-password")
                {
                    @await Html.PartialAsync("../Shared/_ProfileMenu")
                }
            }
            else
            {
                @await Html.PartialAsync("../Shared/_Menu")
            }

        </section>
        <div id="content-area" class="clearfix">
            @RenderSection("MainSection", true)
            <div id="success-alert">
                <div id="image-container">
                    <img src="@GlobalAppSettings.SystemSettings.CDNLink/images/success-toast.svg" />
                </div>
                <div id="message">
                    <h1 id="message-header"></h1>
                    <span id="message-content"></span>
                </div>
                <div class="close-div">
                    <i class="su su-close"></i>
                </div>
            </div>
            <div id="warning-alert">
                <div id="image-container">
                    <img src="@GlobalAppSettings.SystemSettings.CDNLink/images/warning-image.jpg" />
                </div>
                <div id="message">
                    <h1 id="message-header"></h1>
                    <span id="message-content"></span><span id="view" class="view-more">@T["View more"]</span>
                    <div id="container">
                        <textarea id="text-error-area" class="scroller" name="text" value=""></textarea>
                        <span id="copy-error-area" class="float-end app-hyperlink" data-bs-toggle="tooltip" title="@T["Click to copy"]"><span class="su su-copy"></span></span>
                    </div>
                </div>
                <div class="close-div">
                    <i class="su su-close"></i>
                </div>
            </div>
        </div>

        @if (includeMessageBox)
        {
            <div id="messageBox">
                <div class="message-box-close"></div>
                <div class="message-content text-center"></div>
            </div>
        }
    </div>

    <div class="page-additional-navigation">
        <input id="userName" type="hidden" @*value="@userId"*@ />
        <input id="BaseUrlHidden" type="hidden" value="/" />
        <input id="baseurl" name="baseurl" type="hidden" value="" />
        <input id="DateFormat" name="DateFormat" type="hidden" value="@dateFormat" />
    </div>
    <div id="alert-notification">
    </div>

    <div id="mobile-menu" style="display: none">
        <input type="hidden" class="page-name" id="page" data-content="" />

        <div id="menu-list">
        </div>

        <div id="notification" class="float-end hidden">
            <div id="notification_area_link">
                <a href="@Url.Action("getusernotifications", "notification")" class="text-decoration-none">
                    <span id="notification_area_icon" class="su su-notification-alert float-start">
                    </span>
                </a>
            </div>
        </div>

    </div>

    @RenderSection("scripts", false)

    @if (isMobile)
    {
        <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">
            $(document).ready(function () {
                function nextEvent() {
                    $(this).on('touchend', function (e) {

                        window.location.href = ($(this).attr("href"));
                        $(this).off('touchend');
                    });
                    $(this).on('touchmove', function (e) {
                        $(this).off('touchend');
                    });
                }

                $('#main-nav a, .items a, .notification-mobile-link, .menu-options a, .notification-text-content a, .admin-page-header a, #edit-profile-heading-div a, #change-password-btn a').on('click touchstart', this, nextEvent);

                $(window).on('popstate', function (e) {
                });

                $(document).on('touchend', function (e) {
                    $(".tooltip").hide();
                });
                ej.popups.createSpinner({
                    target: document.getElementById('body')
                });

            });


        </script>
    }
    @if (includeMessageBox)
    {
        <script nonce="@Context.Items["ScriptNonce"]">
            $(document).ready(function () {

                var messageBoxDialog = new ej.popups.Dialog({
                    header: "title",
                    width: (window.innerWidth > 460) ? "472px" : (window.innerWidth - 10),
                    visible: false,
                    allowDragging: true,
                    height: "auto",
                    isModal: true,
                    footerTemplate: "footer",
                    close: "onMessageDialogClose"
                });
                messageBoxDialog.appendTo("#messageBox");
            });
        </script>
    }
</body>
</html>