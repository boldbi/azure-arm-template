@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.DataClasses;
@using Syncfusion.Server.Base.Localization;
@inject LocalizationHandler localization;

@{
    Layout = "~/Views/Shared/_Layout.Accounts.cshtml";
    ViewBag.Title = $"{T["Account Recovery"].Value} - {GlobalAppSettings.SystemSettings.OrganizationName}";
    var email = ViewBag.Email;
    var accountNotExist = ViewBag.AccountNotExist != null ? ViewBag.AccountNotExist : false;
    var isMaximumLimitReached = ViewBag.IsMaximumRateLimitReached != null ? ViewBag.IsMaximumRateLimitReached : false;
    var maskedEmail = new UserManagement().GetMaskedEmailString(email);
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/accounts-code-confirmation.css" integrity="@IntegrityTagHelper.GetIntegrity("bundles/css/accounts-code-confirmation.css")" crossorigin="anonymous" asp-append-version="true" />
}

@section scripts{
       <script nonce="@Context.Items["ScriptNonce"]">
        var email = "@email";
        $(document).ready(function () {
            $(document).on("click", ".forgot-pwd-link", function (event) {
                showWaitingPopup('body');
            });
        });

        $(document).on("click", "#mail-resend", function (event) {
            event.preventDefault();
            if (email != "" && email != undefined) {
                localStorage.setItem(window.location.hostname + "_email", email);
            }

            window.location.href = $(this).attr("href");
        });
    </script>
}

@section MainSection{
    <div class="code-confirmation-body">
        <div class="icon-container">
            <div class="su su-tick"></div>
        </div>
        @if (isMaximumLimitReached)
        {
            <div class="status-message text-body">
                @T["You have attempted to recover your account too many times in a short period of time. Please try again later."]
            </div>
        }
        else if (ViewBag.IsAccountActivation)
        {
            <div class="status-message text-body">
            @Html.Raw(string.Format(T["An email with instructions on how to verify your account has been sent to {0}."].Value, maskedEmail))
            </div>
            <div class="text-body resend-verification">@T["If you have not received it, please click the following link."]</div>
            <input id="mail-resend" type="button" class="btn-holder link-button" href="@Url.Action("RecoverAccount","Accounts")?isaccountactivation=true" value="@T["Resend activation link"]">
            <div class="divider-light"></div>
            <div class="text-body expiration-time"><span class="info-icon">i</span><span class="message">@T["The verification link expires in 2 days!"]</span></div>
        }
        else if (accountNotExist)
        {
            <div class="status-message text-body">
                @if (email.ToString().Contains('@'))
                {
                    @Html.Raw(string.Format(T["An email with instructions on how to recover your password has been sent to {0} {1}"].Value, $"<a id='tenant-email' href='mailto:{email}'>{email}</a>", $"{localization.EmailNotExist}"))
                }
                else
                {
                    @Html.Raw(string.Format(T["An email with instructions on how to recover your password has been sent to {0}"].Value, string.Format(T[$"{localization.UsernameNotExist}"].Value, $"{email}")))
                }
                
            </div>
            <div class="text-body resend-verification">@T["If you have not received it, click the following link."]</div>
            <input id="mail-resend" type="button" class="btn-holder link-button" href="@Url.Action("RecoverAccount","Accounts")?isaccountactivation=false" value="@T["Resend recovery link"]">
            <div class="divider-light"></div>
            <div class="text-body expiration-time"><span class="info-icon">i</span><span class="message">@T["The recovery link expires in two hours!"]</span></div>
        }
        else
        {
            <div class="status-message text-body">
                @Html.Raw(string.Format(T["An email with instructions on how to recover your password has been sent to {0}."].Value, maskedEmail))
            </div>
            <div class="text-body resend-verification">@T["If you have not received it, click the following link."]</div>
            <input id="mail-resend" type="button" class="btn-holder link-button" href="@Url.Action("RecoverAccount","Accounts")?isaccountactivation=false" value="@T["Resend recovery link"]">
            <div class="divider-light"></div>
            <div class="text-body expiration-time"><span class="info-icon">i</span><span class="message">@T["The recovery link expires in two hours!"]</span></div>
        }

        <div class="back-button text-body"> <a href="@Url.Action("login","accounts")"><span>@T["Return to Sign in"]</span></a></div>
    </div>
}