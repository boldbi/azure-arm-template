@{
    var userId = ViewBag.UserId;
    var returnUrl = ViewBag.ReturnUrl;
    var remember = ViewBag.Remember;
    var email = ViewBag.Email;
    var userName = ViewBag.UserName;
    var isAutoGenerated = ViewBag.IsAutoGenerated;
    Layout = "~/Views/Shared/_Layout.Accounts.cshtml";
    var organizationName = (ViewBag.OrganizationName != null) ? ViewBag.OrganizationName : GlobalAppSettings.SystemSettings.OrganizationName;
    ViewBag.Title = $"{T["MFA Sign in"].Value}  - {organizationName}";
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/accounts.css" integrity="@IntegrityTagHelper.GetIntegrity("bundles/css/accounts.css")" crossorigin="anonymous" asp-append-version="true" />
}

@section scripts{
    <script nonce="@Context.Items["ScriptNonce"]" src="~/bundles/js/accountsmfa-login.js" integrity="@IntegrityTagHelper.GetIntegrity("bundles/js/accountsmfa-login.js")" crossorigin="anonymous" asp-append-version="true"></script>
       <script nonce="@Context.Items["ScriptNonce"]">
        var loginMfaVerificationCodeUrl = "@Url.Action("DisableMfa", "User")";
    </script>
}

@section MainSection{
    <div class="login-wrapper">
        <div class="login-body">
            <div id="alert-notification"></div>
            <form method="post" id="mfaVerification-form" name="mfaVerificationForm" class="login-form">
                @Html.AntiForgeryToken()
                <input type="hidden" value="@userId" name="userId"/>
                <input type="hidden" value="@returnUrl" name="returnUrl"/>
                <input type="hidden" value="@remember" name="remember"/>
                <h1 class="login-header">@T["Two-Factor Authentication"]</h1>
                <hr class="header-line">
                <div class="logged-in-user no-padding mfa-logged-text col-xs-12">
                    <p class="email-id"> @(@isAutoGenerated ? @userName : @email)</p>
                    <p class="email-info">@T["Enter the security code generated by your authenticator app."]</p>
                </div>

                <div class="login-fields">
                    <div class="input-field-form email">
                        <input type="text" value="" name="verificationCode" id="login-MfaVerification" class="login-email" placeholder="@T["Verification Code / Recovery Code"]" maxlength="11"/>
                        <div class="mail-loader-div"></div>
                        <span class="validation-holder"></span>
                        <span id="error-mfa" style="display: @(TempData["errorMfaMessage"] != null ? "block" : "none")">
                            @TempData["errorMfaMessage"]
                        </span>
                    </div>
                    <div class="mfaVerification-options">
                        <div id="skipMfa-Verification">
                            @Html.CheckBox("skipMfaVerification", new { @class = "material-checkbox pull-left", @id = "skipMfaVerification" })
                            @Html.Hidden("skipMfaVerification")
                            @Html.Label("skipMfaVerification", T["Don’t ask again on this device."].Value, new { @class = "disable-text-select", @id = "skipMfaVerification-label" })
                        </div>
                    </div>
                </div>
                <div class="continue-button">
                    <button class="login-button proceed-button" type="submit" name="Submit" id="mfaVerification-button" asp-route="PostLoginMfaVerificationCode">
                        @T["Verify & Continue"]
                    </button>
                </div>
            </form>
            <div class="backtologin-align"><a href="@Url.Action("Login", "Accounts")" class="backtologin-link" tabindex="6">@T["Back to Sign in page"]</a></div>
        </div>
    </div>

}
