@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.DataClasses;
@using System.Security.Claims;
@using Syncfusion.Server.Base.Localization;
@inject LocalizationHandler localization;

@{
    var returnUrl = ViewBag.ReturnUrl;
    var currentUserId = Context.User.GetUserId();
    var profileUrl = "profile";
}

<div role="tabpanel" class="tab-pane col-xs-12 no-padding" id="change-password-tab">
    <div id="change-password" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 admin-page-body">
        <form class="change-password-form">
            @Html.AntiForgeryToken()
            <input type="hidden" id="tenant-password-policy" data-policy-uppercase="True" data-policy-lowercase="True" data-policy-number="True" data-policy-specialcharacter="True" data-policy-partofusername="True" data-policy-minimumlength="6"/>

            <div class="col-xs-12 no-padding">
                <div class="col-xs-12 no-padding">
                    @Html.Label("current-password", T["Current Password"].Value, new { @class = "app-textbox-label" })
                    <span class="mandatory">*</span>
                </div>
                <div>
                    @Html.Password("fake-password", new { id = "fake-password", @class = "fake-password-avoid-autocomplete" })
                    @Html.Password("current-password", "", new { @class = "form-control notification-content password-fields-user-profile-edit", id = "current-password", autocomplete = "current-password", placeholder = T["Current Password"].Value, name = "old-password", maxlength = "4000" })
                    <span class="su su-show show-hide-password" id="show-newpassword" data-toggle="tooltip" data-original-title="@T["Click to view"]"></span>
                    <span id="old-password-validate" class="password-validate-holder validation-message"></span>
                </div>
            </div>
            <div class="col-xs-12 no-padding input-field-margin">
                <div class="col-xs-12 no-padding">
                    @Html.Label("new-password", T["New Password"].Value, new { @class = "app-textbox-label" })
                    <span class="mandatory">*</span>
                </div>
                <div>
                    <input type="password" id="new-password" class="form-control password-fields-user-profile-edit" placeholder="@T["New Password"]" name="new-password" autocomplete="off" maxlength="85" data-toggle="popover" data-title="@T["Password must contain:"]" data-trigger="focus" data-html="true" data-content="@PasswordPolicyManagement.DisplayMessageForPasswordPopover(localization)" data-placement="right"/>
                    <span class="su su-show show-hide-password" id="show-newpassword" data-toggle="tooltip" data-original-title="@T["Click to view"]"></span>
                    <span id="new-password-validate" class="password-validate-holder  validation-message"></span>
                </div>
            </div>
            <div id="confirm-password-section" class="col-xs-12 no-padding input-field-margin">
                <div class="col-xs-12 no-padding">
                    @Html.Label("confirm-password", T["Confirm Password"].Value, new { @class = "app-textbox-label" })
                    <span class="mandatory">*</span>
                </div>
                <div>
                    @Html.Password("confirm-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "confirm-password", autocomplete = "new-password", placeholder = T["Confirm Password"].Value, name = "confirm-password", maxlength = "4000" })
                    <span class="su su-show show-hide-password" id="show-newpassword" data-toggle="tooltip" data-original-title="@T["Click to view"]"></span>
                    <span id="confirm-password-validate" class="password-validate-holder validation-message"></span>
                </div>
            </div>
        </form>
    </div>
</div>